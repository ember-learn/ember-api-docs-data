{
  "data": {
    "id": "ember-data-4.0.2-AdapterError",
    "type": "class",
    "attributes": {
      "name": "AdapterError",
      "shortname": "AdapterError",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/adapter/error",
      "namespace": "",
      "file": "../adapter/addon/error.js",
      "line": 7,
      "description": "<html><head></head><body><p>A <code>AdapterError</code> is used by an adapter to signal that an error occurred\nduring a request to an external API. It indicates a generic error, and\nsubclasses are used to indicate specific error states. The following\nsubclasses are provided:</p>\n<ul>\n<li><code>InvalidError</code></li>\n<li><code>TimeoutError</code></li>\n<li><code>AbortError</code></li>\n<li><code>UnauthorizedError</code></li>\n<li><code>ForbiddenError</code></li>\n<li><code>NotFoundError</code></li>\n<li><code>ConflictError</code></li>\n<li><code>ServerError</code></li>\n</ul>\n<p>To create a custom error to signal a specific error state in communicating\nwith an external API, extend the <code>AdapterError</code>. For example, if the\nexternal API exclusively used HTTP <code>503 Service Unavailable</code> to indicate\nit was closed for maintenance:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">error.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> AdapterError <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/adapter/error&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> AdapterError.extend({ message: <span class=\"string\">&quot;Down for maintenance.&quot;</span> });</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>This error would then be returned by an adapter&apos;s <code>handleResponse</code> method:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">JSONAPIAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/json-api&apos;;\n<span class=\"keyword\">import</span> <span class=\"type\">MaintenanceError</span> from &apos;./maintenance-error&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">JSONAPIAdapter</span> </span>{\n  handleResponse(status) {\n    <span class=\"keyword\">if</span> (<span class=\"number\">503</span> === status) {\n      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"type\">MaintenanceError</span>();\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.handleResponse(...arguments);\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>And can then be detected in an application and used to send the user to an\n<code>under-maintenance</code> route:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/routes/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">Route</span> from &apos;<span class=\"meta\">@ember</span>/routing/route&apos;;\n<span class=\"keyword\">import</span> <span class=\"type\">MaintenanceError</span> from &apos;../adapters/maintenance-error&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationRoute</span> <span class=\"keyword\">extends</span> <span class=\"title\">Route</span> </span>{\n  actions: {\n    error(error, transition) {\n      <span class=\"keyword\">if</span> (error instanceof <span class=\"type\">MaintenanceError</span>) {\n        <span class=\"keyword\">this</span>.transitionTo(&apos;under-maintenance&apos;);\n        <span class=\"keyword\">return</span>;\n      }\n\n      <span class=\"comment\">// ...other error handling logic</span>\n    }\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>  @mainName @ember-data/adapter/error\n  @tag main</p>\n</body></html>",
      "_main": true,
      "access": "public",
      "tagname": "",
      "methods": [],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": [
          {
            "type": "class",
            "id": "ember-data-4.0.2-InvalidError"
          },
          {
            "type": "class",
            "id": "ember-data-4.0.2-TimeoutError"
          },
          {
            "type": "class",
            "id": "ember-data-4.0.2-AbortError"
          },
          {
            "type": "class",
            "id": "ember-data-4.0.2-UnauthorizedError"
          },
          {
            "type": "class",
            "id": "ember-data-4.0.2-ForbiddenError"
          },
          {
            "type": "class",
            "id": "ember-data-4.0.2-NotFoundError"
          },
          {
            "type": "class",
            "id": "ember-data-4.0.2-ConflictError"
          },
          {
            "type": "class",
            "id": "ember-data-4.0.2-ServerError"
          }
        ]
      },
      "module": {
        "data": {
          "id": "ember-data-4.0.2-@ember-data/adapter/error",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-4.0.2",
          "type": "project-version"
        }
      }
    }
  }
}