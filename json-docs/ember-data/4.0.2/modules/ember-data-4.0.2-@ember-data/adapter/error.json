{
  "data": {
    "id": "ember-data-4.0.2-@ember-data/adapter/error",
    "type": "module",
    "attributes": {
      "name": "@ember-data/adapter/error",
      "submodules": {},
      "elements": {},
      "fors": {
        "@ember-data/adapter/error": 1
      },
      "namespaces": {},
      "tag": "main",
      "file": "../adapter/addon/error.js",
      "line": 334,
      "description": "A `AdapterError` is used by an adapter to signal that an error occurred\nduring a request to an external API. It indicates a generic error, and\nsubclasses are used to indicate specific error states. The following\nsubclasses are provided:\n\n- `InvalidError`\n- `TimeoutError`\n- `AbortError`\n- `UnauthorizedError`\n- `ForbiddenError`\n- `NotFoundError`\n- `ConflictError`\n- `ServerError`\n\nTo create a custom error to signal a specific error state in communicating\nwith an external API, extend the `AdapterError`. For example, if the\nexternal API exclusively used HTTP `503 Service Unavailable` to indicate\nit was closed for maintenance:\n\n```js {data-filename=app/adapters/maintenance-error.js}\nimport AdapterError from '@ember-data/adapter/error';\n\nexport default AdapterError.extend({ message: \"Down for maintenance.\" });\n```\n\nThis error would then be returned by an adapter's `handleResponse` method:\n\n```js {data-filename=app/adapters/application.js}\nimport JSONAPIAdapter from '@ember-data/adapter/json-api';\nimport MaintenanceError from './maintenance-error';\n\nexport default class ApplicationAdapter extends JSONAPIAdapter {\n  handleResponse(status) {\n    if (503 === status) {\n      return new MaintenanceError();\n    }\n\n    return super.handleResponse(...arguments);\n  }\n}\n```\n\nAnd can then be detected in an application and used to send the user to an\n`under-maintenance` route:\n\n```js {data-filename=app/routes/application.js}\nimport Route from '@ember/routing/route';\nimport MaintenanceError from '../adapters/maintenance-error';\n\nexport default class ApplicationRoute extends Route {\n  actions: {\n    error(error, transition) {\n      if (error instanceof MaintenanceError) {\n        this.transitionTo('under-maintenance');\n        return;\n      }\n\n      // ...other error handling logic\n    }\n  }\n}\n```",
      "itemtype": "main",
      "parent": null,
      "publicclasses": [
        "AdapterError",
        "InvalidError",
        "TimeoutError",
        "AbortError",
        "UnauthorizedError",
        "ForbiddenError",
        "NotFoundError",
        "ConflictError",
        "ServerError"
      ],
      "privateclasses": [],
      "staticfunctions": {
        "@ember-data/adapter/error": [
          {
            "file": "../store/addon/-private/system/errors-utils.js",
            "line": 82,
            "description": "Convert an array of errors in JSON-API format into an object.\n\n```javascript\nimport DS from 'ember-data';\n\nconst { errorsArrayToHash } = DS;\n\nlet errorsArray = [\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be present',\n    source: { pointer: '/data/attributes/name' }\n  },\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be present',\n    source: { pointer: '/data/attributes/age' }\n  },\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be a number',\n    source: { pointer: '/data/attributes/age' }\n  }\n];\n\nlet errors = errorsArrayToHash(errorsArray);\n// {\n//   \"name\": [\"Must be present\"],\n//   \"age\":  [\"Must be present\", \"must be a number\"]\n// }\n```",
            "itemtype": "method",
            "name": "errorsArrayToHash",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "errors",
                "description": "array of errors in JSON-API format",
                "type": "Array"
              }
            ],
            "return": {
              "description": "",
              "type": "Object"
            },
            "class": "@ember-data/adapter/error",
            "module": "@ember-data/adapter/error"
          },
          {
            "file": "../store/addon/-private/system/errors-utils.js",
            "line": 12,
            "description": "Convert an hash of errors into an array with errors in JSON-API format.\n ```javascript\nimport DS from 'ember-data';\n\n const { errorsHashToArray } = DS;\n \n let errors = {\n  base: 'Invalid attributes on saving this record',\n  name: 'Must be present',\n  age: ['Must be present', 'Must be a number']\n};\n let errorsArray = errorsHashToArray(errors);\n// [\n//   {\n//     title: \"Invalid Document\",\n//     detail: \"Invalid attributes on saving this record\",\n//     source: { pointer: \"/data\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be present\",\n//     source: { pointer: \"/data/attributes/name\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be present\",\n//     source: { pointer: \"/data/attributes/age\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be a number\",\n//     source: { pointer: \"/data/attributes/age\" }\n//   }\n// ]\n```",
            "itemtype": "method",
            "name": "errorsHashToArray",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "errors",
                "description": "hash with errors as properties",
                "type": "Object"
              }
            ],
            "return": {
              "description": "array of errors in JSON-API format",
              "type": "Array"
            },
            "class": "@ember-data/adapter/error",
            "module": "@ember-data/adapter/error"
          }
        ]
      },
      "allstaticfunctions": {
        "@ember-data/adapter/error": [
          {
            "file": "../store/addon/-private/system/errors-utils.js",
            "line": 82,
            "description": "Convert an array of errors in JSON-API format into an object.\n\n```javascript\nimport DS from 'ember-data';\n\nconst { errorsArrayToHash } = DS;\n\nlet errorsArray = [\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be present',\n    source: { pointer: '/data/attributes/name' }\n  },\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be present',\n    source: { pointer: '/data/attributes/age' }\n  },\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be a number',\n    source: { pointer: '/data/attributes/age' }\n  }\n];\n\nlet errors = errorsArrayToHash(errorsArray);\n// {\n//   \"name\": [\"Must be present\"],\n//   \"age\":  [\"Must be present\", \"must be a number\"]\n// }\n```",
            "itemtype": "method",
            "name": "errorsArrayToHash",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "errors",
                "description": "array of errors in JSON-API format",
                "type": "Array"
              }
            ],
            "return": {
              "description": "",
              "type": "Object"
            },
            "class": "@ember-data/adapter/error",
            "module": "@ember-data/adapter/error"
          },
          {
            "file": "../store/addon/-private/system/errors-utils.js",
            "line": 12,
            "description": "Convert an hash of errors into an array with errors in JSON-API format.\n ```javascript\nimport DS from 'ember-data';\n\n const { errorsHashToArray } = DS;\n \n let errors = {\n  base: 'Invalid attributes on saving this record',\n  name: 'Must be present',\n  age: ['Must be present', 'Must be a number']\n};\n let errorsArray = errorsHashToArray(errors);\n// [\n//   {\n//     title: \"Invalid Document\",\n//     detail: \"Invalid attributes on saving this record\",\n//     source: { pointer: \"/data\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be present\",\n//     source: { pointer: \"/data/attributes/name\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be present\",\n//     source: { pointer: \"/data/attributes/age\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be a number\",\n//     source: { pointer: \"/data/attributes/age\" }\n//   }\n// ]\n```",
            "itemtype": "method",
            "name": "errorsHashToArray",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "errors",
                "description": "hash with errors as properties",
                "type": "Object"
              }
            ],
            "return": {
              "description": "array of errors in JSON-API format",
              "type": "Array"
            },
            "class": "@ember-data/adapter/error",
            "module": "@ember-data/adapter/error"
          }
        ]
      },
      "version": "4.0.2"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-data-4.0.2",
          "type": "project-version"
        }
      }
    }
  }
}