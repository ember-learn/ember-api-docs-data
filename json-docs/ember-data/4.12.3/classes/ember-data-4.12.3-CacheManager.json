{
  "data": {
    "id": "ember-data-4.12.3-CacheManager",
    "type": "class",
    "attributes": {
      "name": "CacheManager",
      "shortname": "CacheManager",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/store",
      "namespace": "",
      "file": "../store/src/-private/managers/cache-manager.ts",
      "line": 71,
      "description": "The CacheManager wraps a Cache enforcing that only\nthe public API surface area is exposed.\n\nHence, it is the value of `Store.cache`, wrapping\nthe cache instance returned by `Store.createCache`.\n\nThis class is the the return value of both the\n`recordDataFor` function supplied to the store\nhook `instantiateRecord`, and the `recordDataFor`\nmethod on the `CacheStoreWrapper`. It is not\ndirectly instantiatable.\n\nIt handles translating between cache versions when\nnecessary, for instance when a Store is configured\nto use both a v1 and a v2 cache depending on some\nheuristic.\n\nStarting with the v2 spec, the cache is designed such\nthat it must be implemented as a singleton. However,\nbecause the v1 spec was not designed for this whenever\nwe encounter any v1 cache we must wrap all caches, even\nsingletons, in non-singleton managers to preserve v1\ncompatibility.\n\nTo avoid this performance penalty being paid by all\napplications, singleton behavior may be opted-in via\nthe configuration supplied to your Ember application\nat build time. This effectively removes support for\nv1 caches.\n\n```js\nlet app = new EmberApp(defaults, {\n  emberData: {\n    useSingletonManager: true\n  },\n});\n```",
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 151,
          "description": "Cache the response to a request\n\nUnlike `store.push` which has UPSERT\nsemantics, `put` has `replace` semantics similar to\nthe `http` method `PUT`\n\nthe individually cacheabl\ne resource data it may contain\nshould upsert, but the document data surrounding it should\nfully replace any existing information\n\nNote that in order to support inserting arbitrary data\nto the cache that did not originate from a request `put`\nshould expect to sometimes encounter a document with only\na `content` member and therefor must not assume the existence\nof `request` and `response` on the document.",
          "itemtype": "method",
          "name": "put",
          "params": [
            {
              "name": "doc",
              "description": "",
              "type": "StructuredDocument"
            }
          ],
          "return": {
            "description": "",
            "type": "ResourceDocument"
          },
          "access": "public",
          "tagname": "",
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 186,
          "description": "Perform an operation on the cache to update the remote state.\n\nNote: currently the only valid operation is a MergeOperation\nwhich occurs when a collision of identifiers is detected.",
          "itemtype": "method",
          "name": "patch",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "op",
              "description": "the operation to perform"
            }
          ],
          "return": {
            "description": "",
            "type": "Void"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 205,
          "description": "Update resource data with a local mutation. Currently supports operations\non relationships only.",
          "itemtype": "method",
          "name": "mutate",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "mutation",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 259,
          "description": "Peek resource data from the Cache.\n\nIn development, if the return value\nis JSON the return value\nwill be deep-cloned and deep-frozen\nto prevent mutation thereby enforcing cache\nImmutability.\n\nThis form of peek is useful for implementations\nthat want to feed raw-data from cache to the UI\nor which want to interact with a blob of data\ndirectly from the presentation cache.\n\nAn implementation might want to do this because\nde-referencing records which read from their own\nblob is generally safer because the record does\nnot require retainining connections to the Store\nand Cache to present data on a per-field basis.\n\nThis generally takes the place of `getAttr` as\nan API and may even take the place of `getRelationship`\ndepending on implementation specifics, though this\nlatter usage is less recommended due to the advantages\nof the Graph handling necessary entanglements and\nnotifications for relational data.",
          "itemtype": "method",
          "name": "peek",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": "",
              "type": "StableRecordIdentifier | StableDocumentIdentifier"
            }
          ],
          "return": {
            "description": "the known resource data",
            "type": "ResourceDocument | ResourceBlob | null"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 301,
          "description": "Peek the Cache for the existing request data associated with\na cacheable request",
          "itemtype": "method",
          "name": "peekRequest",
          "params": [
            {
              "name": "UNKNOWN",
              "description": "",
              "type": "StableDocumentIdentifier"
            }
          ],
          "return": {
            "description": "",
            "type": "StableDocumentIdentifier | null"
          },
          "access": "public",
          "tagname": "",
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 318,
          "description": "Push resource data from a remote source into the cache for this identifier",
          "itemtype": "method",
          "name": "upsert",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "data",
              "description": ""
            },
            {
              "name": "hasRecord",
              "description": ""
            }
          ],
          "return": {
            "description": "if `hasRecord` is true then calculated key changes should be returned",
            "type": "Void | string[]"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 345,
          "description": "Create a fork of the cache from the current state.\n\nApplications should typically not call this method themselves,\npreferring instead to fork at the Store level, which will\nutilize this method to fork the cache.",
          "itemtype": "method",
          "name": "fork",
          "access": "public",
          "tagname": "",
          "return": {
            "description": "Promise<Cache>"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 364,
          "description": "Merge a fork back into a parent Cache.\n\nApplications should typically not call this method themselves,\npreferring instead to merge at the Store level, which will\nutilize this method to merge the caches.",
          "itemtype": "method",
          "name": "merge",
          "params": [
            {
              "name": "cache",
              "description": "",
              "type": "Cache"
            }
          ],
          "access": "public",
          "tagname": "",
          "return": {
            "description": "Promise<void>"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 384,
          "description": "Generate the list of changes applied to all\nrecord in the store.\n\nEach individual resource or document that has\nbeen mutated should be described as an individual\n`Change` entry in the returned array.\n\nA `Change` is described by an object containing up to\nthree properties: (1) the `identifier` of the entity that\nchanged; (2) the `op` code of that change being one of\n`upsert` or `remove`, and if the op is `upsert` a `patch`\ncontaining the data to merge into the cache for the given\nentity.\n\nThis `patch` is opaque to the Store but should be understood\nby the Cache and may expect to be utilized by an Adapter\nwhen generating data during a `save` operation.\n\nIt is generally recommended that the `patch` contain only\nthe updated state, ignoring fields that are unchanged\n\n```ts\ninterface Change {\n identifier: StableRecordIdentifier | StableDocumentIdentifier;\n op: 'upsert' | 'remove';\n patch?: unknown;\n}\n```",
          "itemtype": "method",
          "name": "diff",
          "access": "public",
          "tagname": "",
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 428,
          "description": "Serialize the entire contents of the Cache into a Stream\nwhich may be fed back into a new instance of the same Cache\nvia `cache.hydrate`.",
          "itemtype": "method",
          "name": "dump",
          "return": {
            "description": "",
            "type": "Promise<ReadableStream>"
          },
          "access": "public",
          "tagname": "",
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 445,
          "description": "hydrate a Cache from a Stream with content previously serialized\nfrom another instance of the same Cache, resolving when hydration\nis complete.\n\nThis method should expect to be called both in the context of restoring\nthe Cache during application rehydration after SSR **AND** at unknown\ntimes during the lifetime of an already booted application when it is\ndesired to bulk-load additional information into the cache. This latter\nbehavior supports optimizing pre/fetching of data for route transitions\nvia data-only SSR modes.",
          "itemtype": "method",
          "name": "hydrate",
          "params": [
            {
              "name": "stream",
              "description": "",
              "type": "ReadableStream"
            }
          ],
          "return": {
            "description": "",
            "type": "Promise<void>"
          },
          "access": "public",
          "tagname": "",
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 473,
          "description": "Retrieve the identifier for this v1 cache\n\nDEPRECATED Caches should not be assumed to be 1:1 with resources",
          "itemtype": "method",
          "name": "getResourceIdentifier",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 486,
          "description": "Push resource data from a remote source into the cache for this identifier\n\nDEPRECATED Use upsert. Caches should not be assumed to be 1:1 with resources",
          "itemtype": "method",
          "name": "pushData",
          "params": [
            {
              "name": "data",
              "description": ""
            },
            {
              "name": "hasRecord",
              "description": ""
            }
          ],
          "return": {
            "description": "if `hasRecord` is true then calculated key changes should be returned",
            "type": "Void | string[]"
          },
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 505,
          "description": "[LIFECYLCE] Signal to the cache that a new record has been instantiated on the client\n\nIt returns properties from options that should be set on the record during the create\nprocess. This return value behavior is deprecated.",
          "itemtype": "method",
          "name": "clientDidCreate",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "options",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 534,
          "description": "Pass options to the cache that were supplied to a new record\ninstantiated on the client.\n\nDEPRECATED: options are now passed via `clientDidCreate`",
          "itemtype": "method",
          "name": "clientDidCreate",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "params": [
            {
              "name": "options",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 553,
          "description": "[LIFECYCLE] Signals to the cache that a resource\nwill be part of a save transaction.",
          "itemtype": "method",
          "name": "willCommit",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 577,
          "description": "[LIFECYCLE] Signals to the cache that a resource\nwas successfully updated as part of a save transaction.",
          "itemtype": "method",
          "name": "didCommit",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "data",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 606,
          "description": "[LIFECYCLE] Signals to the cache that a resource\nwas update via a save transaction failed.",
          "itemtype": "method",
          "name": "commitWasRejected",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "errors",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 619,
          "description": "[LIFECYCLE] Signals to the cache that all data for a resource\nshould be cleared.",
          "itemtype": "method",
          "name": "unloadRecord",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 639,
          "description": "Retrieve the data for an attribute from the cache",
          "itemtype": "method",
          "name": "getAttr",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "propertyName",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Unknown"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 658,
          "description": "Mutate the data for an attribute in the cache",
          "itemtype": "method",
          "name": "setAttr",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "propertyName",
              "description": ""
            },
            {
              "name": "value",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 675,
          "description": "Mutate the data for an attribute in the cache\n\nDEPRECATED use setAttr",
          "itemtype": "method",
          "name": "setDirtyAttribute",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "propertyName",
              "description": ""
            },
            {
              "name": "value",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 695,
          "description": "Query the cache for the changed attributes of a resource.\n\nDEPRECATED use changedAttrs",
          "itemtype": "method",
          "name": "changedAttributes",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": ""
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 714,
          "description": "Query the cache for the changed attributes of a resource.",
          "itemtype": "method",
          "name": "changedAttrs",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": ""
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 731,
          "description": "Query the cache for whether any mutated attributes exist\n\nDEPRECATED use hasChangedAttrs",
          "itemtype": "method",
          "name": "hasChangedAttributes",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 746,
          "description": "Query the cache for whether any mutated attributes exist",
          "itemtype": "method",
          "name": "hasChangedAttrs",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 759,
          "description": "Tell the cache to discard any uncommitted mutations to attributes\n\nDEPRECATED use rollbackAttrs",
          "itemtype": "method",
          "name": "rollbackAttributes",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "return": {
            "description": ""
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 774,
          "description": "Tell the cache to discard any uncommitted mutations to attributes",
          "itemtype": "method",
          "name": "rollbackAttrs",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": "the names of attributes that were restored"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 796,
          "description": "Query the cache for the current state of a relationship property",
          "itemtype": "method",
          "name": "getRelationship",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "propertyName",
              "description": ""
            }
          ],
          "return": {
            "description": "resource relationship object"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 820,
          "description": "Query the cache for the current state of a belongsTo field\n\nDEPRECATED use `getRelationship`",
          "itemtype": "method",
          "name": "getBelongsTo",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "params": [
            {
              "name": "propertyName",
              "description": ""
            }
          ],
          "return": {
            "description": "single resource relationship object"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 842,
          "description": "Query the cache for the current state of a hasMany field\n\nDEPRECATED use `getRelationship`",
          "itemtype": "method",
          "name": "getHasMany",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "params": [
            {
              "name": "propertyName",
              "description": ""
            }
          ],
          "return": {
            "description": "single resource relationship object"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 864,
          "description": "Mutate the current state of a belongsTo relationship\n\nDEPRECATED use update",
          "itemtype": "method",
          "name": "setDirtyBelongsTo",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "params": [
            {
              "name": "propertyName",
              "description": ""
            },
            {
              "name": "value",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 888,
          "description": "Mutate the current state of a hasMany relationship by adding values\nAn index may optionally be specified which the cache should use for\nwhere in the list to insert the records\n\nDEPRECATED use update",
          "itemtype": "method",
          "name": "addToHasMany",
          "deprecated": true,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "propertyName",
              "description": ""
            },
            {
              "name": "value",
              "description": ""
            },
            {
              "name": "idx",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 916,
          "description": "Mutate the current state of a hasMany relationship by removing values.\n\nDEPRECATED use update",
          "itemtype": "method",
          "name": "removeFromHasMany",
          "deprecated": true,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "propertyName",
              "description": ""
            },
            {
              "name": "value",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 941,
          "description": "Mutate the current state of a hasMany relationship by replacing it entirely\n\nDEPRECATED use `setHasMany`",
          "itemtype": "method",
          "name": "setDirtyHasMany",
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "params": [
            {
              "name": "propertyName",
              "description": ""
            },
            {
              "name": "value",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 968,
          "description": "Update the cache state for the given resource to be marked as locally deleted,\nor remove such a mark.",
          "itemtype": "method",
          "name": "setIsDeleted",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "isDeleted",
              "description": ""
            }
          ],
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 986,
          "description": "Query the cache for any validation errors applicable to the given resource.",
          "itemtype": "method",
          "name": "getErrors",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": ""
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 998,
          "description": "Query the cache for whether a given resource has any available data",
          "itemtype": "method",
          "name": "isEmpty",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 1013,
          "description": "Query the cache for whether a given resource was created locally and not\nyet persisted.",
          "itemtype": "method",
          "name": "isNew",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 1026,
          "description": "Query the cache for whether a given resource is marked as deleted (but not\nnecessarily persisted yet).",
          "itemtype": "method",
          "name": "isDeleted",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/managers/cache-manager.ts",
          "line": 1039,
          "description": "Query the cache for whether a given resource has been deleted and that deletion\nhas also been persisted.",
          "itemtype": "method",
          "name": "isDeletionCommitted",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "CacheManager",
          "module": "@ember-data/store"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-4.12.3-@ember-data/store",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-4.12.3",
          "type": "project-version"
        }
      }
    }
  }
}