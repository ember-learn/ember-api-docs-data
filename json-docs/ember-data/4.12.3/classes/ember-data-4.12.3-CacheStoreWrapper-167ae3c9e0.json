{
  "data": {
    "id": "ember-data-4.12.3-CacheStoreWrapper",
    "type": "class",
    "attributes": {
      "name": "CacheStoreWrapper",
      "shortname": "CacheStoreWrapper",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/store",
      "namespace": "",
      "file": "../../ember-data-types/q/cache-store-wrapper.ts",
      "line": 14,
      "description": "<html><head></head><body><p>CacheStoreWrapper provides encapsulated API access to the minimal\nsubset of the Store&apos;s functionality that Cache implementations\nshould interact with. It is provided to the Store&apos;s <code>createRecordDataFor</code>\nand <code>createCache</code> hooks.</p>\n<p>Cache implementations should not need more than this API provides.</p>\n<p>This class cannot be directly instantiated.</p>\n</body></html>",
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 40,
          "description": "<html><head></head><body><p>Provides access to the SchemaDefinitionService instance\nfor this Store instance.</p>\n<p>The SchemaDefinitionService can be used to query for\ninformation about the schema of a resource.</p>\n</body></html>",
          "itemtype": "method",
          "name": "getSchemaDefinitionService",
          "access": "public",
          "tagname": "",
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 52,
          "description": "<html><head></head><body><p>Proxies to the schema service&apos;s <code>relationshipsDefinitionFor</code>\nmethod.</p>\n<p>Use <code>wrapper.getSchemaDefinitionService().relationshipsDefinitionFor()</code>\ninstead.</p>\n</body></html>",
          "itemtype": "method",
          "name": "relationshipsDefinitionFor",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "RelationshipsSchema"
          },
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 67,
          "description": "<html><head></head><body><p>Proxies to the schema service&apos;s <code>attributesDefinitionFor</code>\nmethod.</p>\n<p>Use <code>wrapper.getSchemaDefinitionService().attributesDefinitionFor()</code>\ninstead.</p>\n</body></html>",
          "itemtype": "method",
          "name": "attributesDefinitionFor",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "AttributesSchema"
          },
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 82,
          "description": "<html><head></head><body><p>Update the <code>id</code> for the record corresponding to the identifier\nThis operation can only be done for records whose <code>id</code> is <code>null</code>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "setRecordId",
          "params": [
            {
              "name": "identifier;",
              "description": "",
              "type": "StableRecordIdentifier"
            },
            {
              "name": "id;",
              "description": "",
              "type": "String"
            }
          ],
          "access": "public",
          "tagname": "",
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 94,
          "description": "<html><head></head><body><p>Signal to the store that the specified record may be considered fully\nremoved from the cache. Generally this means that not only does no\ndata exist for the identified resource, no known relationships still\npoint to it either.</p>\n</body></html>",
          "itemtype": "method",
          "name": "disconnectRecord",
          "params": [
            {
              "name": "identifier",
              "description": "",
              "type": "StableRecordIdentifier"
            }
          ],
          "access": "public",
          "tagname": "",
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 109,
          "description": "<html><head></head><body><p>Use hasRecord instead.</p>\n</body></html>",
          "itemtype": "method",
          "name": "isRecordInUse",
          "params": [
            {
              "name": "modelName",
              "description": ""
            },
            {
              "name": "id",
              "description": ""
            },
            {
              "name": "clientId",
              "description": ""
            }
          ],
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 123,
          "description": "<html><head></head><body><p>Use this method to determine if the Store has an instantiated record associated\nwith an identifier.</p>\n</body></html>",
          "itemtype": "method",
          "name": "hasRecord",
          "params": [
            {
              "name": "identifier",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "access": "public",
          "tagname": "",
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 134,
          "description": "<html><head></head><body><p>Use notifyChange</p>\n</body></html>",
          "itemtype": "method",
          "name": "notifyPropertyChange",
          "params": [
            {
              "name": "modelName",
              "description": ""
            },
            {
              "name": "id",
              "description": ""
            },
            {
              "name": "clientId",
              "description": ""
            },
            {
              "name": "key",
              "description": ""
            }
          ],
          "deprecated": true,
          "access": "public",
          "tagname": "",
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 147,
          "description": "<html><head></head><body><p>Use notifyChange</p>\n</body></html>",
          "itemtype": "method",
          "name": "notifyHasManyChange",
          "params": [
            {
              "name": "modelName",
              "description": ""
            },
            {
              "name": "id",
              "description": ""
            },
            {
              "name": "clientId",
              "description": ""
            },
            {
              "name": "key",
              "description": ""
            }
          ],
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 162,
          "description": "<html><head></head><body><p>[DEPRECATED] RecordData has become Cache and Cache is now always\na singleton.</p>\n<p>You may access the Cache via Store.cache. If you are interacting\nwith this wrapped from the Cache you are the Cache instance and\nthus do not need to call this anymore.</p>\n<p>Used to retrieve the associated RecordData for a given identifier.</p>\n<p>To generate a RecordData for a new client-side resource that does not\nyet have an ID and place it in the new state, first create an identifier\nvia <code>identifierCache.createIdentifierForNewRecord</code></p>\n<p>Then once you have obtained the RecordData instance you should invoke\n<code>recordData.clientDidCreate</code> to ensure the cache entry is put into the\ncorrect &quot;newly created&quot; state.</p>\n</body></html>",
          "itemtype": "method",
          "name": "recordDataFor",
          "deprecated": true,
          "params": [
            {
              "name": "identifier",
              "description": "",
              "type": "StableRecordIdentifier"
            }
          ],
          "return": {
            "description": "the RecordData cache instance associated with the identifier",
            "type": "Cache"
          },
          "access": "public",
          "tagname": "",
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 192,
          "description": "<html><head></head><body><p>Use notifyChange</p>\n</body></html>",
          "itemtype": "method",
          "name": "notifyBelongsToChange",
          "params": [
            {
              "name": "modelName",
              "description": ""
            },
            {
              "name": "id",
              "description": ""
            },
            {
              "name": "clientId",
              "description": ""
            },
            {
              "name": "key",
              "description": ""
            }
          ],
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 207,
          "description": "<html><head></head><body><p>Notify subscribers of the NotificationManager that cache state has changed.</p>\n<p><code>attributes</code> and <code>relationships</code> do not require a key, but if one is specified it\nis assumed to be the name of the attribute or relationship that has been updated.</p>\n<p>No other namespaces currently expect the <code>key</code> argument.</p>\n</body></html>",
          "itemtype": "method",
          "name": "notifyChange",
          "params": [
            {
              "name": "identifier",
              "description": "",
              "type": "StableRecordIdentifier"
            },
            {
              "name": "namespace",
              "description": "",
              "type": "'attributes' | 'relationships' | 'identity' | 'errors' | 'meta' | 'state'"
            },
            {
              "name": "key",
              "description": "",
              "type": "String|undefined"
            }
          ],
          "access": "public",
          "tagname": "",
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 229,
          "description": "<html><head></head><body><p>Use notifyChange</p>\n</body></html>",
          "itemtype": "method",
          "name": "notifyErrorsChange",
          "params": [
            {
              "name": "modelName",
              "description": ""
            },
            {
              "name": "id",
              "description": ""
            },
            {
              "name": "clientId",
              "description": ""
            }
          ],
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        },
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 241,
          "description": "<html><head></head><body><p>Use notifyChange</p>\n</body></html>",
          "itemtype": "method",
          "name": "notifyStateChange",
          "params": [
            {
              "name": "modelName",
              "description": ""
            },
            {
              "name": "id",
              "description": ""
            },
            {
              "name": "clientId",
              "description": ""
            },
            {
              "name": "key",
              "description": ""
            }
          ],
          "access": "public",
          "tagname": "",
          "deprecated": true,
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "../ember-data-types/q/cache-store-wrapper.ts",
          "line": 28,
          "description": "<html><head></head><body><p>Provides access to the IdentifierCache instance\nfor this Store instance.</p>\n<p>The IdentifierCache can be used to peek, generate or\nretrieve a stable unique identifier for any resource.</p>\n</body></html>",
          "itemtype": "property",
          "name": "identifierCache",
          "type": "IdentifierCache",
          "access": "public",
          "tagname": "",
          "class": "CacheStoreWrapper",
          "module": "@ember-data/store"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-4.12.3-@ember-data/store",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-4.12.3",
          "type": "project-version"
        }
      }
    }
  }
}