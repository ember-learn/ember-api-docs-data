{
  "data": {
    "id": "ember-data-3.17.1-Errors",
    "type": "class",
    "attributes": {
      "name": "Errors",
      "shortname": "Errors",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/store",
      "namespace": "",
      "file": "../model/addon/-private/errors.js",
      "line": 13,
      "description": "<html><head></head><body><p>Holds validation errors for a given record, organized by attribute names.</p>\n<p>Every <code>Model</code> has an <code>errors</code> property that is an instance of\n<code>Errors</code>. This can be used to display validation error\nmessages returned from the server when a <code>record.save()</code> rejects.</p>\n<p>For Example, if you had a <code>User</code> model that looked like this:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/user.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> Model, { attr } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/model&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Model.extend({\n  username: attr(<span class=\"string\">&apos;string&apos;</span>),\n  email: attr(<span class=\"string\">&apos;string&apos;</span>)\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>And you attempted to save a record that did not validate on the backend:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>let <span class=\"keyword\">user</span> = store.createRecord(<span class=\"string\">&apos;user&apos;</span>, {\n  username: <span class=\"string\">&apos;tomster&apos;</span>,\n  email: <span class=\"string\">&apos;invalidEmail&apos;</span>\n});\n<span class=\"keyword\">user</span>.save();</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Your backend would be expected to return an error response that described\nthe problem, so that error messages can be generated on the app.</p>\n<p>API responses will be translated into instances of <code>Errors</code> differently,\ndepending on the specific combination of adapter and serializer used. You\nmay want to check the documentation or the source code of the libraries\nthat you are using, to know how they expect errors to be communicated.</p>\n<p>Errors can be displayed to the user by accessing their property name\nto get an array of all the error objects for that property. Each\nerror object is a JavaScript object with two keys:</p>\n<ul>\n<li><code>message</code> A string containing the error message from the backend</li>\n<li><code>attribute</code> The name of the property associated with this error message</li>\n</ul>\n<div class=\"highlight handlebars\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td>\n              <td class=\"code\"><pre><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>Username: </span><span class=\"template-variable\">{{<span class=\"name\"><span class=\"built_in\">input</span></span> <span class=\"attr\">value</span>=username}}</span><span class=\"language-xml\"> <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span>\n</span><span class=\"template-tag\">{{#<span class=\"name\"><span class=\"built_in\">each</span></span> model.errors.username <span class=\"keyword\">as</span> |error|}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>\n    </span><span class=\"template-variable\">{{<span class=\"name\">error.message</span>}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n</span><span class=\"template-tag\">{{/<span class=\"name\"><span class=\"built_in\">each</span></span>}}</span><span class=\"language-xml\">\n\n<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>Email: </span><span class=\"template-variable\">{{<span class=\"name\"><span class=\"built_in\">input</span></span> <span class=\"attr\">value</span>=email}}</span><span class=\"language-xml\"> <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span>\n</span><span class=\"template-tag\">{{#<span class=\"name\"><span class=\"built_in\">each</span></span> model.errors.email <span class=\"keyword\">as</span> |error|}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>\n    </span><span class=\"template-variable\">{{<span class=\"name\">error.message</span>}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n</span><span class=\"template-tag\">{{/<span class=\"name\"><span class=\"built_in\">each</span></span>}}</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>You can also access the special <code>messages</code> property on the error\nobject to get an array of all the error strings.</p>\n<div class=\"highlight handlebars\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"template-tag\">{{#<span class=\"name\"><span class=\"built_in\">each</span></span> model.errors.messages <span class=\"keyword\">as</span> |message|}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>\n    </span><span class=\"template-variable\">{{<span class=\"name\">message</span>}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n</span><span class=\"template-tag\">{{/<span class=\"name\"><span class=\"built_in\">each</span></span>}}</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "extends": "ArrayProxy",
      "uses": [
        "Evented"
      ],
      "methods": [
        {
          "file": "../model/addon/-private/errors.js",
          "line": 87,
          "description": "<html><head></head><body><p>Register with target handler</p>\n</body></html>",
          "itemtype": "method",
          "name": "_registerHandlers",
          "access": "private",
          "tagname": "",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 109,
          "description": "<html><head></head><body><p>Returns errors for a given attribute</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>let user = store.<span class=\"title function_ invoke__\">createRecord</span>(<span class=\"string\">&apos;user&apos;</span>, {\n  <span class=\"attr\">username</span>: <span class=\"string\">&apos;tomster&apos;</span>,\n  <span class=\"attr\">email</span>: <span class=\"string\">&apos;invalidEmail&apos;</span>\n});\nuser.<span class=\"title function_ invoke__\">save</span>().<span class=\"keyword\">catch</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>{\n  user.<span class=\"title function_ invoke__\">get</span>(<span class=\"string\">&apos;errors&apos;</span>).<span class=\"title function_ invoke__\">errorsFor</span>(<span class=\"string\">&apos;email&apos;</span>); <span class=\"comment\">// returns:</span>\n  <span class=\"comment\">// [{attribute: &quot;email&quot;, message: &quot;Doesn&apos;t look like a valid email.&quot;}]</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "errorsFor",
          "params": [
            {
              "name": "attribute",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Array"
          },
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 163,
          "itemtype": "method",
          "name": "unknownProperty",
          "access": "private",
          "tagname": "",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 190,
          "description": "<html><head></head><body><p>Manually adds errors to the record. This will trigger the <code>becameInvalid</code> event/ lifecycle method on\n the record and transition the record into an <code>invalid</code> state.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n</pre></td>\n              <td class=\"code\"><pre> let errors = get(user, <span class=\"string\">&apos;errors&apos;</span>);\n\n <span class=\"regexp\">//</span> add multiple errors\n errors.add(<span class=\"string\">&apos;password&apos;</span>, [\n   <span class=\"string\">&apos;Must be at least 12 characters&apos;</span>,\n   <span class=\"string\">&apos;Must contain at least one symbol&apos;</span>,\n   <span class=\"string\">&apos;Cannot contain your name&apos;</span>\n ]);\n\n errors.errorsFor(<span class=\"string\">&apos;password&apos;</span>);\n <span class=\"regexp\">//</span> =&gt;\n <span class=\"regexp\">//</span> [\n <span class=\"regexp\">//</span>   { attribute: <span class=\"string\">&apos;password&apos;</span>, message: <span class=\"string\">&apos;Must be at least 12 characters&apos;</span> },\n <span class=\"regexp\">//</span>   { attribute: <span class=\"string\">&apos;password&apos;</span>, message: <span class=\"string\">&apos;Must contain at least one symbol&apos;</span> },\n <span class=\"regexp\">//</span>   { attribute: <span class=\"string\">&apos;password&apos;</span>, message: <span class=\"string\">&apos;Cannot contain your name&apos;</span> },\n <span class=\"regexp\">//</span> ]\n\n <span class=\"regexp\">//</span> add a single error\n errors.add(<span class=\"string\">&apos;username&apos;</span>, <span class=\"string\">&apos;This field is required&apos;</span>);\n\n errors.errorsFor(<span class=\"string\">&apos;password&apos;</span>);\n <span class=\"regexp\">//</span> =&gt;\n <span class=\"regexp\">//</span> [\n <span class=\"regexp\">//</span>   { attribute: <span class=\"string\">&apos;username&apos;</span>, message: <span class=\"string\">&apos;This field is required&apos;</span> },\n <span class=\"regexp\">//</span> ]</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "add",
          "params": [
            {
              "name": "attribute",
              "description": "- the property name of an attribute or relationship",
              "type": "String"
            },
            {
              "name": "messages",
              "description": "- an error message or array of error messages for the attribute",
              "type": "String[]|string"
            }
          ],
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 239,
          "description": "<html><head></head><body><p>Adds error messages to a given attribute without sending event.</p>\n</body></html>",
          "itemtype": "method",
          "name": "_add",
          "access": "private",
          "tagname": "",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 254,
          "itemtype": "method",
          "name": "_findOrCreateMessages",
          "access": "private",
          "tagname": "",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 279,
          "description": "<html><head></head><body><p>Manually removes all errors for a given member from the record.\n  This will transition the record into a <code>valid</code> state, and\n triggers the <code>becameValid</code> event and lifecycle method.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td>\n              <td class=\"code\"><pre> let errors = get(<span class=\"string\">&apos;user&apos;</span>, errors);\n errors.add(<span class=\"string\">&apos;phone&apos;</span>, [<span class=\"string\">&apos;error-1&apos;</span>, <span class=\"string\">&apos;error-2&apos;</span>]);\n\n errors.errorsFor(<span class=\"string\">&apos;phone&apos;</span>);\n <span class=\"regexp\">//</span> =&gt;\n <span class=\"regexp\">//</span> [\n <span class=\"regexp\">//</span>   { attribute: <span class=\"string\">&apos;phone&apos;</span>, message: <span class=\"string\">&apos;error-1&apos;</span> },\n <span class=\"regexp\">//</span>   { attribute: <span class=\"string\">&apos;phone&apos;</span>, message: <span class=\"string\">&apos;error-2&apos;</span> },\n <span class=\"regexp\">//</span> ]\n\n errors.remove(<span class=\"string\">&apos;phone&apos;</span>);\n\n errors.errorsFor(<span class=\"string\">&apos;phone&apos;</span>);\n <span class=\"regexp\">//</span> =&gt; undefined</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "remove",
          "params": [
            {
              "name": "member",
              "description": "- the property name of an attribute or relationship",
              "type": "String"
            }
          ],
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 320,
          "description": "<html><head></head><body><p>Removes all error messages from the given attribute without sending event.</p>\n</body></html>",
          "itemtype": "method",
          "name": "_remove",
          "access": "private",
          "tagname": "",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 339,
          "description": "<html><head></head><body><p>Manually clears all errors for the record.\n  This will transition the record into a <code>valid</code> state, and\n  will trigger the <code>becameValid</code> event and lifecycle method.</p>\n<p>  Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n</pre></td>\n              <td class=\"code\"><pre>let errors = get(<span class=\"string\">&apos;user&apos;</span>, errors);\nerrors.add(<span class=\"string\">&apos;username&apos;</span>, [<span class=\"string\">&apos;error-a&apos;</span>]);\nerrors.add(<span class=\"string\">&apos;phone&apos;</span>, [<span class=\"string\">&apos;error-1&apos;</span>, <span class=\"string\">&apos;error-2&apos;</span>]);\n\nerrors.errorsFor(<span class=\"string\">&apos;username&apos;</span>);\n<span class=\"regexp\">//</span> =&gt;\n<span class=\"regexp\">//</span> [\n<span class=\"regexp\">//</span>   { attribute: <span class=\"string\">&apos;username&apos;</span>, message: <span class=\"string\">&apos;error-a&apos;</span> },\n<span class=\"regexp\">//</span> ]\n\nerrors.errorsFor(<span class=\"string\">&apos;phone&apos;</span>);\n<span class=\"regexp\">//</span> =&gt;\n<span class=\"regexp\">//</span> [\n<span class=\"regexp\">//</span>   { attribute: <span class=\"string\">&apos;phone&apos;</span>, message: <span class=\"string\">&apos;error-1&apos;</span> },\n<span class=\"regexp\">//</span>   { attribute: <span class=\"string\">&apos;phone&apos;</span>, message: <span class=\"string\">&apos;error-2&apos;</span> },\n<span class=\"regexp\">//</span> ]\n\nerrors.clear();\n\nerrors.errorsFor(<span class=\"string\">&apos;username&apos;</span>);\n<span class=\"regexp\">//</span> =&gt; undefined\n\nerrors.errorsFor(<span class=\"string\">&apos;phone&apos;</span>);\n<span class=\"regexp\">//</span> =&gt; undefined\n\nerrors.get(<span class=\"string\">&apos;messages&apos;</span>)\n<span class=\"regexp\">//</span> =&gt; []</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "remove",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 389,
          "description": "<html><head></head><body><p>Removes all error messages.\nto the record.</p>\n</body></html>",
          "itemtype": "method",
          "name": "_clear",
          "access": "private",
          "tagname": "",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 416,
          "description": "<html><head></head><body><p>Checks if there are error messages for the given attribute.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/routes/user/edit.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> Route <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/routing/route&apos;</span>;\n\nexport <span class=\"keyword\">default</span> Route.extend({\n  actions: {\n    save: <span class=\"keyword\">function</span>(<span class=\"keyword\">user</span>) {\n      <span class=\"keyword\">if</span> (<span class=\"keyword\">user</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;errors&apos;</span>).has(<span class=\"string\">&apos;email&apos;</span>)) {\n        <span class=\"keyword\">return</span> alert(<span class=\"string\">&apos;Please update your email before attempting to save.&apos;</span>);\n      }\n      <span class=\"keyword\">user</span>.save();\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "has",
          "params": [
            {
              "name": "attribute",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if there some errors on given attribute",
            "type": "Boolean"
          },
          "class": "Errors",
          "module": "@ember-data/store"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "../model/addon/-private/errors.js",
          "line": 100,
          "itemtype": "property",
          "name": "errorsByAttributeName",
          "type": "{MapWithDefault}",
          "access": "private",
          "tagname": "",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 137,
          "description": "<html><head></head><body><p>An array containing all of the error messages for this\nrecord. This is useful for displaying all errors to the user.</p>\n<div class=\"highlight handlebars\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"template-tag\">{{#<span class=\"name\"><span class=\"built_in\">each</span></span> model.errors.messages <span class=\"keyword\">as</span> |message|}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>\n    </span><span class=\"template-variable\">{{<span class=\"name\">message</span>}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n</span><span class=\"template-tag\">{{/<span class=\"name\"><span class=\"built_in\">each</span></span>}}</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "property",
          "name": "messages",
          "type": "{Array}",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 154,
          "itemtype": "property",
          "name": "content",
          "type": "{Array}",
          "access": "private",
          "tagname": "",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 175,
          "description": "<html><head></head><body><p>Total number of errors.</p>\n</body></html>",
          "itemtype": "property",
          "name": "length",
          "type": "{Number}",
          "readonly": "",
          "class": "Errors",
          "module": "@ember-data/store"
        },
        {
          "file": "../model/addon/-private/errors.js",
          "line": 183,
          "itemtype": "property",
          "name": "isEmpty",
          "type": "{Boolean}",
          "readonly": "",
          "class": "Errors",
          "module": "@ember-data/store"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": {
          "id": "ArrayProxy",
          "type": "missing"
        }
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-3.17.1-@ember-data/store",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-3.17.1",
          "type": "project-version"
        }
      }
    }
  }
}