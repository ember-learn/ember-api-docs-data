{
  "data": {
    "id": "ember-data-1.13.16-DS.ActiveModelSerializer",
    "type": "class",
    "attributes": {
      "name": "DS.ActiveModelSerializer",
      "shortname": "DS.ActiveModelSerializer",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember-data",
      "namespace": "DS",
      "file": "packages/activemodel-adapter/lib/system/active-model-serializer.js",
      "line": 16,
      "description": "<html><head></head><body><p>The ActiveModelSerializer is a subclass of the RESTSerializer designed to integrate\nwith a JSON API that uses an underscored naming convention instead of camelCasing.\nIt has been designed to work out of the box with the\n<a href=\"http://github.com/rails-api/active_model_serializers\">active_model_serializers</a>\nRuby gem. This Serializer expects specific settings using ActiveModel::Serializers,\n<code>embed :ids, embed_in_root: true</code> which sideloads the records.</p>\n<p>This serializer extends the DS.RESTSerializer by making consistent\nuse of the camelization, decamelization and pluralization methods to\nnormalize the serialized JSON into a format that is compatible with\na conventional Rails backend and Ember Data.</p>\n<h2 id=\"json-structure\">JSON Structure</h2>\n<p>The ActiveModelSerializer expects the JSON returned from your server\nto follow the REST adapter conventions substituting underscored keys\nfor camelcased ones.</p>\n<h3 id=\"conventional-names\">Conventional Names</h3>\n<p>Attribute names in your JSON payload should be the underscored versions of\nthe attributes in your Ember.js models.</p>\n<p>For example, if you have a <code>Person</code> model:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>App.FamousPerson = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  firstName: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  lastName: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  occupation: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;)\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The JSON returned should look like this:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;famous_person&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n    <span class=\"attr\">&quot;first_name&quot;</span>: <span class=\"string\">&quot;Barack&quot;</span>,\n    <span class=\"attr\">&quot;last_name&quot;</span>: <span class=\"string\">&quot;Obama&quot;</span>,\n    <span class=\"attr\">&quot;occupation&quot;</span>: <span class=\"string\">&quot;President&quot;</span>\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Let&apos;s imagine that <code>Occupation</code> is just another model:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre>App.Person = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  firstName: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  lastName: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  occupation: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>belongs<span class=\"constructor\">To(&apos;<span class=\"params\">occupation</span>&apos;)</span>\n});\n\nApp.Occupation = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  name: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  salary: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;number&apos;),\n  people: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>has<span class=\"constructor\">Many(&apos;<span class=\"params\">person</span>&apos;)</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The JSON needed to avoid extra server calls, should look like this:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;people&quot;</span>: [{\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n    <span class=\"attr\">&quot;first_name&quot;</span>: <span class=\"string\">&quot;Barack&quot;</span>,\n    <span class=\"attr\">&quot;last_name&quot;</span>: <span class=\"string\">&quot;Obama&quot;</span>,\n    <span class=\"attr\">&quot;occupation_id&quot;</span>: <span class=\"number\">1</span>\n  }],\n\n  <span class=\"attr\">&quot;occupations&quot;</span>: [{\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;President&quot;</span>,\n    <span class=\"attr\">&quot;salary&quot;</span>: <span class=\"number\">100000</span>,\n    <span class=\"attr\">&quot;person_ids&quot;</span>: [<span class=\"number\">1</span>]\n  }]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "extends": "DS.RESTSerializer",
      "methods": [
        {
          "file": "packages/activemodel-adapter/lib/system/active-model-serializer.js",
          "line": 106,
          "description": "<html><head></head><body><p>Converts camelCased attributes to underscored when serializing.</p>\n</body></html>",
          "itemtype": "method",
          "name": "keyForAttribute",
          "params": [
            {
              "name": "attribute",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/activemodel-adapter/lib/system/active-model-serializer.js",
          "line": 117,
          "description": "<html><head></head><body><p>Underscores relationship names and appends &quot;_id&quot; or &quot;_ids&quot; when serializing\nrelationship keys.</p>\n</body></html>",
          "itemtype": "method",
          "name": "keyForRelationship",
          "params": [
            {
              "name": "relationshipModelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "kind",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/activemodel-adapter/lib/system/active-model-serializer.js",
          "line": 137,
          "description": "<html><head></head><body><p><code>keyForLink</code> can be used to define a custom key when deserializing link\nproperties. The <code>ActiveModelSerializer</code> camelizes link keys by default.</p>\n</body></html>",
          "itemtype": "method",
          "name": "keyForLink",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "kind",
              "description": "`belongsTo` or `hasMany`",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/activemodel-adapter/lib/system/active-model-serializer.js",
          "line": 155,
          "description": "<html><head></head><body><p>Underscores the JSON root keys when serializing.</p>\n</body></html>",
          "itemtype": "method",
          "name": "payloadKeyFromModelName",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/activemodel-adapter/lib/system/active-model-serializer.js",
          "line": 166,
          "description": "<html><head></head><body><p>Serializes a polymorphic type as a fully capitalized model name.</p>\n</body></html>",
          "itemtype": "method",
          "name": "serializePolymorphicType",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/activemodel-adapter/lib/system/active-model-serializer.js",
          "line": 188,
          "description": "<html><head></head><body><p>Add extra step to <code>DS.RESTSerializer.normalize</code> so links are normalized.</p>\n<p>If your payload looks like:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;post&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n    <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n    <span class=\"attr\">&quot;links&quot;</span>: { <span class=\"attr\">&quot;flagged_comments&quot;</span>: <span class=\"string\">&quot;api/comments/flagged&quot;</span> }\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The normalized version would look like this</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;post&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n    <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n    <span class=\"attr\">&quot;links&quot;</span>: { <span class=\"attr\">&quot;flaggedComments&quot;</span>: <span class=\"string\">&quot;api/comments/flagged&quot;</span> }\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "normalize",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "subclass of DS.Model"
            },
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            },
            {
              "name": "prop",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/activemodel-adapter/lib/system/active-model-serializer.js",
          "line": 226,
          "description": "<html><head></head><body><p>Convert <code>snake_cased</code> links  to <code>camelCase</code></p>\n</body></html>",
          "itemtype": "method",
          "name": "normalizeLinks",
          "params": [
            {
              "name": "data",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/activemodel-adapter/lib/system/active-model-serializer.js",
          "line": 248,
          "description": "<html><head></head><body><p>Normalize the polymorphic type from the JSON.</p>\n<p>Normalize:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre>  {\n    <span class=\"attribute\">id</span>: <span class=\"string\">&quot;1&quot;</span>\n    minion: { type: <span class=\"string\">&quot;evil_minion&quot;</span>, id: <span class=\"string\">&quot;12&quot;</span>}\n  }</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>To:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre>  {\n    <span class=\"attribute\">id</span>: <span class=\"string\">&quot;1&quot;</span>\n    minion: { type: <span class=\"string\">&quot;evilMinion&quot;</span>, id: <span class=\"string\">&quot;12&quot;</span>}\n  }</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "Subclass of DS.Model"
            }
          ],
          "itemtype": "method",
          "name": "normalizeRelationships",
          "access": "private",
          "tagname": "",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 120,
          "description": "<html><head></head><body><p>Normalizes a part of the JSON payload returned by\nthe server. You should override this method, munge the hash\nand call super if you have generic normalization to do.</p>\n<p>It takes the type of the record that is being normalized\n(as a DS.Model class), the property where the hash was\noriginally found, and the hash to normalize.</p>\n<p>For example, if you have a payload that looks like this:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;post&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n    <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n    <span class=\"attr\">&quot;comments&quot;</span>: [ <span class=\"number\">1</span>, <span class=\"number\">2</span> ]\n  },\n  <span class=\"attr\">&quot;comments&quot;</span>: [{\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n    <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;FIRST&quot;</span>\n  }, {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">2</span>,\n    <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;Rails is unagi&quot;</span>\n  }]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The <code>normalize</code> method will be called three times:</p>\n<ul>\n<li>With <code>App.Post</code>, <code>&quot;posts&quot;</code> and <code>{ id: 1, title: &quot;Rails is omakase&quot;, ... }</code></li>\n<li>With <code>App.Comment</code>, <code>&quot;comments&quot;</code> and <code>{ id: 1, body: &quot;FIRST&quot; }</code></li>\n<li>With <code>App.Comment</code>, <code>&quot;comments&quot;</code> and <code>{ id: 2, body: &quot;Rails is unagi&quot; }</code></li>\n</ul>\n<p>You can use this method, for example, to normalize underscored keys to camelized\nor other general-purpose normalizations.</p>\n<p>If you want to do normalizations specific to some part of the payload, you\ncan specify those under <code>normalizeHash</code>.</p>\n<p>For example, if the <code>IDs</code> under <code>&quot;comments&quot;</code> are provided as <code>_id</code> instead of\n<code>id</code>, you can specify how to normalize just the comments:</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  <span class=\"attr\">normalizeHash</span>: {\n    <span class=\"attr\">comments</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">hash</span>) </span>{\n      hash.id = hash._id;\n      <span class=\"keyword\">delete</span> hash._id;\n      <span class=\"keyword\">return</span> hash;\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The key under <code>normalizeHash</code> is just the original key that was in the original\npayload.</p>\n</body></html>",
          "itemtype": "method",
          "name": "normalize",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            },
            {
              "name": "prop",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 210,
          "description": "<html><head></head><body><p>Normalizes an array of resource payloads and returns a JSON-API Document\nwith primary data and, if any, included data as <code>{ data, included }</code>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "normalizeArray",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "arrayHash",
              "description": "",
              "type": "Object"
            },
            {
              "name": "prop",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 390,
          "description": "<html><head></head><body><p>Called when the server has returned a payload representing\na single record, such as in response to a <code>find</code> or <code>save</code>.</p>\n<p>It is your opportunity to clean up the server&apos;s response into the normalized\nform expected by Ember Data.</p>\n<p>If you want, you can just restructure the top-level of your payload, and\ndo more fine-grained normalization in the <code>normalize</code> method.</p>\n<p>For example, if you have a payload like this in response to a request for\npost 1:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n  <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n\n  <span class=\"attr\">&quot;_embedded&quot;</span>: {\n    <span class=\"attr\">&quot;comment&quot;</span>: [{\n      <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"number\">1</span>,\n      <span class=\"attr\">&quot;comment_title&quot;</span>: <span class=\"string\">&quot;FIRST&quot;</span>\n    }, {\n      <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"number\">2</span>,\n      <span class=\"attr\">&quot;comment_title&quot;</span>: <span class=\"string\">&quot;Rails is unagi&quot;</span>\n    }]\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>You could implement a serializer that looks like this to get your payload\ninto shape:</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  <span class=\"comment\">// First, restructure the top-level so it&apos;s organized by type</span>\n  extractSingle: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">store, typeClass, payload, id</span>) </span>{\n    <span class=\"keyword\">var</span> comments = payload._embedded.comment;\n    <span class=\"keyword\">delete</span> payload._embedded;\n\n    payload = { <span class=\"attr\">comments</span>: comments, <span class=\"attr\">post</span>: payload };\n    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._super(store, typeClass, payload, id);\n  },\n\n  <span class=\"attr\">normalizeHash</span>: {\n    <span class=\"comment\">// Next, normalize individual comments, which (after `extract`)</span>\n    <span class=\"comment\">// are now located under `comments`</span>\n    comments: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">hash</span>) </span>{\n      hash.id = hash._id;\n      hash.title = hash.comment_title;\n      <span class=\"keyword\">delete</span> hash._id;\n      <span class=\"keyword\">delete</span> hash.comment_title;\n      <span class=\"keyword\">return</span> hash;\n    }\n  }\n})</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>When you call super from your own implementation of <code>extractSingle</code>, the\nbuilt-in implementation will find the primary record in your normalized\npayload and push the remaining records into the store.</p>\n<p>The primary record is the single hash found under <code>post</code> or the first\nelement of the <code>posts</code> array.</p>\n<p>The primary record has special meaning when the record is being created\nfor the first time or updated (<code>createRecord</code> or <code>updateRecord</code>). In\nparticular, it will update the properties of the record that was saved.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractSingle",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryTypeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "rawPayload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "recordId",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "the primary response to the original request",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 528,
          "description": "<html><head></head><body><p>Called when the server has returned a payload representing\nmultiple records, such as in response to a <code>findAll</code> or <code>findQuery</code>.</p>\n<p>It is your opportunity to clean up the server&apos;s response into the normalized\nform expected by Ember Data.</p>\n<p>If you want, you can just restructure the top-level of your payload, and\ndo more fine-grained normalization in the <code>normalize</code> method.</p>\n<p>For example, if you have a payload like this in response to a request for\nall posts:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;_embedded&quot;</span>: {\n    <span class=\"attr\">&quot;post&quot;</span>: [{\n      <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>\n    }, {\n      <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">2</span>,\n      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;The Parley Letter&quot;</span>\n    }],\n    <span class=\"attr\">&quot;comment&quot;</span>: [{\n      <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"number\">1</span>,\n      <span class=\"attr\">&quot;comment_title&quot;</span>: <span class=\"string\">&quot;Rails is unagi&quot;</span>,\n      <span class=\"attr\">&quot;post_id&quot;</span>: <span class=\"number\">1</span>\n    }, {\n      <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"number\">2</span>,\n      <span class=\"attr\">&quot;comment_title&quot;</span>: <span class=\"string\">&quot;Don&apos;t tread on me&quot;</span>,\n      <span class=\"attr\">&quot;post_id&quot;</span>: <span class=\"number\">2</span>\n    }]\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>You could implement a serializer that looks like this to get your payload\ninto shape:</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  <span class=\"comment\">// First, restructure the top-level so it&apos;s organized by type</span>\n  <span class=\"comment\">// and the comments are listed under a post&apos;s `comments` key.</span>\n  extractArray: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">store, type, payload</span>) </span>{\n    <span class=\"keyword\">var</span> posts = payload._embedded.post;\n    <span class=\"keyword\">var</span> comments = [];\n    <span class=\"keyword\">var</span> postCache = {};\n\n    posts.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>) </span>{\n      post.comments = [];\n      postCache[post.id] = post;\n    });\n\n    payload._embedded.comment.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">comment</span>) </span>{\n      comments.push(comment);\n      postCache[comment.post_id].comments.push(comment);\n      <span class=\"keyword\">delete</span> comment.post_id;\n    });\n\n    payload = { <span class=\"attr\">comments</span>: comments, <span class=\"attr\">posts</span>: posts };\n\n    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._super(store, type, payload);\n  },\n\n  <span class=\"attr\">normalizeHash</span>: {\n    <span class=\"comment\">// Next, normalize individual comments, which (after `extract`)</span>\n    <span class=\"comment\">// are now located under `comments`</span>\n    comments: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">hash</span>) </span>{\n      hash.id = hash._id;\n      hash.title = hash.comment_title;\n      <span class=\"keyword\">delete</span> hash._id;\n      <span class=\"keyword\">delete</span> hash.comment_title;\n      <span class=\"keyword\">return</span> hash;\n    }\n  }\n})</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>When you call super from your own implementation of <code>extractArray</code>, the\nbuilt-in implementation will find the primary array in your normalized\npayload and push the remaining records into the store.</p>\n<p>The primary array is the array found under <code>posts</code>.</p>\n<p>The primary record has special meaning when responding to <code>findQuery</code>\nor <code>findHasMany</code>. In particular, the primary array will become the\nlist of records in the record array that kicked off the request.</p>\n<p>If your primary array contains secondary (embedded) records of the same type,\nyou cannot place these into the primary array <code>posts</code>. Instead, place the\nsecondary items into an underscore prefixed property <code>_posts</code>, which will\npush these items into the store and will not affect the resulting query.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractArray",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryTypeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "rawPayload",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "The primary array that was returned in response\n  to the original query.",
            "type": "Array"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 681,
          "description": "<html><head></head><body><p>This method allows you to push a payload containing top-level\ncollections of records organized per type.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"string\">&quot;posts&quot;</span>: [{\n    <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>,\n    <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n    <span class=\"string\">&quot;author&quot;</span>, <span class=\"string\">&quot;1&quot;</span>,\n    <span class=\"string\">&quot;comments&quot;</span>: [ <span class=\"string\">&quot;1&quot;</span> ]\n  }],\n  <span class=\"string\">&quot;comments&quot;</span>: [{\n    <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>,\n    <span class=\"string\">&quot;body&quot;</span>: <span class=\"string\">&quot;FIRST&quot;</span>\n  }],\n  <span class=\"string\">&quot;users&quot;</span>: [{\n    <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>,\n    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;@d2h&quot;</span>\n  }]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>It will first normalize the payload, so you can use this to push\nin data streaming in from your server structured the same way\nthat fetches and saves are structured.</p>\n</body></html>",
          "itemtype": "method",
          "name": "pushPayload",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "rawPayload",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 746,
          "description": "<html><head></head><body><p>This method is used to convert each JSON root key in the payload\ninto a modelName that it can use to look up the appropriate model for\nthat part of the payload.</p>\n<p>For example, your server may send a model name that does not correspond with\nthe name of the model in your app. Let&apos;s take a look at an example model,\nand an example payload:</p>\n<div class=\"highlight app/models/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.Model.extend({\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>  {\n    <span class=\"string\">&quot;blog/post&quot;</span>: {\n      <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;1</span>\n    }\n  }</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Ember Data is going to normalize the payload&apos;s root key for the modelName. As a result,\nit will try to look up the &quot;blog/post&quot; model. Since we don&apos;t have a model called &quot;blog/post&quot;\n(or a file called app/models/blog/post.js in ember-cli), Ember Data will throw an error\nbecause it cannot find the &quot;blog/post&quot; model.</p>\n<p>Since we want to remove this namespace, we can define a serializer for the application that will\nremove &quot;blog/&quot; from the payload key whenver it&apos;s encountered by Ember Data:</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  <span class=\"attr\">modelNameFromPayloadKey</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">payloadKey</span>) </span>{\n    <span class=\"keyword\">if</span> (payloadKey === <span class=\"string\">&apos;blog/post&apos;</span>) {\n      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._super(payloadKey.replace(<span class=\"string\">&apos;blog/&apos;</span>, <span class=\"string\">&apos;&apos;</span>));\n    } <span class=\"keyword\">else</span> {\n     <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._super(payloadKey);\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>After refreshing, Ember Data will appropriately look up the &quot;post&quot; model.</p>\n<p>By default the modelName for a model is its\nname in dasherized form. This means that a payload key like &quot;blogPost&quot; would be\nnormalized to &quot;blog-post&quot; when Ember Data looks up the model. Usually, Ember Data\ncan use the correct inflection to do this for you. Most of the time, you won&apos;t\nneed to override <code>modelNameFromPayloadKey</code> for this purpose.</p>\n</body></html>",
          "itemtype": "method",
          "name": "modelNameFromPayloadKey",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "the model's modelName",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 810,
          "description": "<html><head></head><body><p>Called when a record is saved in order to convert the\nrecord into JSON.</p>\n<p>By default, it creates a JSON object with a key for\neach attribute and belongsTo relationship.</p>\n<p>For example, consider this model:</p>\n<div class=\"highlight app/models/comment.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/comment.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>import DS from &apos;ember-data&apos;;\n\nexport default <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  title: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr<span class=\"literal\">()</span>,\n  body: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr<span class=\"literal\">()</span>,\n\n  author: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>belongs<span class=\"constructor\">To(&apos;<span class=\"params\">user</span>&apos;)</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The default serialization would create a JSON object like:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is unagi&quot;</span>,\n  <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;Rails? Omakase? O_O&quot;</span>,\n  <span class=\"attr\">&quot;author&quot;</span>: <span class=\"number\">12</span>\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>By default, attributes are passed through as-is, unless\nyou specified an attribute type (<code>DS.attr(&apos;date&apos;)</code>). If\nyou specify a transform, the JavaScript value will be\nserialized when inserted into the JSON hash.</p>\n<p>By default, belongs-to relationships are converted into\nIDs when inserted into the JSON hash.</p>\n<h2 id=\"ids\">IDs</h2>\n<p><code>serialize</code> takes an options hash with a single option:\n<code>includeId</code>. If this option is <code>true</code>, <code>serialize</code> will,\nby default include the ID in the JSON object it builds.</p>\n<p>The adapter passes in <code>includeId: true</code> when serializing\na record for <code>createRecord</code>, but not for <code>updateRecord</code>.</p>\n<h2 id=\"customization\">Customization</h2>\n<p>Your server may expect a different JSON format than the\nbuilt-in serialization format.</p>\n<p>In that case, you can implement <code>serialize</code> yourself and\nreturn a JSON hash of your choosing.</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  serialize: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var <span class=\"type\">json</span> = {\n      POST_TTL: <span class=\"keyword\">snapshot</span>.attr(<span class=\"string\">&apos;title&apos;</span>),\n      POST_BDY: <span class=\"keyword\">snapshot</span>.attr(<span class=\"string\">&apos;body&apos;</span>),\n      POST_CMS: <span class=\"keyword\">snapshot</span>.hasMany(<span class=\"string\">&apos;comments&apos;</span>, { ids: <span class=\"keyword\">true</span> })\n    }\n\n    <span class=\"keyword\">if</span> (<span class=\"keyword\">options</span>.includeId) {\n      <span class=\"type\">json</span>.POST_ID_ = <span class=\"keyword\">snapshot</span>.id;\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"type\">json</span>;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h2 id=\"customizing-an-app-wide-serializer\">Customizing an App-Wide Serializer</h2>\n<p>If you want to define a serializer for your entire\napplication, you&apos;ll probably want to use <code>eachAttribute</code>\nand <code>eachRelationship</code> on the record.</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  serialize: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var <span class=\"type\">json</span> = {};\n\n    <span class=\"keyword\">snapshot</span>.eachAttribute(<span class=\"keyword\">function</span>(<span class=\"type\">name</span>) {\n      <span class=\"type\">json</span>[serverAttributeName(<span class=\"type\">name</span>)] = <span class=\"keyword\">snapshot</span>.attr(<span class=\"type\">name</span>);\n    })\n\n    <span class=\"keyword\">snapshot</span>.eachRelationship(<span class=\"keyword\">function</span>(<span class=\"type\">name</span>, relationship) {\n      <span class=\"keyword\">if</span> (relationship.kind === <span class=\"string\">&apos;hasMany&apos;</span>) {\n        <span class=\"type\">json</span>[serverHasManyName(<span class=\"type\">name</span>)] = <span class=\"keyword\">snapshot</span>.hasMany(<span class=\"type\">name</span>, { ids: <span class=\"keyword\">true</span> });\n      }\n    });\n\n    <span class=\"keyword\">if</span> (<span class=\"keyword\">options</span>.includeId) {\n      <span class=\"type\">json</span>.ID_ = <span class=\"keyword\">snapshot</span>.id;\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"type\">json</span>;\n  }\n});\n\n<span class=\"keyword\">function</span> serverAttributeName(<span class=\"keyword\">attribute</span>) {\n  <span class=\"keyword\">return</span> <span class=\"keyword\">attribute</span>.underscore().toUpperCase();\n}\n\n<span class=\"keyword\">function</span> serverHasManyName(<span class=\"type\">name</span>) {\n  <span class=\"keyword\">return</span> serverAttributeName(<span class=\"type\">name</span>.singularize()) + &quot;_IDS&quot;;\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>This serializer will generate JSON that looks like this:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;TITLE&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n  <span class=\"attr\">&quot;BODY&quot;</span>: <span class=\"string\">&quot;Yep. Omakase.&quot;</span>,\n  <span class=\"attr\">&quot;COMMENT_IDS&quot;</span>: [ <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span> ]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h2 id=\"tweaking-the-default-json\">Tweaking the Default JSON</h2>\n<p>If you just want to do some small tweaks on the default JSON,\nyou can call super first and make the tweaks on the returned\nJSON.</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  serialize: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var <span class=\"type\">json</span> = this._super(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>);\n\n    <span class=\"type\">json</span>.subject = <span class=\"type\">json</span>.title;\n    <span class=\"keyword\">delete</span> <span class=\"type\">json</span>.title;\n\n    <span class=\"keyword\">return</span> <span class=\"type\">json</span>;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serialize",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "json",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 965,
          "description": "<html><head></head><body><p>You can use this method to customize the root keys serialized into the JSON.\nBy default the REST Serializer sends the modelName of a model, which is a camelized\nversion of the name.</p>\n<p>For example, your server may expect underscored root objects.</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  serializeIntoHash: <span class=\"keyword\">function</span>(data, <span class=\"keyword\">type</span>, <span class=\"type\">record</span>, <span class=\"keyword\">options</span>) {\n    var root = Ember.String.decamelize(<span class=\"keyword\">type</span>.modelName);\n    data[root] = this.serialize(<span class=\"type\">record</span>, <span class=\"keyword\">options</span>);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeIntoHash",
          "params": [
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 994,
          "description": "<html><head></head><body><p>You can use <code>payloadKeyFromModelName</code> to override the root key for an outgoing\nrequest. By default, the RESTSerializer returns a camelized version of the\nmodel&apos;s name.</p>\n<p>For a model called TacoParty, its <code>modelName</code> would be the string <code>taco-party</code>. The RESTSerializer\nwill send it to the server with <code>tacoParty</code> as the root key in the JSON payload:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;tacoParty&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>,\n    <span class=\"attr\">&quot;location&quot;</span>: <span class=\"string\">&quot;Matthew Beale&apos;s House&quot;</span>\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>For example, your server may expect dasherized root objects:</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  <span class=\"attr\">payloadKeyFromModelName</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">modelName</span>) </span>{\n    <span class=\"keyword\">return</span> Ember.String.dasherize(modelName);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Given a <code>TacoParty&apos; model, calling</code>save` on a tacoModel would produce an outgoing\nrequest like:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;taco-party&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>,\n    <span class=\"attr\">&quot;location&quot;</span>: <span class=\"string\">&quot;Matthew Beale&apos;s House&quot;</span>\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "payloadKeyFromModelName",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 1043,
          "description": "<html><head></head><body><p>Deprecated. Use modelNameFromPayloadKey instead</p>\n</body></html>",
          "itemtype": "method",
          "name": "typeForRoot",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "String"
          },
          "deprecated": true,
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 1059,
          "description": "<html><head></head><body><p>You can use this method to customize how polymorphic objects are serialized.\nBy default the JSON Serializer creates the key by appending <code>Type</code> to\nthe attribute and value from the model&apos;s camelcased model name.</p>\n</body></html>",
          "itemtype": "method",
          "name": "serializePolymorphicType",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 165,
          "description": "<html><head></head><body><p>Given a subclass of <code>DS.Model</code> and a JSON object this method will\niterate through each attribute of the <code>DS.Model</code> and invoke the\n<code>DS.Transform#deserialize</code> method on the matching property of the\nJSON object.  This method is typically called after the\nserializer&apos;s <code>normalize</code> method.</p>\n</body></html>",
          "itemtype": "method",
          "name": "applyTransforms",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "data",
              "description": "The data to transform",
              "type": "Object"
            }
          ],
          "return": {
            "description": "data The transformed data object",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 189,
          "description": "<html><head></head><body><p>The <code>normalizeResponse</code> method is used to normalize a payload from the\nserver to a JSON-API Document.</p>\n<p><a href=\"http://jsonapi.org/format/#document-structure\">http://jsonapi.org/format/#document-structure</a></p>\n<p>This method delegates to a more specific normalize method based on\nthe <code>requestType</code>.</p>\n<p>To override this method with a custom one, make sure to call\n<code>return this._super(store, primaryModelClass, payload, id, requestType)</code> with your\npre-processed data.</p>\n<p>Here&apos;s an example of using <code>normalizeResponse</code> manually:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>socket.on(&apos;message&apos;, <span class=\"keyword\">function</span>(message) {\n  var data = message.data;\n  var modelClass = store.model<span class=\"constructor\">For(<span class=\"params\">data</span>.<span class=\"params\">modelName</span>)</span>;\n  var serializer = store.serializer<span class=\"constructor\">For(<span class=\"params\">data</span>.<span class=\"params\">modelName</span>)</span>;\n  var json = serializer.normalize<span class=\"constructor\">SingleResponse(<span class=\"params\">store</span>, <span class=\"params\">modelClass</span>, <span class=\"params\">data</span>, <span class=\"params\">data</span>.<span class=\"params\">id</span>)</span>;\n\n  store.push(normalized);\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "normalizeResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 248,
          "itemtype": "method",
          "name": "normalizeFindRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 261,
          "itemtype": "method",
          "name": "normalizeQueryRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 274,
          "itemtype": "method",
          "name": "normalizeFindAllResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 287,
          "itemtype": "method",
          "name": "normalizeFindBelongsToResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 300,
          "itemtype": "method",
          "name": "normalizeFindHasManyResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 313,
          "itemtype": "method",
          "name": "normalizeFindManyResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 326,
          "itemtype": "method",
          "name": "normalizeQueryResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 339,
          "itemtype": "method",
          "name": "normalizeCreateRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 352,
          "itemtype": "method",
          "name": "normalizeDeleteRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 365,
          "itemtype": "method",
          "name": "normalizeUpdateRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 378,
          "itemtype": "method",
          "name": "normalizeSaveResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 391,
          "itemtype": "method",
          "name": "normalizeSingleResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 404,
          "itemtype": "method",
          "name": "normalizeArrayResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 417,
          "itemtype": "method",
          "name": "_normalizeResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            },
            {
              "name": "isSingle",
              "description": "",
              "type": "Boolean"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "access": "private",
          "tagname": "",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 460,
          "description": "<html><head></head><body><p>Normalizes a part of the JSON payload returned by\nthe server. You should override this method, munge the hash\nand call super if you have generic normalization to do.</p>\n<p>It takes the type of the record that is being normalized\n(as a DS.Model class), the property where the hash was\noriginally found, and the hash to normalize.</p>\n<p>You can use this method, for example, to normalize underscored keys to camelized\nor other general-purpose normalizations.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  <span class=\"attr\">normalize</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">typeClass, hash</span>) </span>{\n    <span class=\"keyword\">var</span> fields = Ember.get(typeClass, <span class=\"string\">&apos;fields&apos;</span>);\n    fields.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">field</span>) </span>{\n      <span class=\"keyword\">var</span> payloadField = Ember.String.underscore(field);\n      <span class=\"keyword\">if</span> (field === payloadField) { <span class=\"keyword\">return</span>; }\n\n      hash[field] = hash[payloadField];\n      <span class=\"keyword\">delete</span> hash[payloadField];\n    });\n    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._super.apply(<span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "normalize",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 513,
          "description": "<html><head></head><body><p>Returns the resource&apos;s ID.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractId",
          "params": [
            {
              "name": "modelClass",
              "description": "",
              "type": "Object"
            },
            {
              "name": "resourceHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 527,
          "description": "<html><head></head><body><p>Returns the resource&apos;s attributes formatted as a JSON-API &quot;attributes object&quot;.</p>\n<p><a href=\"http://jsonapi.org/format/#document-resource-object-attributes\">http://jsonapi.org/format/#document-resource-object-attributes</a></p>\n</body></html>",
          "itemtype": "method",
          "name": "extractAttributes",
          "params": [
            {
              "name": "modelClass",
              "description": "",
              "type": "Object"
            },
            {
              "name": "resourceHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 551,
          "description": "<html><head></head><body><p>Returns a relationship formatted as a JSON-API &quot;relationship object&quot;.</p>\n<p><a href=\"http://jsonapi.org/format/#document-resource-object-relationships\">http://jsonapi.org/format/#document-resource-object-relationships</a></p>\n</body></html>",
          "itemtype": "method",
          "name": "extractRelationship",
          "params": [
            {
              "name": "relationshipModelName",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationshipHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 582,
          "description": "<html><head></head><body><p>Returns the resource&apos;s relationships formatted as a JSON-API &quot;relationships object&quot;.</p>\n<p><a href=\"http://jsonapi.org/format/#document-resource-object-relationships\">http://jsonapi.org/format/#document-resource-object-relationships</a></p>\n</body></html>",
          "itemtype": "method",
          "name": "extractRelationships",
          "params": [
            {
              "name": "modelClass",
              "description": "",
              "type": "Object"
            },
            {
              "name": "resourceHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 626,
          "itemtype": "method",
          "name": "modelNameFromPayloadKey",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "the model's modelName",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 636,
          "description": "<html><head></head><body><p>You can use this method to normalize all payloads, regardless of whether they\nrepresent single records or an array.</p>\n<p>For example, you might want to remove some extraneous data from the payload:</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  <span class=\"attr\">normalizePayload</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">payload</span>) </span>{\n    <span class=\"keyword\">delete</span> payload.version;\n    <span class=\"keyword\">delete</span> payload.status;\n    <span class=\"keyword\">return</span> payload;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "normalizePayload",
          "params": [
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "the normalized payload",
            "type": "Object"
          },
          "deprecated": true,
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 663,
          "itemtype": "method",
          "name": "normalizeAttributes",
          "access": "private",
          "tagname": "",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 682,
          "itemtype": "method",
          "name": "normalizeRelationships",
          "access": "private",
          "tagname": "",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 701,
          "itemtype": "method",
          "name": "normalizeUsingDeclaredMapping",
          "access": "private",
          "tagname": "",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 722,
          "itemtype": "method",
          "name": "normalizeId",
          "access": "private",
          "tagname": "",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 735,
          "itemtype": "method",
          "name": "normalizeErrors",
          "access": "private",
          "tagname": "",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 746,
          "description": "<html><head></head><body><p>Looks up the property key that was set by the custom <code>attr</code> mapping\npassed to the serializer.</p>\n</body></html>",
          "itemtype": "method",
          "name": "_getMappedKey",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "key",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 773,
          "description": "<html><head></head><body><p>Check attrs.key.serialize property to inform if the <code>key</code>\ncan be serialized</p>\n</body></html>",
          "itemtype": "method",
          "name": "_canSerialize",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the key can be serialized",
            "type": "Boolean"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 788,
          "description": "<html><head></head><body><p>When attrs.key.serialize is set to true then\nit takes priority over the other checks and the related\nattribute/relationship will be serialized</p>\n</body></html>",
          "itemtype": "method",
          "name": "_mustSerialize",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the key must be serialized",
            "type": "Boolean"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 804,
          "description": "<html><head></head><body><p>Check if the given hasMany relationship should be serialized</p>\n</body></html>",
          "itemtype": "method",
          "name": "_shouldSerializeHasMany",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "relationshipType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the hasMany relationship should be serialized",
            "type": "Boolean"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 824,
          "description": "<html><head></head><body><p>Called when a record is saved in order to convert the\nrecord into JSON.</p>\n<p>By default, it creates a JSON object with a key for\neach attribute and belongsTo relationship.</p>\n<p>For example, consider this model:</p>\n<div class=\"highlight app/models/comment.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/comment.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>import DS from &apos;ember-data&apos;;\n\nexport default <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  title: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr<span class=\"literal\">()</span>,\n  body: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr<span class=\"literal\">()</span>,\n\n  author: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>belongs<span class=\"constructor\">To(&apos;<span class=\"params\">user</span>&apos;)</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The default serialization would create a JSON object like:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is unagi&quot;</span>,\n  <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;Rails? Omakase? O_O&quot;</span>,\n  <span class=\"attr\">&quot;author&quot;</span>: <span class=\"number\">12</span>\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>By default, attributes are passed through as-is, unless\nyou specified an attribute type (<code>DS.attr(&apos;date&apos;)</code>). If\nyou specify a transform, the JavaScript value will be\nserialized when inserted into the JSON hash.</p>\n<p>By default, belongs-to relationships are converted into\nIDs when inserted into the JSON hash.</p>\n<h2 id=\"ids\">IDs</h2>\n<p><code>serialize</code> takes an options hash with a single option:\n<code>includeId</code>. If this option is <code>true</code>, <code>serialize</code> will,\nby default include the ID in the JSON object it builds.</p>\n<p>The adapter passes in <code>includeId: true</code> when serializing\na record for <code>createRecord</code>, but not for <code>updateRecord</code>.</p>\n<h2 id=\"customization\">Customization</h2>\n<p>Your server may expect a different JSON format than the\nbuilt-in serialization format.</p>\n<p>In that case, you can implement <code>serialize</code> yourself and\nreturn a JSON hash of your choosing.</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serialize: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var <span class=\"type\">json</span> = {\n      POST_TTL: <span class=\"keyword\">snapshot</span>.attr(<span class=\"string\">&apos;title&apos;</span>),\n      POST_BDY: <span class=\"keyword\">snapshot</span>.attr(<span class=\"string\">&apos;body&apos;</span>),\n      POST_CMS: <span class=\"keyword\">snapshot</span>.hasMany(<span class=\"string\">&apos;comments&apos;</span>, { ids: <span class=\"keyword\">true</span> })\n    }\n\n    <span class=\"keyword\">if</span> (<span class=\"keyword\">options</span>.includeId) {\n      <span class=\"type\">json</span>.POST_ID_ = <span class=\"keyword\">snapshot</span>.id;\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"type\">json</span>;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h2 id=\"customizing-an-app-wide-serializer\">Customizing an App-Wide Serializer</h2>\n<p>If you want to define a serializer for your entire\napplication, you&apos;ll probably want to use <code>eachAttribute</code>\nand <code>eachRelationship</code> on the record.</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serialize: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var <span class=\"type\">json</span> = {};\n\n    <span class=\"keyword\">snapshot</span>.eachAttribute(<span class=\"keyword\">function</span>(<span class=\"type\">name</span>) {\n      <span class=\"type\">json</span>[serverAttributeName(<span class=\"type\">name</span>)] = <span class=\"keyword\">snapshot</span>.attr(<span class=\"type\">name</span>);\n    })\n\n    <span class=\"keyword\">snapshot</span>.eachRelationship(<span class=\"keyword\">function</span>(<span class=\"type\">name</span>, relationship) {\n      <span class=\"keyword\">if</span> (relationship.kind === <span class=\"string\">&apos;hasMany&apos;</span>) {\n        <span class=\"type\">json</span>[serverHasManyName(<span class=\"type\">name</span>)] = <span class=\"keyword\">snapshot</span>.hasMany(<span class=\"type\">name</span>, { ids: <span class=\"keyword\">true</span> });\n      }\n    });\n\n    <span class=\"keyword\">if</span> (<span class=\"keyword\">options</span>.includeId) {\n      <span class=\"type\">json</span>.ID_ = <span class=\"keyword\">snapshot</span>.id;\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"type\">json</span>;\n  }\n});\n\n<span class=\"keyword\">function</span> serverAttributeName(<span class=\"keyword\">attribute</span>) {\n  <span class=\"keyword\">return</span> <span class=\"keyword\">attribute</span>.underscore().toUpperCase();\n}\n\n<span class=\"keyword\">function</span> serverHasManyName(<span class=\"type\">name</span>) {\n  <span class=\"keyword\">return</span> serverAttributeName(<span class=\"type\">name</span>.singularize()) + &quot;_IDS&quot;;\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>This serializer will generate JSON that looks like this:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;TITLE&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n  <span class=\"attr\">&quot;BODY&quot;</span>: <span class=\"string\">&quot;Yep. Omakase.&quot;</span>,\n  <span class=\"attr\">&quot;COMMENT_IDS&quot;</span>: [ <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span> ]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h2 id=\"tweaking-the-default-json\">Tweaking the Default JSON</h2>\n<p>If you just want to do some small tweaks on the default JSON,\nyou can call super first and make the tweaks on the returned\nJSON.</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  <span class=\"attr\">serialize</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">snapshot, options</span>) </span>{\n    <span class=\"keyword\">var</span> json = <span class=\"keyword\">this</span>._super.apply(<span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>);\n\n    json.subject = json.title;\n    <span class=\"keyword\">delete</span> json.title;\n\n    <span class=\"keyword\">return</span> json;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serialize",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "json",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1001,
          "description": "<html><head></head><body><p>You can use this method to customize how a serialized record is added to the complete\nJSON hash to be sent to the server. By default the JSON Serializer does not namespace\nthe payload and just sends the raw serialized JSON object.\nIf your server expects namespaced keys, you should consider using the RESTSerializer.\nOtherwise you can override this method to customize how the record is added to the hash.</p>\n<p>For example, your server may expect underscored root objects.</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  serializeIntoHash: <span class=\"keyword\">function</span>(data, <span class=\"keyword\">type</span>, <span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var root = Ember.String.decamelize(<span class=\"keyword\">type</span>.modelName);\n    data[root] = this.serialize(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeIntoHash",
          "params": [
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1031,
          "description": "<html><head></head><body><p><code>serializeAttribute</code> can be used to customize how <code>DS.attr</code>\nproperties are serialized</p>\n<p>For example if you wanted to ensure all your attributes were always\nserialized as properties on an <code>attributes</code> object you could\nwrite:</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serializeAttribute: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"type\">json</span>, key, attributes) {\n    <span class=\"type\">json</span>.attributes = <span class=\"type\">json</span>.attributes || {};\n    this._super(<span class=\"keyword\">snapshot</span>, <span class=\"type\">json</span>.attributes, key, attributes);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeAttribute",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "attribute",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1078,
          "description": "<html><head></head><body><p><code>serializeBelongsTo</code> can be used to customize how <code>DS.belongsTo</code>\nproperties are serialized.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td>\n              <td class=\"code\"><pre>import DS from &apos;ember-data&apos;;\n\nexport default <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">JSONSerializer</span>.</span></span>extend({\n  serializeBelongsTo: <span class=\"keyword\">function</span>(snapshot, json, relationship) {\n    var key = relationship.key;\n\n    var belongsTo = snapshot.belongs<span class=\"constructor\">To(<span class=\"params\">key</span>)</span>;\n\n    key = this.keyForRelationship ? this.key<span class=\"constructor\">ForRelationship(<span class=\"params\">key</span>, <span class=\"string\">&quot;belongsTo&quot;</span>, <span class=\"string\">&quot;serialize&quot;</span>)</span> : key;\n\n    json<span class=\"literal\">[<span class=\"identifier\">key</span>]</span> = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Ember</span>.</span></span>is<span class=\"constructor\">None(<span class=\"params\">belongsTo</span>)</span> ? belongsTo : belongsTo.record.<span class=\"keyword\">to</span><span class=\"constructor\">JSON()</span>;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeBelongsTo",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1131,
          "description": "<html><head></head><body><p><code>serializeHasMany</code> can be used to customize how <code>DS.hasMany</code>\nproperties are serialized.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  <span class=\"attr\">serializeHasMany</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">snapshot, json, relationship</span>) </span>{\n    <span class=\"keyword\">var</span> key = relationship.key;\n    <span class=\"keyword\">if</span> (key === <span class=\"string\">&apos;comments&apos;</span>) {\n      <span class=\"keyword\">return</span>;\n    } <span class=\"keyword\">else</span> {\n      <span class=\"keyword\">this</span>._super.apply(<span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>);\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeHasMany",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1174,
          "description": "<html><head></head><body><p>You can use this method to customize how polymorphic objects are\nserialized. Objects are considered to be polymorphic if\n<code>{ polymorphic: true }</code> is pass as the second argument to the\n<code>DS.belongsTo</code> function.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/comment.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/comment.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS from <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serializePolymorphicType: function(snapshot, json, relationship) {\n    var <span class=\"built_in\">key</span> = relationship.<span class=\"built_in\">key</span>,\n        belongsTo = snapshot.belongsTo(<span class=\"built_in\">key</span>);\n    <span class=\"built_in\">key</span> = <span class=\"keyword\">this</span>.keyForAttribute ? <span class=\"keyword\">this</span>.keyForAttribute(<span class=\"built_in\">key</span>, <span class=\"string\">&quot;serialize&quot;</span>) : <span class=\"built_in\">key</span>;\n\n    <span class=\"keyword\">if</span> (Ember.isNone(belongsTo)) {\n      json[<span class=\"built_in\">key</span> + <span class=\"string\">&quot;_type&quot;</span>] = <span class=\"keyword\">null</span>;\n    } <span class=\"keyword\">else</span> {\n      json[<span class=\"built_in\">key</span> + <span class=\"string\">&quot;_type&quot;</span>] = belongsTo.modelName;\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializePolymorphicType",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1209,
          "description": "<html><head></head><body><p>The <code>extract</code> method is used to deserialize payload data from the\nserver. By default the <code>JSONSerializer</code> does not push the records\ninto the store. However records that subclass <code>JSONSerializer</code>\nsuch as the <code>RESTSerializer</code> may push records into the store as\npart of the extract call.</p>\n<p>This method delegates to a more specific extract method based on\nthe <code>requestType</code>.</p>\n<p>To override this method with a custom one, make sure to call\n<code>return this._super(store, type, payload, id, requestType)</code> with your\npre-processed data.</p>\n<p>Here&apos;s an example of using <code>extract</code> manually:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>socket.<span class=\"keyword\">on</span>(<span class=\"string\">&apos;message&apos;</span>, function(message) {\n  <span class=\"built_in\">var</span> <span class=\"built_in\">data</span> = message.<span class=\"built_in\">data</span>;\n  <span class=\"built_in\">var</span> typeClass = store.modelFor(message.modelName);\n  <span class=\"built_in\">var</span> serializer = store.serializerFor(typeClass.modelName);\n  <span class=\"built_in\">var</span> record = serializer.extract(store, typeClass, <span class=\"built_in\">data</span>, <span class=\"built_in\">data</span>.id, <span class=\"string\">&apos;single&apos;</span>);\n\n  store.push(message.modelName, record);\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "extract",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1251,
          "description": "<html><head></head><body><p><code>extractFindAll</code> is a hook into the extract method used when a\ncall is made to <code>DS.Store#findAll</code>. By default this method is an\nalias for <a href=\"#method_extractArray\">extractArray</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractFindAll",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1267,
          "description": "<html><head></head><body><p><code>extractFindQuery</code> is a hook into the extract method used when a\ncall is made to <code>DS.Store#findQuery</code>. By default this method is an\nalias for <a href=\"#method_extractArray\">extractArray</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractFindQuery",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1283,
          "description": "<html><head></head><body><p><code>extractQueryRecord</code> is a hook into the extract method used when a\ncall is made to <code>DS.Store#queryRecord</code>. By default this method is an\nalias for <a href=\"#method_extractSingle\">extractSingle</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractQueryRecord",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "object A hash of deserialized object",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1299,
          "description": "<html><head></head><body><p><code>extractFindMany</code> is a hook into the extract method used when a\ncall is made to <code>DS.Store#findMany</code>. By default this method is\nalias for <a href=\"#method_extractArray\">extractArray</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractFindMany",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1315,
          "description": "<html><head></head><body><p><code>extractFindHasMany</code> is a hook into the extract method used when a\ncall is made to <code>DS.Store#findHasMany</code>. By default this method is\nalias for <a href=\"#method_extractArray\">extractArray</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractFindHasMany",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1332,
          "description": "<html><head></head><body><p><code>extractCreateRecord</code> is a hook into the extract method used when a\ncall is made to <code>DS.Model#save</code> and the record is new. By default\nthis method is alias for <a href=\"#method_extractSave\">extractSave</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractCreateRecord",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1348,
          "description": "<html><head></head><body><p><code>extractUpdateRecord</code> is a hook into the extract method used when\na call is made to <code>DS.Model#save</code> and the record has been updated.\nBy default this method is alias for <a href=\"#method_extractSave\">extractSave</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractUpdateRecord",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1364,
          "description": "<html><head></head><body><p><code>extractDeleteRecord</code> is a hook into the extract method used when\na call is made to <code>DS.Model#save</code> and the record has been deleted.\nBy default this method is alias for <a href=\"#method_extractSave\">extractSave</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractDeleteRecord",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1381,
          "description": "<html><head></head><body><p><code>extractFind</code> is a hook into the extract method used when\na call is made to <code>DS.Store#find</code>. By default this method is\nalias for <a href=\"#method_extractSingle\">extractSingle</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractFind",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1398,
          "description": "<html><head></head><body><p><code>extractFindBelongsTo</code> is a hook into the extract method used when\na call is made to <code>DS.Store#findBelongsTo</code>. By default this method is\nalias for <a href=\"#method_extractSingle\">extractSingle</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractFindBelongsTo",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1414,
          "description": "<html><head></head><body><p><code>extractSave</code> is a hook into the extract method used when a call\nis made to <code>DS.Model#save</code>. By default this method is alias\nfor <a href=\"#method_extractSingle\">extractSingle</a>.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractSave",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1431,
          "description": "<html><head></head><body><p><code>extractSingle</code> is used to deserialize a single record returned\nfrom the adapter.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  <span class=\"attr\">extractSingle</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">store, typeClass, payload</span>) </span>{\n    payload.comments = payload._embedded.comment;\n    <span class=\"keyword\">delete</span> payload._embedded;\n\n    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._super(store, typeClass, payload);\n  },\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "extractSingle",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1470,
          "description": "<html><head></head><body><p><code>extractArray</code> is used to deserialize an array of records\nreturned from the adapter.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  <span class=\"attr\">extractArray</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">store, typeClass, payload</span>) </span>{\n    <span class=\"keyword\">return</span> payload.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">json</span>) </span>{\n      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.extractSingle(store, typeClass, json);\n    }, <span class=\"keyword\">this</span>);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "extractArray",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "arrayPayload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1512,
          "description": "<html><head></head><body><p><code>extractMeta</code> is used to deserialize any meta information in the\nadapter payload. By default Ember Data expects meta information to\nbe located on the <code>meta</code> property of the payload object.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  <span class=\"attr\">extractMeta</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">store, typeClass, payload</span>) </span>{\n    <span class=\"keyword\">if</span> (payload &amp;&amp; payload._pagination) {\n      store.setMetadataFor(typeClass, payload._pagination);\n      <span class=\"keyword\">delete</span> payload._pagination;\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "extractMeta",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1548,
          "description": "<html><head></head><body><p><code>extractErrors</code> is used to extract model errors when a call is made\nto <code>DS.Model#save</code> which fails with an <code>InvalidError</code>. By default\nEmber Data expects error information to be located on the <code>errors</code>\nproperty of the payload object.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  <span class=\"attr\">extractErrors</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">store, typeClass, payload, id</span>) </span>{\n    <span class=\"keyword\">if</span> (payload &amp;&amp; <span class=\"keyword\">typeof</span> payload === <span class=\"string\">&apos;object&apos;</span> &amp;&amp; payload._problems) {\n      payload = payload._problems;\n      <span class=\"keyword\">this</span>.normalizeErrors(typeClass, payload);\n    }\n    <span class=\"keyword\">return</span> payload;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "extractErrors",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            }
          ],
          "return": {
            "description": "json The deserialized errors",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1586,
          "description": "<html><head></head><body><p><code>keyForAttribute</code> can be used to define rules for how to convert an\nattribute name in your model to a key in your JSON.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre>import DS from &apos;ember-data&apos;;\n\nexport default <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">RESTSerializer</span>.</span></span>extend({\n  keyForAttribute: <span class=\"keyword\">function</span>(attr, <span class=\"keyword\">method</span>) {\n    return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Ember</span>.</span><span class=\"module\"><span class=\"identifier\">String</span>.</span></span>underscore(attr).<span class=\"keyword\">to</span><span class=\"constructor\">UpperCase()</span>;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "keyForAttribute",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "method",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1611,
          "description": "<html><head></head><body><p><code>keyForRelationship</code> can be used to define a custom key when\nserializing and deserializing relationship properties. By default\n<code>JSONSerializer</code> does not provide an implementation of this method.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre> <span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n   <span class=\"attr\">keyForRelationship</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">key, relationship, method</span>) </span>{\n     <span class=\"keyword\">return</span> <span class=\"string\">&apos;rel_&apos;</span> + Ember.String.underscore(key);\n   }\n });</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "keyForRelationship",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "String"
            },
            {
              "name": "method",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1638,
          "description": "<html><head></head><body><p><code>keyForLink</code> can be used to define a custom key when deserializing link\nproperties.</p>\n</body></html>",
          "itemtype": "method",
          "name": "keyForLink",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "kind",
              "description": "`belongsTo` or `hasMany`",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1653,
          "itemtype": "method",
          "name": "transformFor",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "attributeType",
              "description": "",
              "type": "String"
            },
            {
              "name": "skipAssertion",
              "description": "",
              "type": "Boolean"
            }
          ],
          "return": {
            "description": "transform",
            "type": "DS.Transform"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/system/serializer.js",
          "line": 63,
          "description": "<html><head></head><body><p>The <code>extract</code> method is used to deserialize the payload received from your\ndata source into the form that Ember Data expects.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extract",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        },
        {
          "file": "packages/ember-data/lib/system/serializer.js",
          "line": 77,
          "description": "<html><head></head><body><p>The <code>serialize</code> method is used when a record is saved in order to convert\nthe record into the form that your external data source expects.</p>\n<p><code>serialize</code> takes an optional <code>options</code> hash with a single option:</p>\n<ul>\n<li><code>includeId</code>: If this is <code>true</code>, <code>serialize</code> should include the ID\nin the serialized object it builds.</li>\n</ul>\n</body></html>",
          "itemtype": "method",
          "name": "serialize",
          "params": [
            {
              "name": "record",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object",
              "optional": true
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        },
        {
          "file": "packages/ember-data/lib/system/serializer.js",
          "line": 93,
          "description": "<html><head></head><body><p>The <code>normalize</code> method is used to convert a payload received from your\nexternal data source into the normalized form <code>store.push()</code> expects. You\nshould override this method, munge the hash and return the normalized\npayload.</p>\n</body></html>",
          "itemtype": "method",
          "name": "normalize",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "packages/ember-data/lib/serializers/rest-serializer.js",
          "line": 68,
          "description": "<html><head></head><body><p>If you want to do normalizations specific to some part of the payload, you\ncan specify those under <code>normalizeHash</code>.</p>\n<p>For example, given the following json where the the <code>IDs</code> under\n<code>&quot;comments&quot;</code> are provided as <code>_id</code> instead of <code>id</code>.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;post&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,\n    <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n    <span class=\"attr\">&quot;comments&quot;</span>: [ <span class=\"number\">1</span>, <span class=\"number\">2</span> ]\n  },\n  <span class=\"attr\">&quot;comments&quot;</span>: [{\n    <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"number\">1</span>,\n    <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;FIRST&quot;</span>\n  }, {\n    <span class=\"attr\">&quot;_id&quot;</span>: <span class=\"number\">2</span>,\n    <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;Rails is unagi&quot;</span>\n  }]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>You use <code>normalizeHash</code> to normalize just the comments:</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  <span class=\"attr\">normalizeHash</span>: {\n    <span class=\"attr\">comments</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">hash</span>) </span>{\n      hash.id = hash._id;\n      <span class=\"keyword\">delete</span> hash._id;\n      <span class=\"keyword\">return</span> hash;\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The key under <code>normalizeHash</code> is usually just the original key\nthat was in the original payload. However, key names will be\nimpacted by any modifications done in the <code>normalizePayload</code>\nmethod. The <code>DS.RESTSerializer</code>&apos;s default implementation makes no\nchanges to the payload keys.</p>\n</body></html>",
          "itemtype": "property",
          "name": "normalizeHash",
          "type": "{Object}",
          "default": "undefined",
          "deprecated": true,
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.RESTSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 77,
          "description": "<html><head></head><body><p>The primaryKey is used when serializing and deserializing\ndata. Ember Data always uses the <code>id</code> property to store the id of\nthe record. The external source may not always follow this\nconvention. In these cases it is useful to override the\nprimaryKey property to match the primaryKey of your external\nstore.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/application.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  primaryKey: <span class=\"string\">&apos;_id&apos;</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "property",
          "name": "primaryKey",
          "type": "{String}",
          "default": "'id'",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 101,
          "description": "<html><head></head><body><p>The <code>attrs</code> object can be used to declare a simple mapping between\nproperty names on <code>DS.Model</code> records and payload keys in the\nserialized JSON object representing the record. An object with the\nproperty <code>key</code> can also be used to designate the attribute&apos;s key on\nthe response payload.</p>\n<p>Example</p>\n<div class=\"highlight app/models/person.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/person.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>import DS from &apos;ember-data&apos;;\n\nexport default <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  firstName: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  lastName: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  occupation: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  admin: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;boolean&apos;)\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight app/serializers/person.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/person.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  attrs: {\n    admin: <span class=\"string\">&apos;is_admin&apos;</span>,\n    occupation: { key: <span class=\"string\">&apos;career&apos;</span> }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>You can also remove attributes by setting the <code>serialize</code> key to\nfalse in your mapping object.</p>\n<p>Example</p>\n<div class=\"highlight app/serializers/person.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/person.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  attrs: {\n    admin: {serialize: <span class=\"literal\">false</span>},\n    occupation: { key: <span class=\"string\">&apos;career&apos;</span> }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>When serialized:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;firstName&quot;</span>: <span class=\"string\">&quot;Harry&quot;</span>,\n  <span class=\"attr\">&quot;lastName&quot;</span>: <span class=\"string\">&quot;Houdini&quot;</span>,\n  <span class=\"attr\">&quot;career&quot;</span>: <span class=\"string\">&quot;magician&quot;</span>\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Note that the <code>admin</code> is now not included in the payload.</p>\n</body></html>",
          "itemtype": "property",
          "name": "attrs",
          "type": "{Object}",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.JSONSerializer"
        },
        {
          "file": "packages/ember-data/lib/system/serializer.js",
          "line": 52,
          "description": "<html><head></head><body><p>The <code>store</code> property is the application&apos;s <code>store</code> that contains all records.\nIt&apos;s injected as a service.\nIt can be used to push records from a non flat data structure server\nresponse.</p>\n</body></html>",
          "itemtype": "property",
          "name": "store",
          "type": "{DS.Store}",
          "access": "public",
          "tagname": "",
          "class": "DS.ActiveModelSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": {
          "id": "ember-data-1.13.16-DS.RESTSerializer",
          "type": "class"
        }
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-1.13.16-ember-data",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-1.13.16",
          "type": "project-version"
        }
      }
    }
  }
}