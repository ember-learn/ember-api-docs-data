{
  "data": {
    "id": "ember-data-1.13.16-DS.JSONSerializer",
    "type": "class",
    "attributes": {
      "name": "DS.JSONSerializer",
      "shortname": "DS.JSONSerializer",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember-data",
      "namespace": "DS",
      "file": "packages/ember-data/lib/serializers/json-serializer.js",
      "line": 14,
      "description": "Ember Data 2.0 Serializer:\n\nIn Ember Data a Serializer is used to serialize and deserialize\nrecords when they are transferred in and out of an external source.\nThis process involves normalizing property names, transforming\nattribute values and serializing relationships.\n\nBy default Ember Data recommends using the JSONApiSerializer.\n\n`JSONSerializer` is useful for simpler or legacy backends that may\nnot support the http://jsonapi.org/ spec.\n\n`JSONSerializer` normalizes a JSON payload that looks like:\n\n```js\n  App.User = DS.Model.extend({\n    name: DS.attr(),\n    friends: DS.hasMany('user'),\n    house: DS.belongsTo('location'),\n  });\n```\n\n```js\n  {\n    id: 1,\n    name: 'Sebastian',\n    friends: [3, 4],\n    links: {\n      house: '/houses/lefkada'\n    }\n  }\n```\n\nto JSONApi format that the Ember Data store expects.\n\nYou can customize how JSONSerializer processes it's payload by passing options in\nthe attrs hash or by subclassing the JSONSerializer and overriding hooks:\n\n  -To customize how a single record is normalized, use the `normalize` hook\n  -To customize how JSONSerializer normalizes the whole server response, use the\n    normalizeResponse hook\n  -To customize how JSONSerializer normalizes a specific response from the server,\n    use one of the many specific normalizeResponse hooks\n  -To customize how JSONSerializer normalizes your id, attributes or relationships,\n    use the extractId, extractAttributes and extractRelationships hooks.\n\nJSONSerializer normalization process follows these steps:\n  - `normalizeResponse` - entry method to the Serializer\n  - `normalizeCreateRecordResponse` - a normalizeResponse for a specific operation is called\n  - `normalizeSingleResponse`|`normalizeArrayResponse` - for methods like `createRecord` we expect\n    a single record back, while for methods like `findAll` we expect multiple methods back\n  - `normalize` - normalizeArray iterates and calls normalize for each of it's records while normalizeSingle\n    calls it once. This is the method you most likely want to subclass\n  - `extractId` | `extractAttributes` | `extractRelationships` - normalize delegates to these methods to\n    turn the record payload into the JSONApi format",
      "extends": "DS.Serializer",
      "methods": [
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 165,
          "description": "Given a subclass of `DS.Model` and a JSON object this method will\niterate through each attribute of the `DS.Model` and invoke the\n`DS.Transform#deserialize` method on the matching property of the\nJSON object.  This method is typically called after the\nserializer's `normalize` method.",
          "itemtype": "method",
          "name": "applyTransforms",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "data",
              "description": "The data to transform",
              "type": "Object"
            }
          ],
          "return": {
            "description": "data The transformed data object",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 189,
          "description": "The `normalizeResponse` method is used to normalize a payload from the\nserver to a JSON-API Document.\n\nhttp://jsonapi.org/format/#document-structure\n\nThis method delegates to a more specific normalize method based on\nthe `requestType`.\n\nTo override this method with a custom one, make sure to call\n`return this._super(store, primaryModelClass, payload, id, requestType)` with your\npre-processed data.\n\nHere's an example of using `normalizeResponse` manually:\n\n```javascript\nsocket.on('message', function(message) {\n  var data = message.data;\n  var modelClass = store.modelFor(data.modelName);\n  var serializer = store.serializerFor(data.modelName);\n  var json = serializer.normalizeSingleResponse(store, modelClass, data, data.id);\n\n  store.push(normalized);\n});\n```",
          "itemtype": "method",
          "name": "normalizeResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 248,
          "itemtype": "method",
          "name": "normalizeFindRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 261,
          "itemtype": "method",
          "name": "normalizeQueryRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 274,
          "itemtype": "method",
          "name": "normalizeFindAllResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 287,
          "itemtype": "method",
          "name": "normalizeFindBelongsToResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 300,
          "itemtype": "method",
          "name": "normalizeFindHasManyResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 313,
          "itemtype": "method",
          "name": "normalizeFindManyResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 326,
          "itemtype": "method",
          "name": "normalizeQueryResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 339,
          "itemtype": "method",
          "name": "normalizeCreateRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 352,
          "itemtype": "method",
          "name": "normalizeDeleteRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 365,
          "itemtype": "method",
          "name": "normalizeUpdateRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 378,
          "itemtype": "method",
          "name": "normalizeSaveResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 391,
          "itemtype": "method",
          "name": "normalizeSingleResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 404,
          "itemtype": "method",
          "name": "normalizeArrayResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 417,
          "itemtype": "method",
          "name": "_normalizeResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            },
            {
              "name": "isSingle",
              "description": "",
              "type": "Boolean"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 460,
          "description": "Normalizes a part of the JSON payload returned by\nthe server. You should override this method, munge the hash\nand call super if you have generic normalization to do.\n\nIt takes the type of the record that is being normalized\n(as a DS.Model class), the property where the hash was\noriginally found, and the hash to normalize.\n\nYou can use this method, for example, to normalize underscored keys to camelized\nor other general-purpose normalizations.\n\nExample\n\n```js {data-filename=app/serializers/application.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  normalize: function(typeClass, hash) {\n    var fields = Ember.get(typeClass, 'fields');\n    fields.forEach(function(field) {\n      var payloadField = Ember.String.underscore(field);\n      if (field === payloadField) { return; }\n\n      hash[field] = hash[payloadField];\n      delete hash[payloadField];\n    });\n    return this._super.apply(this, arguments);\n  }\n});\n```",
          "itemtype": "method",
          "name": "normalize",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 513,
          "description": "Returns the resource's ID.",
          "itemtype": "method",
          "name": "extractId",
          "params": [
            {
              "name": "modelClass",
              "description": "",
              "type": "Object"
            },
            {
              "name": "resourceHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 527,
          "description": "Returns the resource's attributes formatted as a JSON-API \"attributes object\".\n\nhttp://jsonapi.org/format/#document-resource-object-attributes",
          "itemtype": "method",
          "name": "extractAttributes",
          "params": [
            {
              "name": "modelClass",
              "description": "",
              "type": "Object"
            },
            {
              "name": "resourceHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 551,
          "description": "Returns a relationship formatted as a JSON-API \"relationship object\".\n\nhttp://jsonapi.org/format/#document-resource-object-relationships",
          "itemtype": "method",
          "name": "extractRelationship",
          "params": [
            {
              "name": "relationshipModelName",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationshipHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 582,
          "description": "Returns the resource's relationships formatted as a JSON-API \"relationships object\".\n\nhttp://jsonapi.org/format/#document-resource-object-relationships",
          "itemtype": "method",
          "name": "extractRelationships",
          "params": [
            {
              "name": "modelClass",
              "description": "",
              "type": "Object"
            },
            {
              "name": "resourceHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 626,
          "itemtype": "method",
          "name": "modelNameFromPayloadKey",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "the model's modelName",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 636,
          "description": "You can use this method to normalize all payloads, regardless of whether they\nrepresent single records or an array.\n\nFor example, you might want to remove some extraneous data from the payload:\n\n```js {data-filename=app/serializers/application.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  normalizePayload: function(payload) {\n    delete payload.version;\n    delete payload.status;\n    return payload;\n  }\n});\n```",
          "itemtype": "method",
          "name": "normalizePayload",
          "params": [
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "the normalized payload",
            "type": "Object"
          },
          "deprecated": true,
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 663,
          "itemtype": "method",
          "name": "normalizeAttributes",
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 682,
          "itemtype": "method",
          "name": "normalizeRelationships",
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 701,
          "itemtype": "method",
          "name": "normalizeUsingDeclaredMapping",
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 722,
          "itemtype": "method",
          "name": "normalizeId",
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 735,
          "itemtype": "method",
          "name": "normalizeErrors",
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 746,
          "description": "Looks up the property key that was set by the custom `attr` mapping\npassed to the serializer.",
          "itemtype": "method",
          "name": "_getMappedKey",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "key",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 773,
          "description": "Check attrs.key.serialize property to inform if the `key`\ncan be serialized",
          "itemtype": "method",
          "name": "_canSerialize",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the key can be serialized",
            "type": "Boolean"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 788,
          "description": "When attrs.key.serialize is set to true then\nit takes priority over the other checks and the related\nattribute/relationship will be serialized",
          "itemtype": "method",
          "name": "_mustSerialize",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the key must be serialized",
            "type": "Boolean"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 804,
          "description": "Check if the given hasMany relationship should be serialized",
          "itemtype": "method",
          "name": "_shouldSerializeHasMany",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "relationshipType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the hasMany relationship should be serialized",
            "type": "Boolean"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 824,
          "description": "Called when a record is saved in order to convert the\nrecord into JSON.\n\nBy default, it creates a JSON object with a key for\neach attribute and belongsTo relationship.\n\nFor example, consider this model:\n\n```js {data-filename=app/models/comment.js}\nimport DS from 'ember-data';\n\nexport default DS.Model.extend({\n  title: DS.attr(),\n  body: DS.attr(),\n\n  author: DS.belongsTo('user')\n});\n```\n\nThe default serialization would create a JSON object like:\n\n```javascript\n{\n  \"title\": \"Rails is unagi\",\n  \"body\": \"Rails? Omakase? O_O\",\n  \"author\": 12\n}\n```\n\nBy default, attributes are passed through as-is, unless\nyou specified an attribute type (`DS.attr('date')`). If\nyou specify a transform, the JavaScript value will be\nserialized when inserted into the JSON hash.\n\nBy default, belongs-to relationships are converted into\nIDs when inserted into the JSON hash.\n\n## IDs\n\n`serialize` takes an options hash with a single option:\n`includeId`. If this option is `true`, `serialize` will,\nby default include the ID in the JSON object it builds.\n\nThe adapter passes in `includeId: true` when serializing\na record for `createRecord`, but not for `updateRecord`.\n\n## Customization\n\nYour server may expect a different JSON format than the\nbuilt-in serialization format.\n\nIn that case, you can implement `serialize` yourself and\nreturn a JSON hash of your choosing.\n\n```js {data-filename=app/serializers/post.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  serialize: function(snapshot, options) {\n    var json = {\n      POST_TTL: snapshot.attr('title'),\n      POST_BDY: snapshot.attr('body'),\n      POST_CMS: snapshot.hasMany('comments', { ids: true })\n    }\n\n    if (options.includeId) {\n      json.POST_ID_ = snapshot.id;\n    }\n\n    return json;\n  }\n});\n```\n\n## Customizing an App-Wide Serializer\n\nIf you want to define a serializer for your entire\napplication, you'll probably want to use `eachAttribute`\nand `eachRelationship` on the record.\n\n```js {data-filename=app/serializers/application.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  serialize: function(snapshot, options) {\n    var json = {};\n\n    snapshot.eachAttribute(function(name) {\n      json[serverAttributeName(name)] = snapshot.attr(name);\n    })\n\n    snapshot.eachRelationship(function(name, relationship) {\n      if (relationship.kind === 'hasMany') {\n        json[serverHasManyName(name)] = snapshot.hasMany(name, { ids: true });\n      }\n    });\n\n    if (options.includeId) {\n      json.ID_ = snapshot.id;\n    }\n\n    return json;\n  }\n});\n\nfunction serverAttributeName(attribute) {\n  return attribute.underscore().toUpperCase();\n}\n\nfunction serverHasManyName(name) {\n  return serverAttributeName(name.singularize()) + \"_IDS\";\n}\n```\n\nThis serializer will generate JSON that looks like this:\n\n```javascript\n{\n  \"TITLE\": \"Rails is omakase\",\n  \"BODY\": \"Yep. Omakase.\",\n  \"COMMENT_IDS\": [ 1, 2, 3 ]\n}\n```\n\n## Tweaking the Default JSON\n\nIf you just want to do some small tweaks on the default JSON,\nyou can call super first and make the tweaks on the returned\nJSON.\n\n```js {data-filename=app/serializers/post.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  serialize: function(snapshot, options) {\n    var json = this._super.apply(this, arguments);\n\n    json.subject = json.title;\n    delete json.title;\n\n    return json;\n  }\n});\n```",
          "itemtype": "method",
          "name": "serialize",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "json",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1001,
          "description": "You can use this method to customize how a serialized record is added to the complete\nJSON hash to be sent to the server. By default the JSON Serializer does not namespace\nthe payload and just sends the raw serialized JSON object.\nIf your server expects namespaced keys, you should consider using the RESTSerializer.\nOtherwise you can override this method to customize how the record is added to the hash.\n\nFor example, your server may expect underscored root objects.\n\n```js {data-filename=app/serializers/application.js}\nimport DS from 'ember-data';\n\nexport default DS.RESTSerializer.extend({\n  serializeIntoHash: function(data, type, snapshot, options) {\n    var root = Ember.String.decamelize(type.modelName);\n    data[root] = this.serialize(snapshot, options);\n  }\n});\n```",
          "itemtype": "method",
          "name": "serializeIntoHash",
          "params": [
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1031,
          "description": "`serializeAttribute` can be used to customize how `DS.attr`\nproperties are serialized\n\nFor example if you wanted to ensure all your attributes were always\nserialized as properties on an `attributes` object you could\nwrite:\n\n```js {data-filename=app/serializers/application.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  serializeAttribute: function(snapshot, json, key, attributes) {\n    json.attributes = json.attributes || {};\n    this._super(snapshot, json.attributes, key, attributes);\n  }\n});\n```",
          "itemtype": "method",
          "name": "serializeAttribute",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "attribute",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1078,
          "description": "`serializeBelongsTo` can be used to customize how `DS.belongsTo`\nproperties are serialized.\n\nExample\n\n```js {data-filename=app/serializers/post.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  serializeBelongsTo: function(snapshot, json, relationship) {\n    var key = relationship.key;\n\n    var belongsTo = snapshot.belongsTo(key);\n\n    key = this.keyForRelationship ? this.keyForRelationship(key, \"belongsTo\", \"serialize\") : key;\n\n    json[key] = Ember.isNone(belongsTo) ? belongsTo : belongsTo.record.toJSON();\n  }\n});\n```",
          "itemtype": "method",
          "name": "serializeBelongsTo",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1131,
          "description": "`serializeHasMany` can be used to customize how `DS.hasMany`\nproperties are serialized.\n\nExample\n\n```js {data-filename=app/serializers/post.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  serializeHasMany: function(snapshot, json, relationship) {\n    var key = relationship.key;\n    if (key === 'comments') {\n      return;\n    } else {\n      this._super.apply(this, arguments);\n    }\n  }\n});\n```",
          "itemtype": "method",
          "name": "serializeHasMany",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1174,
          "description": "You can use this method to customize how polymorphic objects are\nserialized. Objects are considered to be polymorphic if\n`{ polymorphic: true }` is pass as the second argument to the\n`DS.belongsTo` function.\n\nExample\n\n```js {data-filename=app/serializers/comment.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  serializePolymorphicType: function(snapshot, json, relationship) {\n    var key = relationship.key,\n        belongsTo = snapshot.belongsTo(key);\n    key = this.keyForAttribute ? this.keyForAttribute(key, \"serialize\") : key;\n\n    if (Ember.isNone(belongsTo)) {\n      json[key + \"_type\"] = null;\n    } else {\n      json[key + \"_type\"] = belongsTo.modelName;\n    }\n  }\n});\n```",
          "itemtype": "method",
          "name": "serializePolymorphicType",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1209,
          "description": "The `extract` method is used to deserialize payload data from the\nserver. By default the `JSONSerializer` does not push the records\ninto the store. However records that subclass `JSONSerializer`\nsuch as the `RESTSerializer` may push records into the store as\npart of the extract call.\n\nThis method delegates to a more specific extract method based on\nthe `requestType`.\n\nTo override this method with a custom one, make sure to call\n`return this._super(store, type, payload, id, requestType)` with your\npre-processed data.\n\nHere's an example of using `extract` manually:\n\n```javascript\nsocket.on('message', function(message) {\n  var data = message.data;\n  var typeClass = store.modelFor(message.modelName);\n  var serializer = store.serializerFor(typeClass.modelName);\n  var record = serializer.extract(store, typeClass, data, data.id, 'single');\n\n  store.push(message.modelName, record);\n});\n```",
          "itemtype": "method",
          "name": "extract",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1251,
          "description": "`extractFindAll` is a hook into the extract method used when a\ncall is made to `DS.Store#findAll`. By default this method is an\nalias for [extractArray](#method_extractArray).",
          "itemtype": "method",
          "name": "extractFindAll",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1267,
          "description": "`extractFindQuery` is a hook into the extract method used when a\ncall is made to `DS.Store#findQuery`. By default this method is an\nalias for [extractArray](#method_extractArray).",
          "itemtype": "method",
          "name": "extractFindQuery",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1283,
          "description": "`extractQueryRecord` is a hook into the extract method used when a\ncall is made to `DS.Store#queryRecord`. By default this method is an\nalias for [extractSingle](#method_extractSingle).",
          "itemtype": "method",
          "name": "extractQueryRecord",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "object A hash of deserialized object",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1299,
          "description": "`extractFindMany` is a hook into the extract method used when a\ncall is made to `DS.Store#findMany`. By default this method is\nalias for [extractArray](#method_extractArray).",
          "itemtype": "method",
          "name": "extractFindMany",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1315,
          "description": "`extractFindHasMany` is a hook into the extract method used when a\ncall is made to `DS.Store#findHasMany`. By default this method is\nalias for [extractArray](#method_extractArray).",
          "itemtype": "method",
          "name": "extractFindHasMany",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1332,
          "description": "`extractCreateRecord` is a hook into the extract method used when a\ncall is made to `DS.Model#save` and the record is new. By default\nthis method is alias for [extractSave](#method_extractSave).",
          "itemtype": "method",
          "name": "extractCreateRecord",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1348,
          "description": "`extractUpdateRecord` is a hook into the extract method used when\na call is made to `DS.Model#save` and the record has been updated.\nBy default this method is alias for [extractSave](#method_extractSave).",
          "itemtype": "method",
          "name": "extractUpdateRecord",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1364,
          "description": "`extractDeleteRecord` is a hook into the extract method used when\na call is made to `DS.Model#save` and the record has been deleted.\nBy default this method is alias for [extractSave](#method_extractSave).",
          "itemtype": "method",
          "name": "extractDeleteRecord",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1381,
          "description": "`extractFind` is a hook into the extract method used when\na call is made to `DS.Store#find`. By default this method is\nalias for [extractSingle](#method_extractSingle).",
          "itemtype": "method",
          "name": "extractFind",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1398,
          "description": "`extractFindBelongsTo` is a hook into the extract method used when\na call is made to `DS.Store#findBelongsTo`. By default this method is\nalias for [extractSingle](#method_extractSingle).",
          "itemtype": "method",
          "name": "extractFindBelongsTo",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1414,
          "description": "`extractSave` is a hook into the extract method used when a call\nis made to `DS.Model#save`. By default this method is alias\nfor [extractSingle](#method_extractSingle).",
          "itemtype": "method",
          "name": "extractSave",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1431,
          "description": "`extractSingle` is used to deserialize a single record returned\nfrom the adapter.\n\nExample\n\n```js {data-filename=app/serializers/post.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  extractSingle: function(store, typeClass, payload) {\n    payload.comments = payload._embedded.comment;\n    delete payload._embedded;\n\n    return this._super(store, typeClass, payload);\n  },\n});\n```",
          "itemtype": "method",
          "name": "extractSingle",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "json The deserialized payload",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1470,
          "description": "`extractArray` is used to deserialize an array of records\nreturned from the adapter.\n\nExample\n\n```js {data-filename=app/serializers/post.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  extractArray: function(store, typeClass, payload) {\n    return payload.map(function(json) {\n      return this.extractSingle(store, typeClass, json);\n    }, this);\n  }\n});\n```",
          "itemtype": "method",
          "name": "extractArray",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "arrayPayload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "array An array of deserialized objects",
            "type": "Array"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1512,
          "description": "`extractMeta` is used to deserialize any meta information in the\nadapter payload. By default Ember Data expects meta information to\nbe located on the `meta` property of the payload object.\n\nExample\n\n```js {data-filename=app/serializers/post.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  extractMeta: function(store, typeClass, payload) {\n    if (payload && payload._pagination) {\n      store.setMetadataFor(typeClass, payload._pagination);\n      delete payload._pagination;\n    }\n  }\n});\n```",
          "itemtype": "method",
          "name": "extractMeta",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1548,
          "description": "`extractErrors` is used to extract model errors when a call is made\nto `DS.Model#save` which fails with an `InvalidError`. By default\nEmber Data expects error information to be located on the `errors`\nproperty of the payload object.\n\nExample\n\n```js {data-filename=app/serializers/post.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  extractErrors: function(store, typeClass, payload, id) {\n    if (payload && typeof payload === 'object' && payload._problems) {\n      payload = payload._problems;\n      this.normalizeErrors(typeClass, payload);\n    }\n    return payload;\n  }\n});\n```",
          "itemtype": "method",
          "name": "extractErrors",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            }
          ],
          "return": {
            "description": "json The deserialized errors",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1586,
          "description": "`keyForAttribute` can be used to define rules for how to convert an\nattribute name in your model to a key in your JSON.\n\nExample\n\n```js {data-filename=app/serializers/application.js}\nimport DS from 'ember-data';\n\nexport default DS.RESTSerializer.extend({\n  keyForAttribute: function(attr, method) {\n    return Ember.String.underscore(attr).toUpperCase();\n  }\n});\n```",
          "itemtype": "method",
          "name": "keyForAttribute",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "method",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1611,
          "description": "`keyForRelationship` can be used to define a custom key when\nserializing and deserializing relationship properties. By default\n`JSONSerializer` does not provide an implementation of this method.\n\nExample\n\n ```js {data-filename=app/serializers/post.js}\n import DS from 'ember-data';\n\n export default DS.JSONSerializer.extend({\n   keyForRelationship: function(key, relationship, method) {\n     return 'rel_' + Ember.String.underscore(key);\n   }\n });\n ```",
          "itemtype": "method",
          "name": "keyForRelationship",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "String"
            },
            {
              "name": "method",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1638,
          "description": "`keyForLink` can be used to define a custom key when deserializing link\nproperties.",
          "itemtype": "method",
          "name": "keyForLink",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "kind",
              "description": "`belongsTo` or `hasMany`",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 1653,
          "itemtype": "method",
          "name": "transformFor",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "attributeType",
              "description": "",
              "type": "String"
            },
            {
              "name": "skipAssertion",
              "description": "",
              "type": "Boolean"
            }
          ],
          "return": {
            "description": "transform",
            "type": "DS.Transform"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/system/serializer.js",
          "line": 63,
          "description": "The `extract` method is used to deserialize the payload received from your\ndata source into the form that Ember Data expects.",
          "itemtype": "method",
          "name": "extract",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        },
        {
          "file": "packages/ember-data/lib/system/serializer.js",
          "line": 77,
          "description": "The `serialize` method is used when a record is saved in order to convert\nthe record into the form that your external data source expects.\n\n`serialize` takes an optional `options` hash with a single option:\n\n- `includeId`: If this is `true`, `serialize` should include the ID\n  in the serialized object it builds.",
          "itemtype": "method",
          "name": "serialize",
          "params": [
            {
              "name": "record",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object",
              "optional": true
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        },
        {
          "file": "packages/ember-data/lib/system/serializer.js",
          "line": 93,
          "description": "The `normalize` method is used to convert a payload received from your\nexternal data source into the normalized form `store.push()` expects. You\nshould override this method, munge the hash and return the normalized\npayload.",
          "itemtype": "method",
          "name": "normalize",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 77,
          "description": "The primaryKey is used when serializing and deserializing\ndata. Ember Data always uses the `id` property to store the id of\nthe record. The external source may not always follow this\nconvention. In these cases it is useful to override the\nprimaryKey property to match the primaryKey of your external\nstore.\n\nExample\n\n```js {data-filename=app/serializers/application.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  primaryKey: '_id'\n});\n```",
          "itemtype": "property",
          "name": "primaryKey",
          "type": "{String}",
          "default": "'id'",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/serializers/json-serializer.js",
          "line": 101,
          "description": "The `attrs` object can be used to declare a simple mapping between\nproperty names on `DS.Model` records and payload keys in the\nserialized JSON object representing the record. An object with the\nproperty `key` can also be used to designate the attribute's key on\nthe response payload.\n\nExample\n\n```js {data-filename=app/models/person.js}\nimport DS from 'ember-data';\n\nexport default DS.Model.extend({\n  firstName: DS.attr('string'),\n  lastName: DS.attr('string'),\n  occupation: DS.attr('string'),\n  admin: DS.attr('boolean')\n});\n```\n\n```js {data-filename=app/serializers/person.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  attrs: {\n    admin: 'is_admin',\n    occupation: { key: 'career' }\n  }\n});\n```\n\nYou can also remove attributes by setting the `serialize` key to\nfalse in your mapping object.\n\nExample\n\n```js {data-filename=app/serializers/person.js}\nimport DS from 'ember-data';\n\nexport default DS.JSONSerializer.extend({\n  attrs: {\n    admin: {serialize: false},\n    occupation: { key: 'career' }\n  }\n});\n```\n\nWhen serialized:\n\n```javascript\n{\n  \"firstName\": \"Harry\",\n  \"lastName\": \"Houdini\",\n  \"career\": \"magician\"\n}\n```\n\nNote that the `admin` is now not included in the payload.",
          "itemtype": "property",
          "name": "attrs",
          "type": "{Object}",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "packages/ember-data/lib/system/serializer.js",
          "line": 52,
          "description": "The `store` property is the application's `store` that contains all records.\nIt's injected as a service.\nIt can be used to push records from a non flat data structure server\nresponse.",
          "itemtype": "property",
          "name": "store",
          "type": "{DS.Store}",
          "access": "public",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": {
          "id": "ember-data-1.13.16-DS.Serializer",
          "type": "class"
        }
      },
      "descendants": {
        "data": [
          {
            "type": "class",
            "id": "ember-data-1.13.16-DS.JSONAPISerializer"
          },
          {
            "type": "class",
            "id": "ember-data-1.13.16-DS.RESTSerializer"
          }
        ]
      },
      "module": {
        "data": {
          "id": "ember-data-1.13.16-ember-data",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-1.13.16",
          "type": "project-version"
        }
      }
    }
  }
}