{
  "data": {
    "id": "ember-data-3.28.13-@ember-data/serializer/rest",
    "type": "module",
    "attributes": {
      "name": "@ember-data/serializer/rest",
      "submodules": {},
      "elements": {},
      "fors": {},
      "namespaces": {},
      "tag": "main",
      "file": "../serializer/addon/rest.js",
      "line": 18,
      "description": "Normally, applications will use the `RESTSerializer` by implementing\nthe `normalize` method.\n\nThis allows you to do whatever kind of munging you need and is\nespecially useful if your server is inconsistent and you need to\ndo munging differently for many different kinds of responses.\n\nSee the `normalize` documentation for more information.\n\n## Across the Board Normalization\n\nThere are also a number of hooks that you might find useful to define\nacross-the-board rules for your payload. These rules will be useful\nif your server is consistent, or if you're building an adapter for\nan infrastructure service, like Firebase, and want to encode service\nconventions.\n\nFor example, if all of your keys are underscored and all-caps, but\notherwise consistent with the names you use in your models, you\ncan implement across-the-board rules for how to convert an attribute\nname in your model to a key in your JSON.\n\n```js {data-filename=app/serializers/application.js}\nimport RESTSerializer from '@ember-data/serializer/rest';\nimport { underscore } from '@ember/string';\n\nexport default class ApplicationSerializer extends RESTSerializer {\n  keyForAttribute(attr, method) {\n    return underscore(attr).toUpperCase();\n  }\n}\n```\n\nYou can also implement `keyForRelationship`, which takes the name\nof the relationship as the first parameter, the kind of\nrelationship (`hasMany` or `belongsTo`) as the second parameter, and\nthe method (`serialize` or `deserialize`) as the third parameter.",
      "itemtype": "main",
      "parent": null,
      "publicclasses": [
        "EmbeddedRecordsMixin",
        "RESTSerializer"
      ],
      "privateclasses": [],
      "staticfunctions": {},
      "allstaticfunctions": {},
      "version": "3.28.13"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-data-3.28.13",
          "type": "project-version"
        }
      }
    }
  }
}