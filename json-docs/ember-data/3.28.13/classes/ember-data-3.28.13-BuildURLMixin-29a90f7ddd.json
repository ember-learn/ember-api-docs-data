{
  "data": {
    "id": "ember-data-3.28.13-BuildURLMixin",
    "type": "class",
    "attributes": {
      "name": "BuildURLMixin",
      "shortname": "BuildURLMixin",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "RESTAdapter"
      ],
      "module": "@ember-data/adapter",
      "namespace": "",
      "file": "../adapter/addon/-private/build-url-mixin.ts",
      "line": 15,
      "description": "<html><head></head><body><h2 id=\"using-buildurlmixin\">Using BuildURLMixin</h2>\n<p>To use URL building, include the mixin when extending an adapter, and call <code>buildURL</code> where needed.\nThe default behaviour is designed for RESTAdapter.</p>\n<h3 id=\"example\">Example</h3>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">Adapter</span>, { <span class=\"type\">BuildURLMixin</span> } from &apos;<span class=\"meta\">@ember</span>-data/adapter&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Adapter</span>.<span class=\"title\">extend</span>(<span class=\"params\"><span class=\"type\">BuildURLMixin</span></span>) </span>{\n  findRecord(store, <span class=\"class\"><span class=\"keyword\">type</span>, <span class=\"title\">id</span>, <span class=\"title\">snapshot</span>) </span>{\n    <span class=\"keyword\">var</span> url = <span class=\"keyword\">this</span>.buildURL(<span class=\"keyword\">type</span>.modelName, id, snapshot, &apos;findRecord&apos;);\n    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.ajax(url, &apos;<span class=\"type\">GET</span>&apos;);\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h3 id=\"attributes\">Attributes</h3>\n<p>The <code>host</code> and <code>namespace</code> attributes will be used if defined, and are optional.</p>\n</body></html>",
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 42,
          "description": "<html><head></head><body><p>Builds a URL for a given type and optional ID.</p>\n<p>By default, it pluralizes the type&apos;s name (for example, &apos;post&apos;\nbecomes &apos;posts&apos; and &apos;person&apos; becomes &apos;people&apos;). To override the\npluralization see <a href=\"BuildUrlMixin/methods/pathForType?anchor=pathForType\">pathForType</a>.</p>\n<p>If an ID is specified, it adds the ID to the path generated\nfor the type, separated by a <code>/</code>.</p>\n<p>When called by <code>RESTAdapter.findMany()</code> the <code>id</code> and <code>snapshot</code> parameters\nwill be arrays of ids and snapshots.</p>\n</body></html>",
          "itemtype": "method",
          "name": "buildURL",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "id",
              "description": "single id or array of ids or query",
              "type": "(String|Array|Object)"
            },
            {
              "name": "snapshot",
              "description": "single snapshot or array of snapshots",
              "type": "(Snapshot|SnapshotRecordArray)"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            },
            {
              "name": "query",
              "description": "object of query parameters to send for query requests.",
              "type": "Object"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 97,
          "itemtype": "method",
          "name": "_buildURL",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "id",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 132,
          "description": "<html><head></head><body><p>Builds a URL for a <code>store.findRecord(type, id)</code> call.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/user.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">JSONAPIAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/json-api&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">JSONAPIAdapter</span> </span>{\n  urlForFindRecord(id, modelName, snapshot) {\n    let baseUrl = <span class=\"keyword\">this</span>.buildURL(modelName, id, snapshot);\n    <span class=\"keyword\">return</span> `${baseUrl}/users/${snapshot.adapterOptions.user_id}/playlists/${id}`;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForFindRecord",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "id",
              "description": "",
              "type": "String"
            },
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "Snapshot"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 160,
          "description": "<html><head></head><body><p>Builds a URL for a <code>store.findAll(type)</code> call.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/comment.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">JSONAPIAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/json-api&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">JSONAPIAdapter</span> </span>{\n  urlForFindAll(modelName, snapshot) {\n    let baseUrl = <span class=\"keyword\">this</span>.buildURL(modelName);\n    <span class=\"keyword\">return</span> `${baseUrl}/data/comments.json`;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForFindAll",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "SnapshotRecordArray"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 186,
          "description": "<html><head></head><body><p>Builds a URL for a <code>store.query(type, query)</code> call.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">RESTAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/rest&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">RESTAdapter</span> </span>{\n  host = &apos;https:<span class=\"comment\">//api.github.com&apos;;</span>\n  urlForQuery (query, modelName) {\n    switch(modelName) {\n      <span class=\"keyword\">case</span> &apos;repo&apos;:\n        <span class=\"keyword\">return</span> `https:<span class=\"comment\">//api.github.com/orgs/${query.orgId}/repos`;</span>\n      <span class=\"keyword\">default</span>:\n        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.urlForQuery(...arguments);\n    }\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForQuery",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "query",
              "description": "",
              "type": "Object"
            },
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 217,
          "description": "<html><head></head><body><p>Builds a URL for a <code>store.queryRecord(type, query)</code> call.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">RESTAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/rest&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">RESTAdapter</span> </span>{\n  urlForQueryRecord({ slug }, modelName) {\n    let baseUrl = <span class=\"keyword\">this</span>.buildURL();\n    <span class=\"keyword\">return</span> `${baseUrl}/${encodeURIComponent(slug)}`;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForQueryRecord",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "query",
              "description": "",
              "type": "Object"
            },
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 243,
          "description": "<html><head></head><body><p>Builds a URL for coalescing multiple <code>store.findRecord(type, id)</code>\nrecords into 1 request when the adapter&apos;s <code>coalesceFindRequests</code>\nproperty is <code>true</code>.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">RESTAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/rest&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">RESTAdapter</span> </span>{\n  urlForFindMany(ids, modelName) {\n    let baseUrl = <span class=\"keyword\">this</span>.buildURL();\n    <span class=\"keyword\">return</span> `${baseUrl}/coalesce`;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForFindMany",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "ids",
              "description": "",
              "type": "Array"
            },
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "snapshots",
              "description": "",
              "type": "Array"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 272,
          "description": "<html><head></head><body><p>Builds a URL for fetching an async <code>hasMany</code> relationship when a URL\nis not provided by the server.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">JSONAPIAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/json-api&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">JSONAPIAdapter</span> </span>{\n  urlForFindHasMany(id, modelName, snapshot) {\n    let baseUrl = <span class=\"keyword\">this</span>.buildURL(modelName, id);\n    <span class=\"keyword\">return</span> `${baseUrl}/relationships`;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForFindHasMany",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "id",
              "description": "",
              "type": "String"
            },
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "Snapshot"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 300,
          "description": "<html><head></head><body><p>Builds a URL for fetching an async <code>belongsTo</code> relationship when a url\nis not provided by the server.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">JSONAPIAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/json-api&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">JSONAPIAdapter</span> </span>{\n  urlForFindBelongsTo(id, modelName, snapshot) {\n    let baseUrl = <span class=\"keyword\">this</span>.buildURL(modelName, id);\n    <span class=\"keyword\">return</span> `${baseUrl}/relationships`;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForFindBelongsTo",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "id",
              "description": "",
              "type": "String"
            },
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "Snapshot"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 328,
          "description": "<html><head></head><body><p>Builds a URL for a <code>record.save()</code> call when the record was created\nlocally using <code>store.createRecord()</code>.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">RESTAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/rest&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">RESTAdapter</span> </span>{\n  urlForCreateRecord(modelName, snapshot) {\n    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.urlForCreateRecord(...arguments) + &apos;/<span class=\"keyword\">new</span>&apos;;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForCreateRecord",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "Snapshot"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 354,
          "description": "<html><head></head><body><p>Builds a URL for a <code>record.save()</code> call when the record has been updated locally.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">RESTAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/rest&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">RESTAdapter</span> </span>{\n  urlForUpdateRecord(id, modelName, snapshot) {\n    <span class=\"keyword\">return</span> `/${id}/feed?access_token=${snapshot.adapterOptions.token}`;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForUpdateRecord",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "id",
              "description": "",
              "type": "String"
            },
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "Snapshot"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 380,
          "description": "<html><head></head><body><p>Builds a URL for a <code>record.save()</code> call when the record has been deleted locally.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">RESTAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/rest&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">RESTAdapter</span> </span>{\n  urlForDeleteRecord(id, modelName, snapshot) {\n    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.urlForDeleteRecord(...arguments) + &apos;/destroy&apos;;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "urlForDeleteRecord",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "id",
              "description": "",
              "type": "String"
            },
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "Snapshot"
            }
          ],
          "return": {
            "description": "url",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 406,
          "itemtype": "method",
          "name": "urlPrefix",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "path",
              "description": "",
              "type": "String"
            },
            {
              "name": "parentURL",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "urlPrefix",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        },
        {
          "file": "../adapter/addon/-private/build-url-mixin.ts",
          "line": 447,
          "description": "<html><head></head><body><p>Determines the pathname for a given type.</p>\n<p>By default, it pluralizes the type&apos;s name (for example,\n&apos;post&apos; becomes &apos;posts&apos; and &apos;person&apos; becomes &apos;people&apos;).</p>\n<h3 id=\"pathname-customization\">Pathname customization</h3>\n<p>For example, if you have an object <code>LineItem</code> with an\nendpoint of <code>/line_items/</code>.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">RESTAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/rest&apos;;\n<span class=\"keyword\">import</span> { decamelize } from &apos;<span class=\"meta\">@ember</span>/string&apos;;\n<span class=\"keyword\">import</span> { pluralize } from &apos;ember-inflector&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">RESTAdapter</span> </span>{\n  pathForType(modelName) {\n    <span class=\"keyword\">var</span> decamelized = decamelize(modelName);\n    <span class=\"keyword\">return</span> pluralize(decamelized);\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "pathForType",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "modelName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "path",
            "type": "String"
          },
          "class": "BuildURLMixin",
          "module": "@ember-data/adapter"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-3.28.13-@ember-data/adapter",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-3.28.13",
          "type": "project-version"
        }
      }
    }
  }
}