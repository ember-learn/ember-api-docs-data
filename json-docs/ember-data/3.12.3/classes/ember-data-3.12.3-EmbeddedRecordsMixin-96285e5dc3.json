{
  "data": {
    "id": "ember-data-3.12.3-EmbeddedRecordsMixin",
    "type": "class",
    "attributes": {
      "name": "EmbeddedRecordsMixin",
      "shortname": "EmbeddedRecordsMixin",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/serializer",
      "namespace": "",
      "file": "../serializer/addon/-private/embedded-records-mixin.js",
      "line": 12,
      "methods": [
        {
          "file": "../serializer/addon/-private/embedded-records-mixin.js",
          "line": 104,
          "description": "<html><head></head><body><p>Normalize the record and recursively normalize/extract all the embedded records\nwhile pushing them into the store as they are encountered</p>\n<p>A payload with an attr configured for embedded records needs to be extracted:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;post&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>\n    <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n    <span class=\"attr\">&quot;comments&quot;</span>: [{\n      <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>,\n      <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;Rails is unagi&quot;</span>\n    }, {\n      <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,\n      <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;Omakase O_o&quot;</span>\n    }]\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "normalize",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "hash",
              "description": "to be normalized",
              "type": "Object"
            },
            {
              "name": "prop",
              "description": "the hash has been referenced by",
              "type": "String"
            }
          ],
          "return": {
            "description": "the normalized hash",
            "type": "Object"
          },
          "class": "EmbeddedRecordsMixin",
          "module": "@ember-data/serializer"
        },
        {
          "file": "../serializer/addon/-private/embedded-records-mixin.js",
          "line": 147,
          "description": "<html><head></head><body><p>Serialize <code>belongsTo</code> relationship when it is configured as an embedded object.</p>\n<p>This example of an author model belongs to a post model:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre>import Model, { attr, belongsTo } from &apos;@ember-data/model&apos;;\n\nPost = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  title:    attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  body:     attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  author:   belongs<span class=\"constructor\">To(&apos;<span class=\"params\">author</span>&apos;)</span>\n});\n\nAuthor = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  name:     attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  post:     belongs<span class=\"constructor\">To(&apos;<span class=\"params\">post</span>&apos;)</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Use a custom (type) serializer for the post model to configure embedded author</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> RESTSerializer, { EmbeddedRecordsMixin } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/serializer/rest&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> RESTSerializer.extend(EmbeddedRecordsMixin, {\n  attrs: {\n    author: { embedded: <span class=\"string\">&apos;always&apos;</span> }\n  }\n})</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>A payload with an attribute configured for embedded records can serialize\nthe records together under the root attribute&apos;s payload:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;post&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>\n    <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n    <span class=\"attr\">&quot;author&quot;</span>: {\n      <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;2&quot;</span>\n      <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;dhh&quot;</span>\n    }\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeBelongsTo",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "EmbeddedRecordsMixin",
          "module": "@ember-data/serializer"
        },
        {
          "file": "../serializer/addon/-private/embedded-records-mixin.js",
          "line": 248,
          "description": "<html><head></head><body><p>Serializes <code>hasMany</code> relationships when it is configured as embedded objects.</p>\n<p>This example of a post model has many comments:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre>import Model, { attr, belongsTo, hasMany } from &apos;@ember-data/model&apos;;\n\nPost = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  title:    attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  body:     attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  comments: has<span class=\"constructor\">Many(&apos;<span class=\"params\">comment</span>&apos;)</span>\n});\n\nComment = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  body:     attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  post:     belongs<span class=\"constructor\">To(&apos;<span class=\"params\">post</span>&apos;)</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Use a custom (type) serializer for the post model to configure embedded comments</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> RESTSerializer, { EmbeddedRecordsMixin } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/serializer/rest&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> RESTSerializer.extend(EmbeddedRecordsMixin, {\n  attrs: {\n    comments: { embedded: <span class=\"string\">&apos;always&apos;</span> }\n  }\n})</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>A payload with an attribute configured for embedded records can serialize\nthe records together under the root attribute&apos;s payload:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;post&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>\n    <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n    <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;I want this for my ORM, I want that for my template language...&quot;</span>\n    <span class=\"string\">&quot;comments&quot;</span>: [{\n      <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>,\n      <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;Rails is unagi&quot;</span>\n    }, {\n      <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;2&quot;</span>,\n      <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;Omakase O_o&quot;</span>\n    }]\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The attrs options object can use more specific instruction for extracting and\nserializing. When serializing, an option to embed <code>ids</code>, <code>ids-and-types</code> or <code>records</code> can be set.\nWhen extracting the only option is <code>records</code>.</p>\n<p>So <code>{ embedded: &apos;always&apos; }</code> is shorthand for:\n<code>{ serialize: &apos;records&apos;, deserialize: &apos;records&apos; }</code></p>\n<p>To embed the <code>ids</code> for a related object (using a hasMany relationship):</p>\n<div class=\"highlight app/serializers/post.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> RESTSerializer, { EmbeddedRecordsMixin } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/serializer/rest&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> RESTSerializer.extend(EmbeddedRecordsMixin, {\n  attrs: {\n    comments: { serialize: <span class=\"string\">&apos;ids&apos;</span>, deserialize: <span class=\"string\">&apos;records&apos;</span> }\n  }\n})</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;post&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>\n    <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n    <span class=\"attr\">&quot;body&quot;</span>: <span class=\"string\">&quot;I want this for my ORM, I want that for my template language...&quot;</span>\n    <span class=\"string\">&quot;comments&quot;</span>: [<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>]\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>To embed the relationship as a collection of objects with <code>id</code> and <code>type</code> keys, set\n<code>ids-and-types</code> for the related object.</p>\n<p>This is particularly useful for polymorphic relationships where records don&apos;t share\nthe same table and the <code>id</code> is not enough information.</p>\n<p>For example having a user that has many pets:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td>\n              <td class=\"code\"><pre>User = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  name:    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  pets: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>has<span class=\"constructor\">Many(&apos;<span class=\"params\">pet</span>&apos;, { <span class=\"params\">polymorphic</span>: <span class=\"params\">true</span> })</span>\n});\n\nPet = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  name: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n});\n\nCat = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Pet</span>.</span></span>extend({\n  <span class=\"comment\">// ...</span>\n});\n\nParrot = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Pet</span>.</span></span>extend({\n  <span class=\"comment\">// ...</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight app/serializers/user.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/user.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> RESTSerializer, { EmbeddedRecordsMixin } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/serializer/rest&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> RESTSerializer.extend(EmbeddedRecordsMixin, {\n  attrs: {\n    pets: { serialize: <span class=\"string\">&apos;ids-and-types&apos;</span>, deserialize: <span class=\"string\">&apos;records&apos;</span> }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;user&quot;</span>: {\n    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>\n    <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Bertin Osborne&quot;</span>,\n    <span class=\"attr\">&quot;pets&quot;</span>: [\n      { <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>, <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;Cat&quot;</span> },\n      { <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>, <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;Parrot&quot;</span>}\n    ]\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeHasMany",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "EmbeddedRecordsMixin",
          "module": "@ember-data/serializer"
        },
        {
          "file": "../serializer/addon/-private/embedded-records-mixin.js",
          "line": 462,
          "description": "<html><head></head><body><p>When serializing an embedded record, modify the property (in the <code>JSON</code> payload)\nthat refers to the parent record (foreign key for the relationship).</p>\n<p>Serializing a <code>belongsTo</code> relationship removes the property that refers to the\nparent record</p>\n<p>Serializing a <code>hasMany</code> relationship does not remove the property that refers to\nthe parent record.</p>\n</body></html>",
          "itemtype": "method",
          "name": "removeEmbeddedForeignKey",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "embeddedSnapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "EmbeddedRecordsMixin",
          "module": "@ember-data/serializer"
        },
        {
          "file": "../serializer/addon/-private/embedded-records-mixin.js",
          "line": 539,
          "itemtype": "method",
          "name": "_extractEmbeddedRecords",
          "access": "private",
          "tagname": "",
          "class": "EmbeddedRecordsMixin",
          "module": "@ember-data/serializer"
        },
        {
          "file": "../serializer/addon/-private/embedded-records-mixin.js",
          "line": 557,
          "itemtype": "method",
          "name": "_extractEmbeddedHasMany",
          "access": "private",
          "tagname": "",
          "class": "EmbeddedRecordsMixin",
          "module": "@ember-data/serializer"
        },
        {
          "file": "../serializer/addon/-private/embedded-records-mixin.js",
          "line": 586,
          "itemtype": "method",
          "name": "_extractEmbeddedBelongsTo",
          "access": "private",
          "tagname": "",
          "class": "EmbeddedRecordsMixin",
          "module": "@ember-data/serializer"
        },
        {
          "file": "../serializer/addon/-private/embedded-records-mixin.js",
          "line": 609,
          "itemtype": "method",
          "name": "_normalizeEmbeddedRelationship",
          "access": "private",
          "tagname": "",
          "class": "EmbeddedRecordsMixin",
          "module": "@ember-data/serializer"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-3.12.3-@ember-data/serializer",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-3.12.3",
          "type": "project-version"
        }
      }
    }
  }
}