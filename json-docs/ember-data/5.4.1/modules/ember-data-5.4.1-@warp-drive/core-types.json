{
  "data": {
    "id": "ember-data-5.4.1-@warp-drive/core-types",
    "type": "module",
    "attributes": {
      "name": "@warp-drive/core-types",
      "submodules": {},
      "elements": {},
      "fors": {
        "@warp-drive/core-types": 1
      },
      "namespaces": {},
      "tag": "main",
      "file": "../core-types/src/record.ts",
      "line": 6,
      "description": "This package provides core types, type-utilities, symbols\nand constants used across the WarpDrive ecosystem.",
      "itemtype": "main",
      "parent": null,
      "publicclasses": [
        "<Type> GenericField",
        "<Type> LegacyAliasField",
        "<Type> PolarisAliasField",
        "<Type> ObjectAliasField",
        "<Type> IdentityField",
        "<Type> HashField",
        "<Type> LocalField",
        "<Type> ObjectField",
        "<Type> SchemaObjectField",
        "<Type> ArrayField",
        "<Type> SchemaArrayField",
        "<Type> DerivedField",
        "<Type> ResourceField",
        "<Type> CollectionField",
        "<Type> LegacyAttributeField",
        "<Type> LegacyBelongsToField",
        "<Type> LinksModeBelongsToField",
        "<Type> LegacyHasManyField",
        "<Type> LinksModeHasManyField",
        "<Type> LegacyModeFieldSchema",
        "<Type> PolarisModeFieldSchema",
        "<Type> FieldSchema",
        "<Type> ObjectFieldSchema",
        "<Type> PolarisResourceSchema",
        "<Type> LegacyResourceSchema",
        "<Type> ObjectSchema"
      ],
      "privateclasses": [],
      "staticfunctions": {
        "@warp-drive/core-types": [
          {
            "file": "../packages/core-types/src/schema/fields.ts",
            "line": 1995,
            "description": "A type utility to narrow a schema to LegacyResourceSchema",
            "itemtype": "method",
            "name": "isLegacyResourceSchema",
            "static": 1,
            "params": [
              {
                "name": "schema",
                "description": ""
              }
            ],
            "return": {
              "description": "",
              "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "@warp-drive/core-types",
            "module": "@warp-drive/core-types"
          },
          {
            "file": "../packages/core-types/src/schema/fields.ts",
            "line": 1981,
            "description": "A type utility to narrow a schema to a ResourceSchema",
            "itemtype": "method",
            "name": "isResourceSchema",
            "static": 1,
            "params": [
              {
                "name": "schema",
                "description": ""
              }
            ],
            "return": {
              "description": "",
              "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "@warp-drive/core-types",
            "module": "@warp-drive/core-types"
          },
          {
            "file": "../packages/core-types/src/schema/fields.ts",
            "line": 1964,
            "description": "A no-op type utility that enables type-checking object schema\ndefinitions.\n\nWill return the passed in schema.",
            "itemtype": "method",
            "name": "objectSchema",
            "static": 1,
            "params": [
              {
                "name": "schema",
                "description": "",
                "type": "ObjectSchema"
              }
            ],
            "return": {
              "description": "the passed in schema",
              "type": "ObjectSchema"
            },
            "access": "public",
            "tagname": "",
            "class": "@warp-drive/core-types",
            "module": "@warp-drive/core-types"
          },
          {
            "file": "../packages/core-types/src/schema/fields.ts",
            "line": 1943,
            "description": "A no-op type utility that enables type-checking resource schema\ndefinitions.\n\nWill return the passed in schema.\n\nThis will not validate relationship inverses or related types,\nas doing so would require a full schema graph to be passed in\nand no cycles in the graph to be present.",
            "itemtype": "method",
            "name": "resourceSchema",
            "static": 1,
            "params": [
              {
                "name": "schema",
                "description": "",
                "type": "ResourceSchema"
              }
            ],
            "return": {
              "description": "the passed in schema",
              "type": "ResourceSchema"
            },
            "access": "public",
            "tagname": "",
            "class": "@warp-drive/core-types",
            "module": "@warp-drive/core-types"
          }
        ]
      },
      "allstaticfunctions": {
        "@warp-drive/core-types": [
          {
            "file": "../packages/core-types/src/schema/fields.ts",
            "line": 1995,
            "description": "A type utility to narrow a schema to LegacyResourceSchema",
            "itemtype": "method",
            "name": "isLegacyResourceSchema",
            "static": 1,
            "params": [
              {
                "name": "schema",
                "description": ""
              }
            ],
            "return": {
              "description": "",
              "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "@warp-drive/core-types",
            "module": "@warp-drive/core-types"
          },
          {
            "file": "../packages/core-types/src/schema/fields.ts",
            "line": 1981,
            "description": "A type utility to narrow a schema to a ResourceSchema",
            "itemtype": "method",
            "name": "isResourceSchema",
            "static": 1,
            "params": [
              {
                "name": "schema",
                "description": ""
              }
            ],
            "return": {
              "description": "",
              "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "@warp-drive/core-types",
            "module": "@warp-drive/core-types"
          },
          {
            "file": "../packages/core-types/src/schema/fields.ts",
            "line": 1964,
            "description": "A no-op type utility that enables type-checking object schema\ndefinitions.\n\nWill return the passed in schema.",
            "itemtype": "method",
            "name": "objectSchema",
            "static": 1,
            "params": [
              {
                "name": "schema",
                "description": "",
                "type": "ObjectSchema"
              }
            ],
            "return": {
              "description": "the passed in schema",
              "type": "ObjectSchema"
            },
            "access": "public",
            "tagname": "",
            "class": "@warp-drive/core-types",
            "module": "@warp-drive/core-types"
          },
          {
            "file": "../packages/core-types/src/schema/fields.ts",
            "line": 1943,
            "description": "A no-op type utility that enables type-checking resource schema\ndefinitions.\n\nWill return the passed in schema.\n\nThis will not validate relationship inverses or related types,\nas doing so would require a full schema graph to be passed in\nand no cycles in the graph to be present.",
            "itemtype": "method",
            "name": "resourceSchema",
            "static": 1,
            "params": [
              {
                "name": "schema",
                "description": "",
                "type": "ResourceSchema"
              }
            ],
            "return": {
              "description": "the passed in schema",
              "type": "ResourceSchema"
            },
            "access": "public",
            "tagname": "",
            "class": "@warp-drive/core-types",
            "module": "@warp-drive/core-types"
          }
        ]
      },
      "version": "5.4.1"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.4.1",
          "type": "project-version"
        }
      }
    }
  }
}