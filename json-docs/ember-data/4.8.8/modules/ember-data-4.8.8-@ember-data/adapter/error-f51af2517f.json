{
  "data": {
    "id": "ember-data-4.8.8-@ember-data/adapter/error",
    "type": "module",
    "attributes": {
      "name": "@ember-data/adapter/error",
      "submodules": {},
      "elements": {},
      "fors": {
        "@ember-data/adapter/error": 1
      },
      "namespaces": {},
      "tag": "main",
      "file": "../packages/adapter/addon/error.js",
      "line": 337,
      "description": "<html><head></head><body><p>A <code>AdapterError</code> is used by an adapter to signal that an error occurred\nduring a request to an external API. It indicates a generic error, and\nsubclasses are used to indicate specific error states. The following\nsubclasses are provided:</p>\n<ul>\n<li><code>InvalidError</code></li>\n<li><code>TimeoutError</code></li>\n<li><code>AbortError</code></li>\n<li><code>UnauthorizedError</code></li>\n<li><code>ForbiddenError</code></li>\n<li><code>NotFoundError</code></li>\n<li><code>ConflictError</code></li>\n<li><code>ServerError</code></li>\n</ul>\n<p>To create a custom error to signal a specific error state in communicating\nwith an external API, extend the <code>AdapterError</code>. For example, if the\nexternal API exclusively used HTTP <code>503 Service Unavailable</code> to indicate\nit was closed for maintenance:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">error.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> AdapterError <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/adapter/error&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> AdapterError.extend({ message: <span class=\"string\">&quot;Down for maintenance.&quot;</span> });</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>This error would then be returned by an adapter&apos;s <code>handleResponse</code> method:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">JSONAPIAdapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter/json-api&apos;;\n<span class=\"keyword\">import</span> <span class=\"type\">MaintenanceError</span> from &apos;./maintenance-error&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">JSONAPIAdapter</span> </span>{\n  handleResponse(status) {\n    <span class=\"keyword\">if</span> (<span class=\"number\">503</span> === status) {\n      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"type\">MaintenanceError</span>();\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.handleResponse(...arguments);\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>And can then be detected in an application and used to send the user to an\n<code>under-maintenance</code> route:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/routes/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">Route</span> from &apos;<span class=\"meta\">@ember</span>/routing/route&apos;;\n<span class=\"keyword\">import</span> <span class=\"type\">MaintenanceError</span> from &apos;../adapters/maintenance-error&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationRoute</span> <span class=\"keyword\">extends</span> <span class=\"title\">Route</span> </span>{\n  actions: {\n    error(error, transition) {\n      <span class=\"keyword\">if</span> (error instanceof <span class=\"type\">MaintenanceError</span>) {\n        <span class=\"keyword\">this</span>.transitionTo(&apos;under-maintenance&apos;);\n        <span class=\"keyword\">return</span>;\n      }\n\n      <span class=\"comment\">// ...other error handling logic</span>\n    }\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "itemtype": "main",
      "parent": null,
      "publicclasses": [
        "AdapterError",
        "InvalidError",
        "TimeoutError",
        "AbortError",
        "UnauthorizedError",
        "ForbiddenError",
        "NotFoundError",
        "ConflictError",
        "ServerError"
      ],
      "privateclasses": [],
      "staticfunctions": {
        "@ember-data/adapter/error": [
          {
            "file": "../packages/adapter/addon/error.js",
            "line": 434,
            "description": "Convert an array of errors in JSON-API format into an object.\n\n```javascript\nimport { errorsArrayToHash } from '@ember-data/adapter/error';\n\nlet errorsArray = [\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be present',\n    source: { pointer: '/data/attributes/name' }\n  },\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be present',\n    source: { pointer: '/data/attributes/age' }\n  },\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be a number',\n    source: { pointer: '/data/attributes/age' }\n  }\n];\n\nlet errors = errorsArrayToHash(errorsArray);\n// {\n//   \"name\": [\"Must be present\"],\n//   \"age\":  [\"Must be present\", \"must be a number\"]\n// }\n```",
            "itemtype": "method",
            "name": "errorsArrayToHash",
            "static": 1,
            "deprecated": true,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "errors",
                "description": "array of errors in JSON-API format",
                "type": "Array"
              }
            ],
            "return": {
              "description": "",
              "type": "Object"
            },
            "class": "@ember-data/adapter/error",
            "module": "@ember-data/adapter/error"
          },
          {
            "file": "../packages/adapter/addon/error.js",
            "line": 356,
            "description": "Convert an hash of errors into an array with errors in JSON-API format.\n ```javascript\n import { errorsHashToArray } from '@ember-data/adapter/error';\n\n let errors = {\n  base: 'Invalid attributes on saving this record',\n  name: 'Must be present',\n  age: ['Must be present', 'Must be a number']\n};\n let errorsArray = errorsHashToArray(errors);\n// [\n//   {\n//     title: \"Invalid Document\",\n//     detail: \"Invalid attributes on saving this record\",\n//     source: { pointer: \"/data\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be present\",\n//     source: { pointer: \"/data/attributes/name\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be present\",\n//     source: { pointer: \"/data/attributes/age\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be a number\",\n//     source: { pointer: \"/data/attributes/age\" }\n//   }\n// ]\n```",
            "itemtype": "method",
            "name": "errorsHashToArray",
            "static": 1,
            "deprecated": true,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "errors",
                "description": "hash with errors as properties",
                "type": "Object"
              }
            ],
            "return": {
              "description": "array of errors in JSON-API format",
              "type": "Array"
            },
            "class": "@ember-data/adapter/error",
            "module": "@ember-data/adapter/error"
          }
        ]
      },
      "allstaticfunctions": {
        "@ember-data/adapter/error": [
          {
            "file": "../packages/adapter/addon/error.js",
            "line": 434,
            "description": "Convert an array of errors in JSON-API format into an object.\n\n```javascript\nimport { errorsArrayToHash } from '@ember-data/adapter/error';\n\nlet errorsArray = [\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be present',\n    source: { pointer: '/data/attributes/name' }\n  },\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be present',\n    source: { pointer: '/data/attributes/age' }\n  },\n  {\n    title: 'Invalid Attribute',\n    detail: 'Must be a number',\n    source: { pointer: '/data/attributes/age' }\n  }\n];\n\nlet errors = errorsArrayToHash(errorsArray);\n// {\n//   \"name\": [\"Must be present\"],\n//   \"age\":  [\"Must be present\", \"must be a number\"]\n// }\n```",
            "itemtype": "method",
            "name": "errorsArrayToHash",
            "static": 1,
            "deprecated": true,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "errors",
                "description": "array of errors in JSON-API format",
                "type": "Array"
              }
            ],
            "return": {
              "description": "",
              "type": "Object"
            },
            "class": "@ember-data/adapter/error",
            "module": "@ember-data/adapter/error"
          },
          {
            "file": "../packages/adapter/addon/error.js",
            "line": 356,
            "description": "Convert an hash of errors into an array with errors in JSON-API format.\n ```javascript\n import { errorsHashToArray } from '@ember-data/adapter/error';\n\n let errors = {\n  base: 'Invalid attributes on saving this record',\n  name: 'Must be present',\n  age: ['Must be present', 'Must be a number']\n};\n let errorsArray = errorsHashToArray(errors);\n// [\n//   {\n//     title: \"Invalid Document\",\n//     detail: \"Invalid attributes on saving this record\",\n//     source: { pointer: \"/data\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be present\",\n//     source: { pointer: \"/data/attributes/name\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be present\",\n//     source: { pointer: \"/data/attributes/age\" }\n//   },\n//   {\n//     title: \"Invalid Attribute\",\n//     detail: \"Must be a number\",\n//     source: { pointer: \"/data/attributes/age\" }\n//   }\n// ]\n```",
            "itemtype": "method",
            "name": "errorsHashToArray",
            "static": 1,
            "deprecated": true,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "errors",
                "description": "hash with errors as properties",
                "type": "Object"
              }
            ],
            "return": {
              "description": "array of errors in JSON-API format",
              "type": "Array"
            },
            "class": "@ember-data/adapter/error",
            "module": "@ember-data/adapter/error"
          }
        ]
      },
      "version": "4.8.8"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-data-4.8.8",
          "type": "project-version"
        }
      }
    }
  }
}