{
  "data": {
    "id": "ember-data-2.1.0-ContainerInstanceCache",
    "type": "class",
    "attributes": {
      "name": "ContainerInstanceCache",
      "shortname": "ContainerInstanceCache",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember-data",
      "namespace": "",
      "file": "packages/ember-data/lib/system/store/container-instance-cache.js",
      "line": 4,
      "description": "<html><head></head><body><p>The <code>ContainerInstanceCache</code> serves as a lazy cache for looking up\ninstances of serializers and adapters. It has some additional logic for\nfinding the &apos;fallback&apos; adapter or serializer.</p>\n<p>The &apos;fallback&apos; adapter or serializer is an adapter or serializer that is looked up\nwhen the preferred lookup fails. For example, say you try to look up <code>adapter:post</code>,\nbut there is no entry (app/adapters/post.js in EmberCLI) for <code>adapter:post</code> in the registry.</p>\n<p>The <code>fallbacks</code> array passed will then be used; the first entry in the fallbacks array\nthat exists in the container will then be cached for <code>adapter:post</code>. So, the next time you\nlook up <code>adapter:post</code>, you&apos;ll get the <code>adapter:application</code> instance (or whatever the fallback\nwas if <code>adapter:application</code> doesn&apos;t exist).</p>\n</body></html>",
      "access": "private",
      "tagname": "",
      "methods": [],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-2.1.0-ember-data",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-2.1.0",
          "type": "project-version"
        }
      }
    }
  }
}