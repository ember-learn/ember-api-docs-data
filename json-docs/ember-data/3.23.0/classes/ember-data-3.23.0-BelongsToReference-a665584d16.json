{
  "data": {
    "id": "ember-data-3.23.0-BelongsToReference",
    "type": "class",
    "attributes": {
      "name": "BelongsToReference",
      "shortname": "BelongsToReference",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/store",
      "namespace": "",
      "file": "../store/addon/-private/system/references/belongs-to.js",
      "line": 16,
      "description": "<html><head></head><body><p>A <code>BelongsToReference</code> is a low-level API that allows users and\naddon authors to perform meta-operations on a belongs-to\nrelationship.</p>\n</body></html>",
      "extends": "Reference",
      "methods": [
        {
          "file": "../store/addon/-private/system/references/belongs-to.js",
          "line": 36,
          "description": "<html><head></head><body><p>The <code>id</code> of the record that this reference refers to. Together, the\n<code>type()</code> and <code>id()</code> methods form a composite key for the identity\nmap. This can be used to access the id of an async relationship\nwithout triggering a fetch that would normally happen if you\nattempted to use <code>record.get(&apos;relationship.id&apos;)</code>.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td>\n              <td class=\"code\"><pre><span class=\"comment\">// models/blog.js</span>\n<span class=\"keyword\">import</span> <span class=\"type\">Model</span>, { belongsTo } from &apos;<span class=\"meta\">@ember</span>-data/model&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogModel</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span> </span>{\n <span class=\"meta\">@belongsTo</span>({ async: <span class=\"literal\">true</span> }) user;\n}\n\nlet blog = store.push({\n   data: {\n     <span class=\"class\"><span class=\"keyword\">type</span></span>: &apos;blog&apos;,\n     id: <span class=\"number\">1</span>,\n     relationships: {\n       user: {\n         data: { <span class=\"class\"><span class=\"keyword\">type</span></span>: &apos;user&apos;, id: <span class=\"number\">1</span> }\n       }\n     }\n   }\n });\nlet userRef = blog.belongsTo(&apos;user&apos;);\n\n<span class=\"comment\">// get the identifier of the reference</span>\n<span class=\"keyword\">if</span> (userRef.remoteType() === <span class=\"string\">&quot;id&quot;</span>) {\n   let id = userRef.id();\n }</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "id",
          "return": {
            "description": "The id of the record in this belongsTo relationship.",
            "type": "String"
          },
          "class": "BelongsToReference",
          "module": "@ember-data/store"
        },
        {
          "file": "../store/addon/-private/system/references/belongs-to.js",
          "line": 88,
          "description": "<html><head></head><body><p><code>push</code> can be used to update the data in the relationship and Ember\nData will treat the new data as the canonical value of this\nrelationship on the backend.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/blog.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n</pre></td>\n              <td class=\"code\"><pre>import Model, { belongsTo } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/model&apos;</span>;\n\nexport <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogModel</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span> </span>{\n   @<span class=\"title function_ invoke__\">belongsTo</span>({ <span class=\"attr\">async</span>: <span class=\"literal\">true</span> }) user;\n }\n\nlet blog = store.<span class=\"title function_ invoke__\">push</span>({\n   <span class=\"attr\">data</span>: {\n     <span class=\"attr\">type</span>: <span class=\"string\">&apos;blog&apos;</span>,\n     <span class=\"attr\">id</span>: <span class=\"number\">1</span>,\n     <span class=\"attr\">relationships</span>: {\n       <span class=\"attr\">user</span>: {\n         <span class=\"attr\">data</span>: { <span class=\"attr\">type</span>: <span class=\"string\">&apos;user&apos;</span>, <span class=\"attr\">id</span>: <span class=\"number\">1</span> }\n       }\n     }\n   }\n });\nlet userRef = blog.<span class=\"title function_ invoke__\">belongsTo</span>(<span class=\"string\">&apos;user&apos;</span>);\n\n<span class=\"comment\">// provide data for reference</span>\nuserRef.<span class=\"title function_ invoke__\">push</span>({\n   <span class=\"attr\">data</span>: {\n     <span class=\"attr\">type</span>: <span class=\"string\">&apos;user&apos;</span>,\n     <span class=\"attr\">id</span>: <span class=\"number\">1</span>,\n     <span class=\"attr\">attributes</span>: {\n       <span class=\"attr\">username</span>: <span class=\"string\">&quot;@user&quot;</span>\n     }\n   }\n }).<span class=\"title function_ invoke__\">then</span>(function(user) {\n   userRef.<span class=\"title function_ invoke__\">value</span>() === user;\n });</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "push",
          "params": [
            {
              "name": "objectOrPromise",
              "description": "a promise that resolves to a JSONAPI document object describing the new value of this relationship.",
              "type": "Object|Promise"
            }
          ],
          "return": {
            "description": "A promise that resolves with the new value in this belongs-to relationship.",
            "type": "Promise<record>"
          },
          "class": "BelongsToReference",
          "module": "@ember-data/store"
        },
        {
          "file": "../store/addon/-private/system/references/belongs-to.js",
          "line": 162,
          "description": "<html><head></head><body><p><code>value()</code> synchronously returns the current value of the belongs-to\nrelationship. Unlike <code>record.get(&apos;relationshipName&apos;)</code>, calling\n<code>value()</code> on a reference does not trigger a fetch if the async\nrelationship is not yet loaded. If the relationship is not loaded\nit will always return <code>null</code>.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td>\n              <td class=\"code\"><pre><span class=\"comment\">// models/blog.js</span>\nimport Model, { belongsTo } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/model&apos;</span>;\n\nexport <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogModel</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span> </span>{\n  @<span class=\"title function_ invoke__\">belongsTo</span>({ <span class=\"attr\">async</span>: <span class=\"literal\">true</span> }) user;\n}\n\nlet blog = store.<span class=\"title function_ invoke__\">push</span>({\n   <span class=\"attr\">data</span>: {\n     <span class=\"attr\">type</span>: <span class=\"string\">&apos;blog&apos;</span>,\n     <span class=\"attr\">id</span>: <span class=\"number\">1</span>,\n     <span class=\"attr\">relationships</span>: {\n       <span class=\"attr\">user</span>: {\n         <span class=\"attr\">data</span>: { <span class=\"attr\">type</span>: <span class=\"string\">&apos;user&apos;</span>, <span class=\"attr\">id</span>: <span class=\"number\">1</span> }\n       }\n     }\n   }\n });\nlet userRef = blog.<span class=\"title function_ invoke__\">belongsTo</span>(<span class=\"string\">&apos;user&apos;</span>);\n\nuserRef.<span class=\"title function_ invoke__\">value</span>(); <span class=\"comment\">// null</span>\n\n<span class=\"comment\">// provide data for reference</span>\nuserRef.<span class=\"title function_ invoke__\">push</span>({\n   <span class=\"attr\">data</span>: {\n     <span class=\"attr\">type</span>: <span class=\"string\">&apos;user&apos;</span>,\n     <span class=\"attr\">id</span>: <span class=\"number\">1</span>,\n     <span class=\"attr\">attributes</span>: {\n       <span class=\"attr\">username</span>: <span class=\"string\">&quot;@user&quot;</span>\n     }\n   }\n }).<span class=\"title function_ invoke__\">then</span>(function(user) {\n   userRef.<span class=\"title function_ invoke__\">value</span>(); <span class=\"comment\">// user</span>\n });</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "value",
          "return": {
            "description": "the record in this relationship",
            "type": "Model"
          },
          "class": "BelongsToReference",
          "module": "@ember-data/store"
        },
        {
          "file": "../store/addon/-private/system/references/belongs-to.js",
          "line": 224,
          "description": "<html><head></head><body><p>Loads a record in a belongs-to relationship if it is not already\nloaded. If the relationship is already loaded this method does not\ntrigger a new load.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n</pre></td>\n              <td class=\"code\"><pre><span class=\"comment\">// models/blog.js</span>\n<span class=\"keyword\">import</span> <span class=\"type\">Model</span>, { belongsTo } from &apos;<span class=\"meta\">@ember</span>-data/model&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogModel</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span> </span>{\n  <span class=\"meta\">@belongsTo</span>({ async: <span class=\"literal\">true</span> }) user;\n}\n\nlet blog = store.push({\n   data: {\n     <span class=\"class\"><span class=\"keyword\">type</span></span>: &apos;blog&apos;,\n     id: <span class=\"number\">1</span>,\n     relationships: {\n       user: {\n         data: { <span class=\"class\"><span class=\"keyword\">type</span></span>: &apos;user&apos;, id: <span class=\"number\">1</span> }\n       }\n     }\n   }\n });\nlet userRef = blog.belongsTo(&apos;user&apos;);\n\nuserRef.value(); <span class=\"comment\">// null</span>\n\nuserRef.load().<span class=\"keyword\">then</span>(function(user) {\n   userRef.value() === user\n });</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>You may also pass in an options object whose properties will be\nfed forward. This enables you to pass <code>adapterOptions</code> into the\nrequest given to the adapter via the reference.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">user</span>Ref.<span class=\"built_in\">load</span>({ adapterOptions: { isPrivate: true } }).then(function(<span class=\"keyword\">user</span>) {\n  <span class=\"keyword\">user</span>Ref.value() === <span class=\"keyword\">user</span>;\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/user.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">Adapter</span> from &apos;<span class=\"meta\">@ember</span>-data/adapter&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Adapter</span> </span>{\n  findRecord(store, <span class=\"class\"><span class=\"keyword\">type</span>, <span class=\"title\">id</span>, <span class=\"title\">snapshot</span>) </span>{\n    <span class=\"comment\">// In the adapter you will have access to adapterOptions.</span>\n    let adapterOptions = snapshot.adapterOptions;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "load",
          "params": [
            {
              "name": "options",
              "description": "the options to pass in.",
              "type": "Object"
            }
          ],
          "return": {
            "description": "a promise that resolves with the record in this belongs-to relationship.",
            "type": "Promise"
          },
          "class": "BelongsToReference",
          "module": "@ember-data/store"
        },
        {
          "file": "../store/addon/-private/system/references/belongs-to.js",
          "line": 289,
          "description": "<html><head></head><body><p>Triggers a reload of the value in this relationship. If the\nremoteType is <code>&quot;link&quot;</code> Ember Data will use the relationship link to\nreload the relationship. Otherwise it will reload the record by its\nid.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n</pre></td>\n              <td class=\"code\"><pre><span class=\"comment\">// models/blog.js</span>\n<span class=\"keyword\">import</span> <span class=\"type\">Model</span>, { belongsTo } from &apos;<span class=\"meta\">@ember</span>-data/model&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogModel</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span> </span>{\n  <span class=\"meta\">@belongsTo</span>({ async: <span class=\"literal\">true</span> }) user;\n}\n\nlet blog = store.push({\n   data: {\n     <span class=\"class\"><span class=\"keyword\">type</span></span>: &apos;blog&apos;,\n     id: <span class=\"number\">1</span>,\n     relationships: {\n       user: {\n         data: { <span class=\"class\"><span class=\"keyword\">type</span></span>: &apos;user&apos;, id: <span class=\"number\">1</span> }\n       }\n     }\n   }\n });\nlet userRef = blog.belongsTo(&apos;user&apos;);\n\nuserRef.reload().<span class=\"keyword\">then</span>(function(user) {\n   userRef.value() === user\n });</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>You may also pass in an options object whose properties will be\nfed forward. This enables you to pass <code>adapterOptions</code> into the\nrequest given to the adapter via the reference. A full example\ncan be found in the <code>load</code> method.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre>userRef.<span class=\"title function_ invoke__\">reload</span>({ <span class=\"attr\">adapterOptions</span>: { <span class=\"attr\">isPrivate</span>: <span class=\"literal\">true</span> } })</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "reload",
          "params": [
            {
              "name": "options",
              "description": "the options to pass in.",
              "type": "Object"
            }
          ],
          "return": {
            "description": "a promise that resolves with the record in this belongs-to relationship after the reload has completed.",
            "type": "Promise"
          },
          "class": "BelongsToReference",
          "module": "@ember-data/store"
        },
        {
          "file": "../store/addon/-private/system/references/reference.ts",
          "line": 51,
          "description": "<html><head></head><body><p>This returns a string that represents how the reference will be\nlooked up when it is loaded. If the relationship has a link it will\nuse the &quot;link&quot; otherwise it defaults to &quot;id&quot;.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> Model, { hasMany } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/model&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Model.extend({\n  comments: hasMany({ async: <span class=\"literal\">true</span> })\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n</pre></td>\n              <td class=\"code\"><pre><span class=\"built_in\">let</span> post = store.push({\n  data: {\n    <span class=\"built_in\">type</span>: <span class=\"string\">&apos;post&apos;</span>,\n    <span class=\"built_in\">id</span>: 1,\n    relationships: {\n      comments: {\n        data: [{ <span class=\"built_in\">type</span>: <span class=\"string\">&apos;comment&apos;</span>, <span class=\"built_in\">id</span>: 1 }]\n      }\n    }\n  }\n});\n\n<span class=\"built_in\">let</span> commentsRef = post.hasMany(<span class=\"string\">&apos;comments&apos;</span>);\n\n// get the identifier of the reference\n<span class=\"keyword\">if</span> (commentsRef.remoteType() === <span class=\"string\">&quot;ids&quot;</span>) {\n  <span class=\"built_in\">let</span> ids = commentsRef.ids();\n} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (commentsRef.remoteType() === <span class=\"string\">&quot;link&quot;</span>) {\n  <span class=\"built_in\">let</span> <span class=\"built_in\">link</span> = commentsRef.<span class=\"built_in\">link</span>();\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "remoteType",
          "return": {
            "description": "The name of the remote type. This should either be \"link\" or \"ids\"",
            "type": "String"
          },
          "class": "BelongsToReference",
          "module": "@ember-data/store",
          "inherited": true,
          "inheritedFrom": "Reference"
        },
        {
          "file": "../store/addon/-private/system/references/reference.ts",
          "line": 100,
          "description": "<html><head></head><body><p>The link Ember Data will use to fetch or reload this belongs-to\nrelationship.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n</pre></td>\n              <td class=\"code\"><pre><span class=\"comment\">// models/blog.js</span>\nimport Model, { belongsTo } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/model&apos;</span>;\nexport <span class=\"keyword\">default</span> Model.<span class=\"title function_ invoke__\">extend</span>({\n   <span class=\"attr\">user</span>: <span class=\"title function_ invoke__\">belongsTo</span>({ <span class=\"attr\">async</span>: <span class=\"literal\">true</span> })\n });\n\nlet blog = store.<span class=\"title function_ invoke__\">push</span>({\n   <span class=\"attr\">data</span>: {\n     <span class=\"attr\">type</span>: <span class=\"string\">&apos;blog&apos;</span>,\n     <span class=\"attr\">id</span>: <span class=\"number\">1</span>,\n     <span class=\"attr\">relationships</span>: {\n       <span class=\"attr\">user</span>: {\n         <span class=\"attr\">links</span>: {\n           <span class=\"attr\">related</span>: <span class=\"string\">&apos;/articles/1/author&apos;</span>\n         }\n       }\n     }\n   }\n });\nlet userRef = blog.<span class=\"title function_ invoke__\">belongsTo</span>(<span class=\"string\">&apos;user&apos;</span>);\n\n<span class=\"comment\">// get the identifier of the reference</span>\n<span class=\"keyword\">if</span> (userRef.<span class=\"title function_ invoke__\">remoteType</span>() === <span class=\"string\">&quot;link&quot;</span>) {\n   let link = userRef.<span class=\"title function_ invoke__\">link</span>();\n }</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "link",
          "return": {
            "description": "The link Ember Data will use to fetch or reload this belongs-to relationship.",
            "type": "String"
          },
          "class": "BelongsToReference",
          "module": "@ember-data/store",
          "inherited": true,
          "inheritedFrom": "Reference"
        },
        {
          "file": "../store/addon/-private/system/references/reference.ts",
          "line": 150,
          "description": "<html><head></head><body><p>The meta data for the belongs-to relationship.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n</pre></td>\n              <td class=\"code\"><pre><span class=\"comment\">// models/blog.js</span>\nimport Model, { belongsTo } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/model&apos;</span>;\nexport <span class=\"keyword\">default</span> Model.<span class=\"title function_ invoke__\">extend</span>({\n   <span class=\"attr\">user</span>: <span class=\"title function_ invoke__\">belongsTo</span>({ <span class=\"attr\">async</span>: <span class=\"literal\">true</span> })\n });\n\nlet blog = store.<span class=\"title function_ invoke__\">push</span>({\n   <span class=\"attr\">data</span>: {\n     <span class=\"attr\">type</span>: <span class=\"string\">&apos;blog&apos;</span>,\n     <span class=\"attr\">id</span>: <span class=\"number\">1</span>,\n     <span class=\"attr\">relationships</span>: {\n       <span class=\"attr\">user</span>: {\n         <span class=\"attr\">links</span>: {\n           <span class=\"attr\">related</span>: {\n             <span class=\"attr\">href</span>: <span class=\"string\">&apos;/articles/1/author&apos;</span>\n           },\n           <span class=\"attr\">meta</span>: {\n             <span class=\"attr\">lastUpdated</span>: <span class=\"number\">1458014400000</span>\n           }\n         }\n       }\n     }\n   }\n });\n\nlet userRef = blog.<span class=\"title function_ invoke__\">belongsTo</span>(<span class=\"string\">&apos;user&apos;</span>);\n\nuserRef.<span class=\"title function_ invoke__\">meta</span>() <span class=\"comment\">// { lastUpdated: 1458014400000 }</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "meta",
          "return": {
            "description": "The meta information for the belongs-to relationship.",
            "type": "Object"
          },
          "class": "BelongsToReference",
          "module": "@ember-data/store",
          "inherited": true,
          "inheritedFrom": "Reference"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": {
          "id": "ember-data-3.23.0-Reference",
          "type": "class"
        }
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-3.23.0-@ember-data/store",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-3.23.0",
          "type": "project-version"
        }
      }
    }
  }
}