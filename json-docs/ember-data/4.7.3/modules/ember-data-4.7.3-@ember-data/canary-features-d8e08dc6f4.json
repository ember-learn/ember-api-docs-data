{
  "data": {
    "id": "ember-data-4.7.3-@ember-data/canary-features",
    "type": "module",
    "attributes": {
      "name": "@ember-data/canary-features",
      "submodules": {},
      "elements": {},
      "fors": {},
      "namespaces": {},
      "tag": "main",
      "file": "../canary-features/addon/default-features.ts",
      "line": 1,
      "description": "<html><head></head><body><h2 id=\"canary-features\">Canary Features</h2>\n<p>EmberData allows users to test features that are implemented but not yet\navailable even in canary.</p>\n<p>Typically these features represent work that might introduce a new concept,\nnew API, change an API, or risk an unintended change in behavior to consuming\napplications.</p>\n<p>Such features have their implementations guarded by a &quot;feature flag&quot;, and the\nflag is only activated once the core-data team is prepared to ship the work\nin a canary release.</p>\n<h3 id=\"installing-canary\">Installing Canary</h3>\n<p>To test a feature you MUST be using a canary build. Canary builds are published\nto <code>npm</code> and can be installed using a precise tag (such as <code>ember-data@3.16.0-alpha.1</code>)\nor by installing the latest dist-tag published to the <code>canary</code> channel.</p>\n<p><em>Using <code>npm</code> to install the latest canary</em></p>\n<div class=\"highlight cli\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre><span class=\"built_in\">npm</span> install --save-dev ember-data@canary</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><em>Using <code>yarn</code> to install the latest canary</em></p>\n<div class=\"highlight cli\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre><span class=\"symbol\">yarn</span> <span class=\"keyword\">add</span> ember-<span class=\"meta\">data</span><span class=\"comment\">@canary</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h3 id=\"activating-a-canary-feature\">Activating a Canary Feature</h3>\n<p>Once you have installed canary, feature-flags can be activated at build-time by an environment\nvariable or at runtime using <code>window.EmberDataENV</code>.</p>\n<p>The &quot;off&quot; branch of feature-flagged code is always stripped from production builds, so you\nMUST use the build-time environment variable to activate a flag if testing production.</p>\n<p>The list of available feature-flags is located <a href=\"https://github.com/emberjs/data/tree/master/packages/canary-features/addon/default-features.ts\" title=\"List of EmberData FeatureFlags\">here</a></p>\n<h4 id=\"runtime-configuration\">Runtime Configuration</h4>\n<p>To configure feature-flags at runtime you will want to configure <code>window.EmberDataENV = {}</code> appropriately.\nYou should add this global property in your app prior to your application booting. At the top of\nyour <code>app.js</code> file is a convenient location, as is within <code> index.html</code> as a script running prior\nto loading any other scripts.</p>\n<p><em>Example activating a single feature flags</em></p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"string\">window.EmberDataENV</span> <span class=\"string\">=</span> {\n  <span class=\"attr\">FEATURES:</span> {\n    <span class=\"attr\">RECORD_DATA_ERRORS:</span> <span class=\"literal\">true</span>,\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><em>Example activating multiple feature flags</em></p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n</pre></td>\n              <td class=\"code\"><pre><span class=\"string\">window.EmberDataENV</span> <span class=\"string\">=</span> {\n  <span class=\"attr\">FEATURES:</span> {\n    <span class=\"attr\">RECORD_DATA_ERRORS:</span> <span class=\"literal\">true</span>,\n    <span class=\"attr\">RECORD_DATA_STATE:</span> <span class=\"literal\">true</span>,\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><em>Example activating all feature flags</em></p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n</pre></td>\n              <td class=\"code\"><pre><span class=\"built_in\">window</span>.EmberDataENV = {\n  ENABLE_OPTIONAL_FEATURES: <span class=\"keyword\">true</span>\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h4 id=\"build-time-configuration\">Build Time Configuration</h4>\n<p><em>Example activating a single feature flags</em></p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre><span class=\"attr\">EMBER_DATA_FEATURE_OVERRIDE</span>=SAMPLE_FEATURE_FLAG ember build</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><em>Example activating multiple feature flags</em></p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre><span class=\"attr\">EMBER_DATA_FEATURE_OVERRIDE</span>=SAMPLE_FEATURE_FLAG,CUSTOM_MODEL_CLASS ember build</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><em>Example activating all feature flags</em></p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre><span class=\"attr\">EMBER_DATA_FEATURE_OVERRIDE</span>=ENABLE_ALL_OPTIONAL ember build</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h3 id=\"preparing-an-addon-to-use-a-canary-feature\">Preparing an Addon to use a Canary Feature</h3>\n<p>For most addons and most features simple version detection should be\nenough. Using the provided version compatibility helpers from\n<a href=\"https://github.com/pzuraq/ember-compatibility-helpers\">ember-compatibility-helpers</a>\nthe following can be done:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"title\">if</span> (gte(&apos;@ember-<span class=\"class\"><span class=\"keyword\">data</span>/store&apos;, &apos;3.12.0&apos;)) {\n\n} else {\n\n}</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>For addons needing more advanced detection <a href=\"https://github.com/ember-cli/babel-plugin-debug-macros\">babel-plugin-debug-macros</a>\ncan be leveraged to provide code-stripping based on feature presence. For example in your addon&apos;s <code>index.js</code>:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n</pre></td>\n              <td class=\"code\"><pre>function debugMacros(features) {\n  let plugins = [\n    [\n      require.resolve(<span class=\"string\">&apos;babel-plugin-debug-macros&apos;</span>),\n      {\n        flags: [\n          {\n            source: <span class=\"string\">&apos;&lt;addon-name&gt;/feature-flags&apos;</span>,\n            flags: features,\n          },\n        ],\n      },\n      <span class=\"string\">&apos;&lt;addon-name&gt;/canary-features-stripping&apos;</span>,\n    ],\n  ];\n\n  <span class=\"keyword\">return</span> plugins;\n}\n\nmodule.exports = {\n  name: <span class=\"string\">&apos;&lt;addon-name&gt;&apos;</span>,\n\n  <span class=\"keyword\">init</span>() {\n    <span class=\"keyword\">this</span>._super.<span class=\"keyword\">init</span>.apply(<span class=\"keyword\">this</span>, arguments);\n\n    let features;\n    <span class=\"keyword\">try</span> {\n      features = <span class=\"keyword\">this</span>.project.require(<span class=\"string\">&apos;@ember-data/private-build-infra/src/features&apos;</span>)();\n    } <span class=\"keyword\">catch</span> (e) {\n      features = { CUSTOM_MODEL_CLASS: <span class=\"literal\">false</span> };\n    }\n\n    <span class=\"keyword\">this</span>.options = <span class=\"keyword\">this</span>.options || {};\n    <span class=\"keyword\">this</span>.options.babel = <span class=\"keyword\">this</span>.options.babel || {};\n    <span class=\"comment\">// this ensures that the same `@ember-data/canary-features` processing that the various</span>\n    <span class=\"comment\">// ember-data addons do is done for this addon</span>\n    <span class=\"keyword\">this</span>.options.babel.plugins = [...debugMacros(features)];\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "itemtype": "main",
      "parent": null,
      "publicclasses": [],
      "privateclasses": [],
      "staticfunctions": {},
      "allstaticfunctions": {},
      "version": "4.7.3"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-data-4.7.3",
          "type": "project-version"
        }
      }
    }
  }
}