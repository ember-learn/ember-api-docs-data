{
  "data": {
    "id": "ember-data-2.3.2-DS.Errors",
    "type": "class",
    "attributes": {
      "name": "DS.Errors",
      "shortname": "DS.Errors",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember-data",
      "namespace": "DS",
      "file": "addon/-private/system/model/errors.js",
      "line": 14,
      "description": "<html><head></head><body><p>Holds validation errors for a given record organized by attribute names.</p>\n<p>Every DS.Model has an <code>errors</code> property that is an instance of\n<code>DS.Errors</code>. This can be used to display validation error\nmessages returned from the server when a <code>record.save()</code> rejects.</p>\n<p>For Example, if you had an <code>User</code> model that looked like this:</p>\n<div class=\"highlight app/models/user.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/user.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.Model.extend({\n  username: attr(<span class=\"string\">&apos;string&apos;</span>),\n  email: attr(<span class=\"string\">&apos;string&apos;</span>)\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>And you attempted to save a record that did not validate on the backend.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>var <span class=\"keyword\">user</span> = store.createRecord(<span class=\"string\">&apos;user&apos;</span>, {\n  username: <span class=\"string\">&apos;tomster&apos;</span>,\n  email: <span class=\"string\">&apos;invalidEmail&apos;</span>\n});\n<span class=\"keyword\">user</span>.save();</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Your backend data store might return a response that looks like\nthis. This response will be used to populate the error object.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attr\">&quot;errors&quot;</span>: [\n    {\n      <span class=\"attr\">&quot;detail&quot;</span>: <span class=\"string\">&quot;This username is already taken!&quot;</span>,\n      <span class=\"attr\">&quot;source&quot;</span>: {\n        <span class=\"attr\">&quot;pointer&quot;</span>: <span class=\"string\">&quot;data/attributes/username&quot;</span>\n      }\n    }, {\n      <span class=\"attr\">&quot;detail&quot;</span>: <span class=\"string\">&quot;Doesn&apos;t look like a valid email.&quot;</span>,\n      <span class=\"attr\">&quot;source&quot;</span>: {\n        <span class=\"attr\">&quot;pointer&quot;</span>: <span class=\"string\">&quot;data/attributes/email&quot;</span>\n      }\n    }\n  ]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>For additional information on the error object, see the <a href=\"http://jsonapi.org/format/#error-objects\">JSON API spec</a>.</p>\n<p>Errors can be displayed to the user by accessing their property name\nto get an array of all the error objects for that property. Each\nerror object is a JavaScript object with two keys:</p>\n<ul>\n<li><code>message</code> A string containing the error message from the backend</li>\n<li><code>attribute</code> The name of the property associated with this error message</li>\n</ul>\n<div class=\"highlight handlebars\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td>\n              <td class=\"code\"><pre><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>Username: </span><span class=\"template-variable\">{{<span class=\"built_in\">input</span> value=username}}</span><span class=\"xml\"> <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span>\n</span><span class=\"template-tag\">{{#<span class=\"name\"><span class=\"builtin-name\">each</span></span> model.errors.username <span class=\"keyword\">as</span> |error|}}</span><span class=\"xml\">\n  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>\n    </span><span class=\"template-variable\">{{error.message}}</span><span class=\"xml\">\n  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n</span><span class=\"template-tag\">{{/<span class=\"name\"><span class=\"builtin-name\">each</span></span>}}</span><span class=\"xml\">\n\n<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>Email: </span><span class=\"template-variable\">{{<span class=\"built_in\">input</span> value=email}}</span><span class=\"xml\"> <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span>\n</span><span class=\"template-tag\">{{#<span class=\"name\"><span class=\"builtin-name\">each</span></span> model.errors.email <span class=\"keyword\">as</span> |error|}}</span><span class=\"xml\">\n  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>\n    </span><span class=\"template-variable\">{{error.message}}</span><span class=\"xml\">\n  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n</span><span class=\"template-tag\">{{/<span class=\"name\"><span class=\"builtin-name\">each</span></span>}}</span><span class=\"xml\"></span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>You can also access the special <code>messages</code> property on the error\nobject to get an array of all the error strings.</p>\n<div class=\"highlight handlebars\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"xml\"></span><span class=\"template-tag\">{{#<span class=\"name\"><span class=\"builtin-name\">each</span></span> model.errors.messages <span class=\"keyword\">as</span> |message|}}</span><span class=\"xml\">\n  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>\n    </span><span class=\"template-variable\">{{message}}</span><span class=\"xml\">\n  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n</span><span class=\"template-tag\">{{/<span class=\"name\"><span class=\"builtin-name\">each</span></span>}}</span><span class=\"xml\"></span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "extends": "Ember.Object",
      "uses": [
        "Ember.Evented",
        "Ember.Enumerable"
      ],
      "methods": [
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 105,
          "description": "<html><head></head><body><p>Register with target handler</p>\n</body></html>",
          "itemtype": "method",
          "name": "registerHandlers",
          "params": [
            {
              "name": "target",
              "description": "",
              "type": "Object"
            },
            {
              "name": "becameInvalid",
              "description": "",
              "type": "Function"
            },
            {
              "name": "becameValid",
              "description": "",
              "type": "Function"
            }
          ],
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 131,
          "description": "<html><head></head><body><p>Returns errors for a given attribute</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">var</span> user = store.createRecord(<span class=\"string\">&apos;user&apos;</span>, {\n  username: <span class=\"string\">&apos;tomster&apos;</span>,\n  email: <span class=\"string\">&apos;invalidEmail&apos;</span>\n});\nuser.save().<span class=\"keyword\">catch</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{\n  user.get(<span class=\"string\">&apos;errors&apos;</span>).errorsFor(<span class=\"string\">&apos;email&apos;</span>); <span class=\"comment\">// returns:</span>\n  <span class=\"comment\">// [{attribute: &quot;email&quot;, message: &quot;Doesn&apos;t look like a valid email.&quot;}]</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "errorsFor",
          "params": [
            {
              "name": "attribute",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Array"
          },
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 179,
          "itemtype": "method",
          "name": "unknownProperty",
          "access": "private",
          "tagname": "",
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 204,
          "description": "<html><head></head><body><p>Adds error messages to a given attribute and sends\n<code>becameInvalid</code> event to the record.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">if</span> (!<span class=\"keyword\">user</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;username&apos;</span>) {\n  <span class=\"keyword\">user</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;errors&apos;</span>).<span class=\"keyword\">add</span>(<span class=\"string\">&apos;username&apos;</span>, <span class=\"string\">&apos;This field is required&apos;</span>);\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "add",
          "params": [
            {
              "name": "attribute",
              "description": "",
              "type": "String"
            },
            {
              "name": "messages",
              "description": "",
              "type": "(Array|String)"
            }
          ],
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 234,
          "itemtype": "method",
          "name": "_findOrCreateMessages",
          "access": "private",
          "tagname": "",
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 249,
          "description": "<html><head></head><body><p>Removes all error messages from the given attribute and sends\n<code>becameValid</code> event to the record if there no more errors left.</p>\n<p>Example:</p>\n<div class=\"highlight app/models/user.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/user.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre>import DS from &apos;ember-data&apos;;\n\nexport default <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span><span class=\"module\"><span class=\"identifier\">Model</span>.</span></span>extend({\n  email: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;),\n  twoFactorAuth: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;boolean&apos;),\n  phone: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">DS</span>.</span></span>attr(&apos;<span class=\"built_in\">string</span>&apos;)\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight app/routes/user/edit.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/routes/user/edit.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> Ember <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember&apos;</span>;\n\nexport <span class=\"keyword\">default</span> Ember.Route.extend({\n  actions: {\n    save: <span class=\"keyword\">function</span>(<span class=\"keyword\">user</span>) {\n       <span class=\"keyword\">if</span> (!<span class=\"keyword\">user</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;twoFactorAuth&apos;</span>)) {\n         <span class=\"keyword\">user</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;errors&apos;</span>).remove(<span class=\"string\">&apos;phone&apos;</span>);\n       }\n       <span class=\"keyword\">user</span>.save();\n     }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "remove",
          "params": [
            {
              "name": "attribute",
              "description": "",
              "type": "String"
            }
          ],
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 297,
          "description": "<html><head></head><body><p>Removes all error messages and sends <code>becameValid</code> event\nto the record.</p>\n<p>Example:</p>\n<div class=\"highlight app/routes/user/edit.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/routes/user/edit.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> Ember <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember&apos;</span>;\n\nexport <span class=\"keyword\">default</span> Ember.Route.extend({\n  actions: {\n    retrySave: <span class=\"keyword\">function</span>(<span class=\"keyword\">user</span>) {\n       <span class=\"keyword\">user</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;errors&apos;</span>).clear();\n       <span class=\"keyword\">user</span>.save();\n     }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "clear",
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 338,
          "description": "<html><head></head><body><p>Checks if there is error messages for the given attribute.</p>\n<div class=\"highlight app/routes/user/edit.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/routes/user/edit.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> Ember <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember&apos;</span>;\n\nexport <span class=\"keyword\">default</span> Ember.Route.extend({\n  actions: {\n    save: <span class=\"keyword\">function</span>(<span class=\"keyword\">user</span>) {\n       <span class=\"keyword\">if</span> (<span class=\"keyword\">user</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;errors&apos;</span>).has(<span class=\"string\">&apos;email&apos;</span>)) {\n         <span class=\"keyword\">return</span> alert(<span class=\"string\">&apos;Please update your email before attempting to save.&apos;</span>);\n       }\n       <span class=\"keyword\">user</span>.save();\n     }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "has",
          "params": [
            {
              "name": "attribute",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if there some errors on given attribute",
            "type": "Boolean"
          },
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 118,
          "itemtype": "property",
          "name": "errorsByAttributeName",
          "type": "{Ember.MapWithDefault}",
          "access": "private",
          "tagname": "",
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 153,
          "description": "<html><head></head><body><p>An array containing all of the error messages for this\nrecord. This is useful for displaying all errors to the user.</p>\n<div class=\"highlight handlebars\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"xml\"></span><span class=\"template-tag\">{{#<span class=\"name\"><span class=\"builtin-name\">each</span></span> model.errors.messages <span class=\"keyword\">as</span> |message|}}</span><span class=\"xml\">\n  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>\n    </span><span class=\"template-variable\">{{message}}</span><span class=\"xml\">\n  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n</span><span class=\"template-tag\">{{/<span class=\"name\"><span class=\"builtin-name\">each</span></span>}}</span><span class=\"xml\"></span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "property",
          "name": "messages",
          "type": "{Array}",
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 170,
          "itemtype": "property",
          "name": "content",
          "type": "{Array}",
          "access": "private",
          "tagname": "",
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 189,
          "description": "<html><head></head><body><p>Total number of errors.</p>\n</body></html>",
          "itemtype": "property",
          "name": "length",
          "type": "{Number}",
          "readonly": "",
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/-private/system/model/errors.js",
          "line": 197,
          "itemtype": "property",
          "name": "isEmpty",
          "type": "{Boolean}",
          "readonly": "",
          "class": "DS.Errors",
          "module": "ember-data",
          "namespace": "DS"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": {
          "id": "Ember.Object",
          "type": "missing"
        }
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-2.3.2-ember-data",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-2.3.2",
          "type": "project-version"
        }
      }
    }
  }
}