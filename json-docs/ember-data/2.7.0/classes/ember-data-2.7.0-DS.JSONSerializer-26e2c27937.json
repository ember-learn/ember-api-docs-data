{
  "data": {
    "id": "ember-data-2.7.0-DS.JSONSerializer",
    "type": "class",
    "attributes": {
      "name": "DS.JSONSerializer",
      "shortname": "DS.JSONSerializer",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember-data",
      "namespace": "DS",
      "file": "addon/serializers/json.js",
      "line": 19,
      "description": "<html><head></head><body><p>Ember Data 2.0 Serializer:</p>\n<p>In Ember Data a Serializer is used to serialize and deserialize\nrecords when they are transferred in and out of an external source.\nThis process involves normalizing property names, transforming\nattribute values and serializing relationships.</p>\n<p>By default, Ember Data uses and recommends the <code>JSONAPISerializer</code>.</p>\n<p><code>JSONSerializer</code> is useful for simpler or legacy backends that may\nnot support the <a href=\"http://jsonapi.org/\">http://jsonapi.org/</a> spec.</p>\n<p>For example, given the following <code>User</code> model and JSON payload:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/user.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>import DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.Model.<span class=\"title function_ invoke__\">extend</span>({\n  <span class=\"attr\">friends</span>: DS.<span class=\"title function_ invoke__\">hasMany</span>(<span class=\"string\">&apos;user&apos;</span>),\n  <span class=\"attr\">house</span>: DS.<span class=\"title function_ invoke__\">belongsTo</span>(<span class=\"string\">&apos;location&apos;</span>),\n\n  <span class=\"attr\">name</span>: DS.<span class=\"title function_ invoke__\">attr</span>(<span class=\"string\">&apos;string&apos;</span>)\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"attribute\">{\n  id</span><span class=\"punctuation\">:</span> <span class=\"string\">1,</span>\n  <span class=\"attribute\">name</span><span class=\"punctuation\">:</span> <span class=\"string\">&apos;Sebastian&apos;,</span>\n  <span class=\"attribute\">friends</span><span class=\"punctuation\">:</span> <span class=\"string\">[3, 4],</span>\n  <span class=\"attribute\">links</span><span class=\"punctuation\">:</span> <span class=\"string\">{</span>\n    <span class=\"attribute\">house</span><span class=\"punctuation\">:</span> <span class=\"string\">&apos;/houses/lefkada&apos;</span>\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><code>JSONSerializer</code> will normalize the JSON payload to the JSON API format that the\nEmber Data store expects.</p>\n<p>You can customize how JSONSerializer processes its payload by passing options in\nthe <code>attrs</code> hash or by subclassing the <code>JSONSerializer</code> and overriding hooks:</p>\n<ul>\n<li>To customize how a single record is normalized, use the <code>normalize</code> hook.</li>\n<li>To customize how <code>JSONSerializer</code> normalizes the whole server response, use the\n<code>normalizeResponse</code> hook.</li>\n<li>To customize how <code>JSONSerializer</code> normalizes a specific response from the server,\nuse one of the many specific <code>normalizeResponse</code> hooks.</li>\n<li>To customize how <code>JSONSerializer</code> normalizes your id, attributes or relationships,\nuse the <code>extractId</code>, <code>extractAttributes</code> and <code>extractRelationships</code> hooks.</li>\n</ul>\n<p>The <code>JSONSerializer</code> normalization process follows these steps:</p>\n<ul>\n<li><code>normalizeResponse</code> - entry method to the serializer.</li>\n<li><code>normalizeCreateRecordResponse</code> - a <code>normalizeResponse</code> for a specific operation is called.</li>\n<li><code>normalizeSingleResponse</code>|<code>normalizeArrayResponse</code> - for methods like <code>createRecord</code> we expect\na single record back, while for methods like <code>findAll</code> we expect multiple methods back.</li>\n<li><code>normalize</code> - <code>normalizeArray</code> iterates and calls <code>normalize</code> for each of its records while <code>normalizeSingle</code>\ncalls it once. This is the method you most likely want to subclass.</li>\n<li><code>extractId</code> | <code>extractAttributes</code> | <code>extractRelationships</code> - <code>normalize</code> delegates to these methods to\nturn the record payload into the JSON API format.</li>\n</ul>\n</body></html>",
      "extends": "DS.Serializer",
      "methods": [
        {
          "file": "addon/serializers/json.js",
          "line": 175,
          "description": "<html><head></head><body><p>Given a subclass of <code>DS.Model</code> and a JSON object this method will\niterate through each attribute of the <code>DS.Model</code> and invoke the\n<code>DS.Transform#deserialize</code> method on the matching property of the\nJSON object.  This method is typically called after the\nserializer&apos;s <code>normalize</code> method.</p>\n</body></html>",
          "itemtype": "method",
          "name": "applyTransforms",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "data",
              "description": "The data to transform",
              "type": "Object"
            }
          ],
          "return": {
            "description": "data The transformed data object",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 202,
          "description": "<html><head></head><body><p>The <code>normalizeResponse</code> method is used to normalize a payload from the\nserver to a JSON-API Document.</p>\n<p><a href=\"http://jsonapi.org/format/#document-structure\">http://jsonapi.org/format/#document-structure</a></p>\n<p>This method delegates to a more specific normalize method based on\nthe <code>requestType</code>.</p>\n<p>To override this method with a custom one, make sure to call\n<code>return this._super(store, primaryModelClass, payload, id, requestType)</code> with your\npre-processed data.</p>\n<p>Here&apos;s an example of using <code>normalizeResponse</code> manually:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>socket.on(&apos;message&apos;, <span class=\"keyword\">function</span>(message) {\n  var data = message.data;\n  var modelClass = store.model<span class=\"constructor\">For(<span class=\"params\">data</span>.<span class=\"params\">modelName</span>)</span>;\n  var serializer = store.serializer<span class=\"constructor\">For(<span class=\"params\">data</span>.<span class=\"params\">modelName</span>)</span>;\n  var normalized = serializer.normalize<span class=\"constructor\">SingleResponse(<span class=\"params\">store</span>, <span class=\"params\">modelClass</span>, <span class=\"params\">data</span>, <span class=\"params\">data</span>.<span class=\"params\">id</span>)</span>;\n\n  store.push(normalized);\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 262,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeFindRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 276,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeQueryRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 290,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeFindAllResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 304,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeFindBelongsToResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 318,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeFindHasManyResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 332,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeFindManyResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 346,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeQueryResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 360,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeCreateRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 374,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeDeleteRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 388,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeUpdateRecordResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 402,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeSaveResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 416,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeSingleResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 430,
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeArrayResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 444,
          "itemtype": "method",
          "name": "_normalizeResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            },
            {
              "name": "isSingle",
              "description": "",
              "type": "Boolean"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 491,
          "description": "<html><head></head><body><p>Normalizes a part of the JSON payload returned by\nthe server. You should override this method, munge the hash\nand call super if you have generic normalization to do.</p>\n<p>It takes the type of the record that is being normalized\n(as a DS.Model class), the property where the hash was\noriginally found, and the hash to normalize.</p>\n<p>You can use this method, for example, to normalize underscored keys to camelized\nor other general-purpose normalizations.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"variable constant_\">DS</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"variable constant_\">DS</span>.<span class=\"property\">JSONSerializer</span>.<span class=\"title function_\">extend</span>({\n  <span class=\"attr\">normalize</span>: <span class=\"keyword\">function</span>(<span class=\"params\">typeClass, hash</span>) {\n    <span class=\"keyword\">var</span> fields = <span class=\"title class_\">Ember</span>.<span class=\"title function_\">get</span>(typeClass, <span class=\"string\">&apos;fields&apos;</span>);\n    fields.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span>(<span class=\"params\">field</span>) {\n      <span class=\"keyword\">var</span> payloadField = <span class=\"title class_\">Ember</span>.<span class=\"property\">String</span>.<span class=\"title function_\">underscore</span>(field);\n      <span class=\"keyword\">if</span> (field === payloadField) { <span class=\"keyword\">return</span>; }\n\n      hash[field] = hash[payloadField];\n      <span class=\"keyword\">delete</span> hash[payloadField];\n    });\n    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">_super</span>.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, <span class=\"variable language_\">arguments</span>);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "normalize",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 550,
          "description": "<html><head></head><body><p>Returns the resource&apos;s ID.</p>\n</body></html>",
          "itemtype": "method",
          "name": "extractId",
          "params": [
            {
              "name": "modelClass",
              "description": "",
              "type": "Object"
            },
            {
              "name": "resourceHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 564,
          "description": "<html><head></head><body><p>Returns the resource&apos;s attributes formatted as a JSON-API &quot;attributes object&quot;.</p>\n<p><a href=\"http://jsonapi.org/format/#document-resource-object-attributes\">http://jsonapi.org/format/#document-resource-object-attributes</a></p>\n</body></html>",
          "itemtype": "method",
          "name": "extractAttributes",
          "params": [
            {
              "name": "modelClass",
              "description": "",
              "type": "Object"
            },
            {
              "name": "resourceHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 588,
          "description": "<html><head></head><body><p>Returns a relationship formatted as a JSON-API &quot;relationship object&quot;.</p>\n<p><a href=\"http://jsonapi.org/format/#document-resource-object-relationships\">http://jsonapi.org/format/#document-resource-object-relationships</a></p>\n</body></html>",
          "itemtype": "method",
          "name": "extractRelationship",
          "params": [
            {
              "name": "relationshipModelName",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationshipHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 637,
          "description": "<html><head></head><body><p>Returns a polymorphic relationship formatted as a JSON-API &quot;relationship object&quot;.</p>\n<p><a href=\"http://jsonapi.org/format/#document-resource-object-relationships\">http://jsonapi.org/format/#document-resource-object-relationships</a></p>\n<p><code>relationshipOptions</code> is a hash which contains more information about the\npolymorphic relationship which should be extracted:</p>\n<ul>\n<li><code>resourceHash</code> complete hash of the resource the relationship should be\nextracted from</li>\n<li><code>relationshipKey</code> key under which the value for the relationship is\nextracted from the resourceHash</li>\n<li><code>relationshipMeta</code> meta information about the relationship</li>\n</ul>\n</body></html>",
          "itemtype": "method",
          "name": "extractPolymorphicRelationship",
          "params": [
            {
              "name": "relationshipModelName",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationshipHash",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationshipOptions",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 660,
          "description": "<html><head></head><body><p>Returns the resource&apos;s relationships formatted as a JSON-API &quot;relationships object&quot;.</p>\n<p><a href=\"http://jsonapi.org/format/#document-resource-object-relationships\">http://jsonapi.org/format/#document-resource-object-relationships</a></p>\n</body></html>",
          "itemtype": "method",
          "name": "extractRelationships",
          "params": [
            {
              "name": "modelClass",
              "description": "",
              "type": "Object"
            },
            {
              "name": "resourceHash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 716,
          "itemtype": "method",
          "name": "modelNameFromPayloadKey",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "the model's modelName",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 727,
          "itemtype": "method",
          "name": "normalizeAttributes",
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 746,
          "itemtype": "method",
          "name": "normalizeRelationships",
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 765,
          "itemtype": "method",
          "name": "normalizeUsingDeclaredMapping",
          "access": "private",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 795,
          "description": "<html><head></head><body><p>Looks up the property key that was set by the custom <code>attr</code> mapping\npassed to the serializer.</p>\n</body></html>",
          "itemtype": "method",
          "name": "_getMappedKey",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "key",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 826,
          "description": "<html><head></head><body><p>Check attrs.key.serialize property to inform if the <code>key</code>\ncan be serialized</p>\n</body></html>",
          "itemtype": "method",
          "name": "_canSerialize",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the key can be serialized",
            "type": "Boolean"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 841,
          "description": "<html><head></head><body><p>When attrs.key.serialize is set to true then\nit takes priority over the other checks and the related\nattribute/relationship will be serialized</p>\n</body></html>",
          "itemtype": "method",
          "name": "_mustSerialize",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the key must be serialized",
            "type": "Boolean"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 857,
          "description": "<html><head></head><body><p>Check if the given hasMany relationship should be serialized</p>\n</body></html>",
          "itemtype": "method",
          "name": "shouldSerializeHasMany",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "relationshipType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the hasMany relationship should be serialized",
            "type": "Boolean"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 878,
          "description": "<html><head></head><body><p>Check if the given hasMany relationship should be serialized</p>\n</body></html>",
          "itemtype": "method",
          "name": "_shouldSerializeHasMany",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "relationshipType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "true if the hasMany relationship should be serialized",
            "type": "Boolean"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 898,
          "description": "<html><head></head><body><p>Called when a record is saved in order to convert the\nrecord into JSON.</p>\n<p>By default, it creates a JSON object with a key for\neach attribute and belongsTo relationship.</p>\n<p>For example, consider this model:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/comment.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>import DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.Model.<span class=\"title function_ invoke__\">extend</span>({\n  <span class=\"attr\">title</span>: DS.<span class=\"title function_ invoke__\">attr</span>(),\n  <span class=\"attr\">body</span>: DS.<span class=\"title function_ invoke__\">attr</span>(),\n\n  <span class=\"attr\">author</span>: DS.<span class=\"title function_ invoke__\">belongsTo</span>(<span class=\"string\">&apos;user&apos;</span>)\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The default serialization would create a JSON object like:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"punctuation\">{</span>\n  <span class=\"attr\">&quot;title&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Rails is unagi&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"attr\">&quot;body&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Rails? Omakase? O_O&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"attr\">&quot;author&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">12</span>\n<span class=\"punctuation\">}</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>By default, attributes are passed through as-is, unless\nyou specified an attribute type (<code>DS.attr(&apos;date&apos;)</code>). If\nyou specify a transform, the JavaScript value will be\nserialized when inserted into the JSON hash.</p>\n<p>By default, belongs-to relationships are converted into\nIDs when inserted into the JSON hash.</p>\n<h2 id=\"ids\">IDs</h2>\n<p><code>serialize</code> takes an options hash with a single option:\n<code>includeId</code>. If this option is <code>true</code>, <code>serialize</code> will,\nby default include the ID in the JSON object it builds.</p>\n<p>The adapter passes in <code>includeId: true</code> when serializing\na record for <code>createRecord</code>, but not for <code>updateRecord</code>.</p>\n<h2 id=\"customization\">Customization</h2>\n<p>Your server may expect a different JSON format than the\nbuilt-in serialization format.</p>\n<p>In that case, you can implement <code>serialize</code> yourself and\nreturn a JSON hash of your choosing.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serialize: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var <span class=\"type\">json</span> = {\n      POST_TTL: <span class=\"keyword\">snapshot</span>.attr(<span class=\"string\">&apos;title&apos;</span>),\n      POST_BDY: <span class=\"keyword\">snapshot</span>.attr(<span class=\"string\">&apos;body&apos;</span>),\n      POST_CMS: <span class=\"keyword\">snapshot</span>.hasMany(<span class=\"string\">&apos;comments&apos;</span>, { ids: <span class=\"keyword\">true</span> })\n    }\n\n    <span class=\"keyword\">if</span> (<span class=\"keyword\">options</span>.includeId) {\n      <span class=\"type\">json</span>.POST_ID_ = <span class=\"keyword\">snapshot</span>.id;\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"type\">json</span>;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h2 id=\"customizing-an-app-wide-serializer\">Customizing an App-Wide Serializer</h2>\n<p>If you want to define a serializer for your entire\napplication, you&apos;ll probably want to use <code>eachAttribute</code>\nand <code>eachRelationship</code> on the record.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serialize: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var <span class=\"type\">json</span> = {};\n\n    <span class=\"keyword\">snapshot</span>.eachAttribute(<span class=\"keyword\">function</span>(<span class=\"type\">name</span>) {\n      <span class=\"type\">json</span>[serverAttributeName(<span class=\"type\">name</span>)] = <span class=\"keyword\">snapshot</span>.attr(<span class=\"type\">name</span>);\n    })\n\n    <span class=\"keyword\">snapshot</span>.eachRelationship(<span class=\"keyword\">function</span>(<span class=\"type\">name</span>, relationship) {\n      <span class=\"keyword\">if</span> (relationship.kind === <span class=\"string\">&apos;hasMany&apos;</span>) {\n        <span class=\"type\">json</span>[serverHasManyName(<span class=\"type\">name</span>)] = <span class=\"keyword\">snapshot</span>.hasMany(<span class=\"type\">name</span>, { ids: <span class=\"keyword\">true</span> });\n      }\n    });\n\n    <span class=\"keyword\">if</span> (<span class=\"keyword\">options</span>.includeId) {\n      <span class=\"type\">json</span>.ID_ = <span class=\"keyword\">snapshot</span>.id;\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"type\">json</span>;\n  }\n});\n\n<span class=\"keyword\">function</span> serverAttributeName(<span class=\"keyword\">attribute</span>) {\n  <span class=\"keyword\">return</span> <span class=\"keyword\">attribute</span>.underscore().toUpperCase();\n}\n\n<span class=\"keyword\">function</span> serverHasManyName(<span class=\"type\">name</span>) {\n  <span class=\"keyword\">return</span> serverAttributeName(<span class=\"type\">name</span>.singularize()) + &quot;_IDS&quot;;\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>This serializer will generate JSON that looks like this:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"string\">&quot;TITLE&quot;</span>: <span class=\"string\">&quot;Rails is omakase&quot;</span>,\n  <span class=\"string\">&quot;BODY&quot;</span>: <span class=\"string\">&quot;Yep. Omakase.&quot;</span>,\n  <span class=\"string\">&quot;COMMENT_IDS&quot;</span>: [ <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span> ]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h2 id=\"tweaking-the-default-json\">Tweaking the Default JSON</h2>\n<p>If you just want to do some small tweaks on the default JSON,\nyou can call super first and make the tweaks on the returned\nJSON.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serialize: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var <span class=\"type\">json</span> = this._super.apply(this, arguments);\n\n    <span class=\"type\">json</span>.subject = <span class=\"type\">json</span>.title;\n    <span class=\"keyword\">delete</span> <span class=\"type\">json</span>.title;\n\n    <span class=\"keyword\">return</span> <span class=\"type\">json</span>;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serialize",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "json",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1075,
          "description": "<html><head></head><body><p>You can use this method to customize how a serialized record is added to the complete\nJSON hash to be sent to the server. By default the JSON Serializer does not namespace\nthe payload and just sends the raw serialized JSON object.\nIf your server expects namespaced keys, you should consider using the RESTSerializer.\nOtherwise you can override this method to customize how the record is added to the hash.\nThe hash property should be modified by reference.</p>\n<p>For example, your server may expect underscored root objects.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.RESTSerializer.extend({\n  serializeIntoHash: <span class=\"keyword\">function</span>(data, <span class=\"keyword\">type</span>, <span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>) {\n    var root = Ember.String.decamelize(<span class=\"keyword\">type</span>.modelName);\n    data[root] = this.serialize(<span class=\"keyword\">snapshot</span>, <span class=\"keyword\">options</span>);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeIntoHash",
          "params": [
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1106,
          "description": "<html><head></head><body><p><code>serializeAttribute</code> can be used to customize how <code>DS.attr</code>\nproperties are serialized</p>\n<p>For example if you wanted to ensure all your attributes were always\nserialized as properties on an <code>attributes</code> object you could\nwrite:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serializeAttribute: <span class=\"keyword\">function</span>(<span class=\"keyword\">snapshot</span>, <span class=\"type\">json</span>, key, attributes) {\n    <span class=\"type\">json</span>.attributes = <span class=\"type\">json</span>.attributes || {};\n    this._super(<span class=\"keyword\">snapshot</span>, <span class=\"type\">json</span>.attributes, key, attributes);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeAttribute",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "attribute",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1153,
          "description": "<html><head></head><body><p><code>serializeBelongsTo</code> can be used to customize how <code>DS.belongsTo</code>\nproperties are serialized.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS from <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serializeBelongsTo: <span class=\"keyword\">function</span><span class=\"built_in\">(snapshot</span>, json, relationship) {\n    var<span class=\"built_in\"> key</span> = relationship<span class=\"built_in\">.key</span>;\n\n    var belongsTo =<span class=\"built_in\"> snapshot</span>.belongsTo<span class=\"built_in\">(key</span>);\n\n   <span class=\"built_in\"> key</span> = this.keyForRelationship ? this.keyForRelationship<span class=\"built_in\">(key</span>, <span class=\"string\">&quot;belongsTo&quot;</span>, <span class=\"string\">&quot;serialize&quot;</span>) :<span class=\"built_in\"> key</span>;\n\n    json<span class=\"built_in\">[key</span>] = Ember.isNone(belongsTo) ? belongsTo : belongsTo.record.toJSON();\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeBelongsTo",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1206,
          "description": "<html><head></head><body><p><code>serializeHasMany</code> can be used to customize how <code>DS.hasMany</code>\nproperties are serialized.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"variable constant_\">DS</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"variable constant_\">DS</span>.<span class=\"property\">JSONSerializer</span>.<span class=\"title function_\">extend</span>({\n  <span class=\"attr\">serializeHasMany</span>: <span class=\"keyword\">function</span>(<span class=\"params\">snapshot, json, relationship</span>) {\n    <span class=\"keyword\">var</span> key = relationship.<span class=\"property\">key</span>;\n    <span class=\"keyword\">if</span> (key === <span class=\"string\">&apos;comments&apos;</span>) {\n      <span class=\"keyword\">return</span>;\n    } <span class=\"keyword\">else</span> {\n      <span class=\"variable language_\">this</span>.<span class=\"property\">_super</span>.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, <span class=\"variable language_\">arguments</span>);\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializeHasMany",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1255,
          "description": "<html><head></head><body><p>You can use this method to customize how polymorphic objects are\nserialized. Objects are considered to be polymorphic if\n<code>{ polymorphic: true }</code> is pass as the second argument to the\n<code>DS.belongsTo</code> function.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/comment.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS from <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  serializePolymorphicType: <span class=\"keyword\">function</span><span class=\"built_in\">(snapshot</span>, json, relationship) {\n    var<span class=\"built_in\"> key</span> = relationship<span class=\"built_in\">.key</span>,\n        belongsTo =<span class=\"built_in\"> snapshot</span>.belongsTo<span class=\"built_in\">(key</span>);\n   <span class=\"built_in\"> key</span> = this.keyForAttribute ? this.keyForAttribute<span class=\"built_in\">(key</span>, <span class=\"string\">&quot;serialize&quot;</span>) :<span class=\"built_in\"> key</span>;\n\n    <span class=\"keyword\">if</span> (Ember.isNone(belongsTo)) {\n      json<span class=\"built_in\">[key</span> + <span class=\"string\">&quot;_type&quot;</span>] = null;\n    } <span class=\"keyword\">else</span> {\n      json<span class=\"built_in\">[key</span> + <span class=\"string\">&quot;_type&quot;</span>] = belongsTo.modelName;\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializePolymorphicType",
          "params": [
            {
              "name": "snapshot",
              "description": "",
              "type": "DS.Snapshot"
            },
            {
              "name": "json",
              "description": "",
              "type": "Object"
            },
            {
              "name": "relationship",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1288,
          "description": "<html><head></head><body><p><code>extractMeta</code> is used to deserialize any meta information in the\nadapter payload. By default Ember Data expects meta information to\nbe located on the <code>meta</code> property of the payload object.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"variable constant_\">DS</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"variable constant_\">DS</span>.<span class=\"property\">JSONSerializer</span>.<span class=\"title function_\">extend</span>({\n  <span class=\"attr\">extractMeta</span>: <span class=\"keyword\">function</span>(<span class=\"params\">store, typeClass, payload</span>) {\n    <span class=\"keyword\">if</span> (payload &amp;&amp; payload.<span class=\"title function_\">hasOwnProperty</span>(<span class=\"string\">&apos;_pagination&apos;</span>)) {\n      <span class=\"keyword\">let</span> meta = payload.<span class=\"property\">_pagination</span>;\n      <span class=\"keyword\">delete</span> payload.<span class=\"property\">_pagination</span>;\n      <span class=\"keyword\">return</span> meta;\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "extractMeta",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "modelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1322,
          "description": "<html><head></head><body><p><code>extractErrors</code> is used to extract model errors when a call\nto <code>DS.Model#save</code> fails with an <code>InvalidError</code>. By default\nEmber Data expects error information to be located on the <code>errors</code>\nproperty of the payload object.</p>\n<p>This serializer expects this <code>errors</code> object to be an Array similar\nto the following, compliant with the JSON-API specification:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"comment\">&quot;errors&quot;</span>: [\n    {\n      <span class=\"comment\">&quot;detail&quot;</span>: <span class=\"comment\">&quot;This username is already taken!&quot;</span>,\n      <span class=\"comment\">&quot;source&quot;</span>: {\n        <span class=\"comment\">&quot;pointer&quot;</span>: <span class=\"comment\">&quot;data/attributes/username&quot;</span>\n      }\n    }, {\n      <span class=\"comment\">&quot;detail&quot;</span>: <span class=\"comment\">&quot;Doesn&apos;t look like a valid email.&quot;</span>,\n      <span class=\"comment\">&quot;source&quot;</span>: {\n        <span class=\"comment\">&quot;pointer&quot;</span>: <span class=\"comment\">&quot;data/attributes/email&quot;</span>\n      }\n    }\n  ]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The key <code>detail</code> provides a textual description of the problem.\nAlternatively, the key <code>title</code> can be used for the same purpose.</p>\n<p>The nested keys <code>source.pointer</code> detail which specific element\nof the request data was invalid.</p>\n<p>Note that JSON-API also allows for object-level errors to be placed\nin an object with pointer <code>data</code>, signifying that the problem\ncannot be traced to a specific attribute:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"string\">&quot;errors&quot;</span>: [\n    {\n      <span class=\"string\">&quot;detail&quot;</span>: <span class=\"string\">&quot;Some generic non property error message&quot;</span>,\n      <span class=\"string\">&quot;source&quot;</span>: {\n        <span class=\"string\">&quot;pointer&quot;</span>: <span class=\"string\">&quot;data&quot;</span>\n      }\n    }\n  ]\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>When turn into a <code>DS.Errors</code> object, you can read these errors\nthrough the property <code>base</code>:</p>\n<div class=\"highlight handlebars\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"template-tag\">{{#<span class=\"name\"><span class=\"built_in\">each</span></span> model.errors.base <span class=\"keyword\">as</span> |error|}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>\n    </span><span class=\"template-variable\">{{<span class=\"name\">error.message</span>}}</span><span class=\"language-xml\">\n  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n</span><span class=\"template-tag\">{{/<span class=\"name\"><span class=\"built_in\">each</span></span>}}</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Example of alternative implementation, overriding the default\nbehavior to deal with a different format of errors:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"variable constant_\">DS</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"variable constant_\">DS</span>.<span class=\"property\">JSONSerializer</span>.<span class=\"title function_\">extend</span>({\n  <span class=\"attr\">extractErrors</span>: <span class=\"keyword\">function</span>(<span class=\"params\">store, typeClass, payload, id</span>) {\n    <span class=\"keyword\">if</span> (payload &amp;&amp; <span class=\"keyword\">typeof</span> payload === <span class=\"string\">&apos;object&apos;</span> &amp;&amp; payload.<span class=\"property\">_problems</span>) {\n      payload = payload.<span class=\"property\">_problems</span>;\n      <span class=\"variable language_\">this</span>.<span class=\"title function_\">normalizeErrors</span>(typeClass, payload);\n    }\n    <span class=\"keyword\">return</span> payload;\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "extractErrors",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "(String|Number)"
            }
          ],
          "return": {
            "description": "json The deserialized errors",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1433,
          "description": "<html><head></head><body><p><code>keyForAttribute</code> can be used to define rules for how to convert an\nattribute name in your model to a key in your JSON.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"variable constant_\">DS</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"variable constant_\">DS</span>.<span class=\"property\">RESTSerializer</span>.<span class=\"title function_\">extend</span>({\n  <span class=\"attr\">keyForAttribute</span>: <span class=\"keyword\">function</span>(<span class=\"params\">attr, method</span>) {\n    <span class=\"keyword\">return</span> <span class=\"title class_\">Ember</span>.<span class=\"property\">String</span>.<span class=\"title function_\">underscore</span>(attr).<span class=\"title function_\">toUpperCase</span>();\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "keyForAttribute",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "method",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1458,
          "description": "<html><head></head><body><p><code>keyForRelationship</code> can be used to define a custom key when\nserializing and deserializing relationship properties. By default\n<code>JSONSerializer</code> does not provide an implementation of this method.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/post.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"variable constant_\">DS</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"variable constant_\">DS</span>.<span class=\"property\">JSONSerializer</span>.<span class=\"title function_\">extend</span>({\n  <span class=\"attr\">keyForRelationship</span>: <span class=\"keyword\">function</span>(<span class=\"params\">key, relationship, method</span>) {\n    <span class=\"keyword\">return</span> <span class=\"string\">&apos;rel_&apos;</span> + <span class=\"title class_\">Ember</span>.<span class=\"property\">String</span>.<span class=\"title function_\">underscore</span>(key);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "keyForRelationship",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "typeClass",
              "description": "",
              "type": "String"
            },
            {
              "name": "method",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1485,
          "description": "<html><head></head><body><p><code>keyForLink</code> can be used to define a custom key when deserializing link\nproperties.</p>\n</body></html>",
          "itemtype": "method",
          "name": "keyForLink",
          "params": [
            {
              "name": "key",
              "description": "",
              "type": "String"
            },
            {
              "name": "kind",
              "description": "`belongsTo` or `hasMany`",
              "type": "String"
            }
          ],
          "return": {
            "description": "normalized key",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1500,
          "itemtype": "method",
          "name": "transformFor",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "attributeType",
              "description": "",
              "type": "String"
            },
            {
              "name": "skipAssertion",
              "description": "",
              "type": "Boolean"
            }
          ],
          "return": {
            "description": "transform",
            "type": "DS.Transform"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 1520,
          "itemtype": "method",
          "name": "modelNameFromPayloadType",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "type",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "the model's modelName",
            "type": "String"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializer.js",
          "line": 40,
          "description": "<html><head></head><body><p>The <code>normalizeResponse</code> method is used to normalize a payload from the\nserver to a JSON-API Document.</p>\n<p><a href=\"http://jsonapi.org/format/#document-structure\">http://jsonapi.org/format/#document-structure</a></p>\n</body></html>",
          "since": "1.13.0",
          "itemtype": "method",
          "name": "normalizeResponse",
          "params": [
            {
              "name": "store",
              "description": "",
              "type": "DS.Store"
            },
            {
              "name": "primaryModelClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "id",
              "description": "",
              "type": "String|Number"
            },
            {
              "name": "requestType",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "JSON-API Document",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        },
        {
          "file": "addon/serializer.js",
          "line": 57,
          "description": "<html><head></head><body><p>The <code>serialize</code> method is used when a record is saved in order to convert\nthe record into the form that your external data source expects.</p>\n<p><code>serialize</code> takes an optional <code>options</code> hash with a single option:</p>\n<ul>\n<li><code>includeId</code>: If this is <code>true</code>, <code>serialize</code> should include the ID\nin the serialized object it builds.</li>\n</ul>\n</body></html>",
          "itemtype": "method",
          "name": "serialize",
          "params": [
            {
              "name": "record",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object",
              "optional": true
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        },
        {
          "file": "addon/serializer.js",
          "line": 73,
          "description": "<html><head></head><body><p>The <code>normalize</code> method is used to convert a payload received from your\nexternal data source into the normalized form <code>store.push()</code> expects. You\nshould override this method, munge the hash and return the normalized\npayload.</p>\n</body></html>",
          "itemtype": "method",
          "name": "normalize",
          "params": [
            {
              "name": "typeClass",
              "description": "",
              "type": "DS.Model"
            },
            {
              "name": "hash",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "addon/serializers/json.js",
          "line": 87,
          "description": "<html><head></head><body><p>The <code>primaryKey</code> is used when serializing and deserializing\ndata. Ember Data always uses the <code>id</code> property to store the id of\nthe record. The external source may not always follow this\nconvention. In these cases it is useful to override the\n<code>primaryKey</code> property to match the <code>primaryKey</code> of your external\nstore.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DS.JSONSerializer.extend({\n  primaryKey: <span class=\"string\">&apos;_id&apos;</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "property",
          "name": "primaryKey",
          "type": "{String}",
          "default": "'id'",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializers/json.js",
          "line": 111,
          "description": "<html><head></head><body><p>The <code>attrs</code> object can be used to declare a simple mapping between\nproperty names on <code>DS.Model</code> records and payload keys in the\nserialized JSON object representing the record. An object with the\nproperty <code>key</code> can also be used to designate the attribute&apos;s key on\nthe response payload.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/person.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>import DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.Model.<span class=\"title function_ invoke__\">extend</span>({\n  <span class=\"attr\">firstName</span>: DS.<span class=\"title function_ invoke__\">attr</span>(<span class=\"string\">&apos;string&apos;</span>),\n  <span class=\"attr\">lastName</span>: DS.<span class=\"title function_ invoke__\">attr</span>(<span class=\"string\">&apos;string&apos;</span>),\n  <span class=\"attr\">occupation</span>: DS.<span class=\"title function_ invoke__\">attr</span>(<span class=\"string\">&apos;string&apos;</span>),\n  <span class=\"attr\">admin</span>: DS.<span class=\"title function_ invoke__\">attr</span>(<span class=\"string\">&apos;boolean&apos;</span>)\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/person.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>import DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.<span class=\"title function_ invoke__\">extend</span>({\n  <span class=\"attr\">attrs</span>: {\n    <span class=\"attr\">admin</span>: <span class=\"string\">&apos;is_admin&apos;</span>,\n    <span class=\"attr\">occupation</span>: { <span class=\"attr\">key</span>: <span class=\"string\">&apos;career&apos;</span> }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>You can also remove attributes by setting the <code>serialize</code> key to\n<code>false</code> in your mapping object.</p>\n<p>Example</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/person.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>import DS <span class=\"keyword\">from</span> <span class=\"string\">&apos;ember-data&apos;</span>;\n\nexport <span class=\"keyword\">default</span> DS.JSONSerializer.<span class=\"title function_ invoke__\">extend</span>({\n  <span class=\"attr\">attrs</span>: {\n    <span class=\"attr\">admin</span>: { <span class=\"attr\">serialize</span>: <span class=\"literal\">false</span> },\n    <span class=\"attr\">occupation</span>: { <span class=\"attr\">key</span>: <span class=\"string\">&apos;career&apos;</span> }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>When serialized:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"punctuation\">{</span>\n  <span class=\"attr\">&quot;firstName&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Harry&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"attr\">&quot;lastName&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Houdini&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"attr\">&quot;career&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;magician&quot;</span>\n<span class=\"punctuation\">}</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Note that the <code>admin</code> is now not included in the payload.</p>\n</body></html>",
          "itemtype": "property",
          "name": "attrs",
          "type": "{Object}",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS"
        },
        {
          "file": "addon/serializer.js",
          "line": 29,
          "description": "<html><head></head><body><p>The <code>store</code> property is the application&apos;s <code>store</code> that contains all records.\nIt&apos;s injected as a service.\nIt can be used to push records from a non flat data structure server\nresponse.</p>\n</body></html>",
          "itemtype": "property",
          "name": "store",
          "type": "{DS.Store}",
          "access": "public",
          "tagname": "",
          "class": "DS.JSONSerializer",
          "module": "ember-data",
          "namespace": "DS",
          "inherited": true,
          "inheritedFrom": "DS.Serializer"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": {
          "id": "ember-data-2.7.0-DS.Serializer",
          "type": "class"
        }
      },
      "descendants": {
        "data": [
          {
            "type": "class",
            "id": "ember-data-2.7.0-DS.JSONAPISerializer"
          },
          {
            "type": "class",
            "id": "ember-data-2.7.0-DS.RESTSerializer"
          }
        ]
      },
      "module": {
        "data": {
          "id": "ember-data-2.7.0-ember-data",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-2.7.0",
          "type": "project-version"
        }
      }
    }
  }
}