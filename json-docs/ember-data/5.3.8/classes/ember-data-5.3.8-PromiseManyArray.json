{
  "data": {
    "id": "ember-data-5.3.8-PromiseManyArray",
    "type": "class",
    "attributes": {
      "name": "PromiseManyArray",
      "shortname": "PromiseManyArray",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/model",
      "namespace": "",
      "file": "../model/src/-private/promise-many-array.ts",
      "line": 18,
      "description": "<html><head></head><body><p>This class is returned as the result of accessing an async hasMany relationship\non an instance of a Model extending from <code>@ember-data/model</code>.</p>\n<p>A PromiseManyArray is an iterable proxy that allows templates to consume related\nManyArrays and update once their contents are no longer pending.</p>\n<p>In your JS code you should resolve the promise first.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre>const comments <span class=\"operator\">=</span> await post.comments<span class=\"comment\">;</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 59,
          "description": "<html><head></head><body><p>Iterate the proxied content. Called by the glimmer iterator in #each\nWe do not guarantee that forEach will always be available. This\nmay eventually be made to use Symbol.Iterator once glimmer supports it.</p>\n</body></html>",
          "itemtype": "method",
          "name": "forEach",
          "params": [
            {
              "name": "cb",
              "description": ""
            }
          ],
          "return": {
            "description": ""
          },
          "access": "private",
          "tagname": "",
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 75,
          "description": "<html><head></head><body><p>Reload the relationship</p>\n</body></html>",
          "itemtype": "method",
          "name": "reload",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "options",
              "description": ""
            }
          ],
          "return": {
            "description": ""
          },
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 119,
          "description": "<html><head></head><body><p>chain this promise</p>\n</body></html>",
          "itemtype": "method",
          "name": "then",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "success",
              "description": ""
            },
            {
              "name": "fail",
              "description": ""
            }
          ],
          "return": {
            "description": "Promise"
          },
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 132,
          "description": "<html><head></head><body><p>catch errors thrown by this promise</p>\n</body></html>",
          "itemtype": "method",
          "name": "catch",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "callback",
              "description": ""
            }
          ],
          "return": {
            "description": "Promise"
          },
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 143,
          "description": "<html><head></head><body><p>run cleanup after this promise completes</p>\n</body></html>",
          "itemtype": "method",
          "name": "finally",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "callback",
              "description": ""
            }
          ],
          "return": {
            "description": "Promise"
          },
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 44,
          "description": "<html><head></head><body><p>Retrieve the length of the content</p>\n</body></html>",
          "itemtype": "property",
          "name": "length",
          "access": "public",
          "tagname": "",
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 90,
          "description": "<html><head></head><body><p>Whether the loading promise is still pending</p>\n</body></html>",
          "itemtype": "property",
          "name": "isPending",
          "type": "Boolean",
          "access": "public",
          "tagname": "",
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 97,
          "description": "<html><head></head><body><p>Whether the loading promise rejected</p>\n</body></html>",
          "itemtype": "property",
          "name": "isRejected",
          "type": "Boolean",
          "access": "public",
          "tagname": "",
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 104,
          "description": "<html><head></head><body><p>Whether the loading promise succeeded</p>\n</body></html>",
          "itemtype": "property",
          "name": "isFulfilled",
          "type": "Boolean",
          "access": "public",
          "tagname": "",
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 111,
          "description": "<html><head></head><body><p>Whether the loading promise completed (resolved or rejected)</p>\n</body></html>",
          "itemtype": "property",
          "name": "isSettled",
          "type": "Boolean",
          "access": "public",
          "tagname": "",
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 165,
          "description": "<html><head></head><body><p>Retrieve the links for this relationship</p>\n</body></html>",
          "itemtype": "property",
          "name": "links",
          "access": "public",
          "tagname": "",
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        },
        {
          "file": "../packages/model/src/-private/promise-many-array.ts",
          "line": 175,
          "description": "<html><head></head><body><p>Retrieve the meta for this relationship</p>\n</body></html>",
          "itemtype": "property",
          "name": "meta",
          "access": "public",
          "tagname": "",
          "class": "PromiseManyArray",
          "module": "@ember-data/model"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-5.3.8-@ember-data/model",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.3.8",
          "type": "project-version"
        }
      }
    }
  }
}