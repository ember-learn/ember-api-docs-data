{
  "data": {
    "id": "ember-data-5.3.8-@ember-data/request-utils",
    "type": "class",
    "attributes": {
      "name": "@ember-data/request-utils",
      "shortname": "@ember-data/request-utils",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/request-utils",
      "namespace": "",
      "methods": [
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 67,
          "description": "<html><head></head><body><p>Sets the global configuration for <code>buildBaseURL</code>\nfor host and namespace values for the application.</p>\n<p>These values may still be overridden by passing\nthem to buildBaseURL directly.</p>\n<p>This method may be called as many times as needed.\nhost values of <code>''</code> or <code>'/'</code> are equivalent.</p>\n<p>Except for the value of <code>/</code> as host, host should not\nend with <code>/</code>.</p>\n<p>namespace should not start or end with a <code>/</code>.</p>\n<div class=\"highlight typescript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">type</span> <span class=\"title class_\">BuildURLConfig</span> <span class=\"operator\">=</span> {\n  host<span class=\"operator\">:</span> <span class=\"type\">string</span>;\n  <span class=\"keyword\">namespace</span><span class=\"operator\">:</span> <span class=\"type\">string</span>'\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Example:</p>\n<div class=\"highlight typescript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n</pre></td>\n              <td class=\"code\"><pre>import { setBuildURLConfig } <span class=\"keyword\">from</span> <span class=\"string\">'@ember-data/request-utils'</span>;\n\n<span class=\"title function_ invoke__\">setBuildURLConfig</span>({\n  <span class=\"attr\">host</span>: <span class=\"string\">'https://api.example.com'</span>,\n  <span class=\"attr\">namespace</span>: <span class=\"string\">'api/v1'</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "setBuildURLConfig",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "config",
              "description": "",
              "type": "BuildURLConfig"
            }
          ],
          "return": {
            "description": "void"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 244,
          "description": "<html><head></head><body><p>Builds a URL for a request based on the provided options.\nDoes not include support for building query params (see <code>buildQueryParams</code>)\nso that it may be composed cleanly with other query-params strategies.</p>\n<p>Usage:</p>\n<div class=\"highlight typescript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre>import { buildBaseURL } <span class=\"keyword\">from</span> <span class=\"string\">'@ember-data/request-utils'</span>;\n\n<span class=\"keyword\">const</span> <span class=\"variable constant_\">url</span> = <span class=\"title function_ invoke__\">buildBaseURL</span>({\n  <span class=\"attr\">host</span>: <span class=\"string\">'https://api.example.com'</span>,\n  <span class=\"attr\">namespace</span>: <span class=\"string\">'api/v1'</span>,\n  <span class=\"attr\">resourcePath</span>: <span class=\"string\">'emberDevelopers'</span>,\n  <span class=\"attr\">op</span>: <span class=\"string\">'query'</span>,\n  <span class=\"attr\">identifier</span>: { <span class=\"attr\">type</span>: <span class=\"string\">'ember-developer'</span> }\n});\n\n<span class=\"comment\">// =&gt; 'https://api.example.com/api/v1/emberDevelopers'</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>On the surface this may seem like a lot of work to do something simple, but\nit is designed to be composable with other utilities and interfaces that the\naverage product engineer will never need to see or use.</p>\n<p>A few notes:</p>\n<ul>\n<li><code>resourcePath</code> is optional, but if it is not provided, <code>identifier.type</code> will be used.</li>\n<li><code>host</code> and <code>namespace</code> are optional, but if they are not provided, the values globally\n configured via <code>setBuildURLConfig</code> will be used.</li>\n<li><code>op</code> is required and must be one of the following:<ul>\n<li>'findRecord' 'query' 'findMany' 'findRelatedCollection' 'findRelatedRecord'` 'createRecord' 'updateRecord' 'deleteRecord'</li>\n</ul>\n</li>\n<li>Depending on the value of <code>op</code>, <code>identifier</code> or <code>identifiers</code> will be required.</li>\n</ul>\n</body></html>",
          "itemtype": "method",
          "name": "buildBaseURL",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "urlOptions",
              "description": ""
            }
          ],
          "return": {
            "description": "string"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 401,
          "description": "<html><head></head><body><p>filter out keys of an object that have falsy values or point to empty arrays\nreturning a new object with only those keys that have truthy values / non-empty arrays</p>\n</body></html>",
          "itemtype": "method",
          "name": "filterEmpty",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "source",
              "description": "object to filter keys with empty values from",
              "type": "Record<string, Serializable>"
            }
          ],
          "return": {
            "description": "A new object with the keys that contained empty values removed",
            "type": "Record<string, Serializable>"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 426,
          "description": "<html><head></head><body><p>Sorts query params by both key and value returning a new URLSearchParams\nobject with the keys inserted in sorted order.</p>\n<p>Treats <code>included</code> specially, splicing it into an array if it is a string and sorting the array.</p>\n<p>Options:</p>\n<ul>\n<li>arrayFormat: 'bracket' | 'indices' | 'repeat' | 'comma'</li>\n</ul>\n<p>'bracket': appends [] to the key for every value e.g. <code>&amp;ids[]=1&amp;ids[]=2</code>\n'indices': appends [i] to the key for every value e.g. <code>&amp;ids[0]=1&amp;ids[1]=2</code>\n'repeat': appends the key for every value e.g. <code>&amp;ids=1&amp;ids=2</code>\n'comma' (default): appends the key once with a comma separated list of values e.g. <code>&amp;ids=1,2</code></p>\n</body></html>",
          "itemtype": "method",
          "name": "sortQueryParams",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "params",
              "description": "",
              "type": "URLSearchParams | object"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "A URLSearchParams with keys inserted in sorted order",
            "type": "URLSearchParams"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 508,
          "description": "<html><head></head><body><p>Sorts query params by both key and value, returning a query params string</p>\n<p>Treats <code>included</code> specially, splicing it into an array if it is a string and sorting the array.</p>\n<p>Options:</p>\n<ul>\n<li>arrayFormat: 'bracket' | 'indices' | 'repeat' | 'comma'</li>\n</ul>\n<p>'bracket': appends [] to the key for every value e.g. <code>ids[]=1&amp;ids[]=2</code>\n'indices': appends [i] to the key for every value e.g. <code>ids[0]=1&amp;ids[1]=2</code>\n'repeat': appends the key for every value e.g. <code>ids=1&amp;ids=2</code>\n'comma' (default): appends the key once with a comma separated list of values e.g. <code>ids=1,2</code></p>\n</body></html>",
          "itemtype": "method",
          "name": "buildQueryParams",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "params",
              "description": "",
              "type": "URLSearchParams | object"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object",
              "optional": true
            }
          ],
          "return": {
            "description": "A sorted query params string without the leading `?`",
            "type": "String"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 553,
          "description": "<html><head></head><body><p>Parses a string Cache-Control header value into an object with the following structure:</p>\n<div class=\"highlight typescript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">interface</span> <span class=\"title class_\">CacheControlValue</span> {\nimmutable?: <span class=\"built_in\">boolean</span>;\n<span class=\"string\">'max-age'</span>?: <span class=\"built_in\">number</span>;\n<span class=\"string\">'must-revalidate'</span>?: <span class=\"built_in\">boolean</span>;\n<span class=\"string\">'must-understand'</span>?: <span class=\"built_in\">boolean</span>;\n<span class=\"string\">'no-cache'</span>?: <span class=\"built_in\">boolean</span>;\n<span class=\"string\">'no-store'</span>?: <span class=\"built_in\">boolean</span>;\n<span class=\"string\">'no-transform'</span>?: <span class=\"built_in\">boolean</span>;\n<span class=\"string\">'only-if-cached'</span>?: <span class=\"built_in\">boolean</span>;\n<span class=\"keyword\">private</span>?: <span class=\"built_in\">boolean</span>;\n<span class=\"string\">'proxy-revalidate'</span>?: <span class=\"built_in\">boolean</span>;\n<span class=\"keyword\">public</span>?: <span class=\"built_in\">boolean</span>;\n<span class=\"string\">'s-maxage'</span>?: <span class=\"built_in\">number</span>;\n<span class=\"string\">'stale-if-error'</span>?: <span class=\"built_in\">number</span>;\n<span class=\"string\">'stale-while-revalidate'</span>?: <span class=\"built_in\">number</span>;\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "parseCacheControl",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "header",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "CacheControlValue"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-5.3.8-@ember-data/request-utils",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.3.8",
          "type": "project-version"
        }
      }
    }
  }
}