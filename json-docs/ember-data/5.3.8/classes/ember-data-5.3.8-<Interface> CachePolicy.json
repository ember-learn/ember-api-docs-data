{
  "data": {
    "id": "ember-data-5.3.8-<Interface> CachePolicy",
    "type": "class",
    "attributes": {
      "name": "<Interface> CachePolicy",
      "shortname": "<Interface> CachePolicy",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/store",
      "namespace": "",
      "file": "../store/src/-private/cache-handler.ts",
      "line": 30,
      "description": "<html><head></head><body><p>A service which an application may provide to the store via\nthe store's <code>lifetimes</code> property to configure the behavior\nof the CacheHandler.</p>\n<p>The default behavior for request lifetimes is to never expire\nunless manually refreshed via <code>cacheOptions.reload</code> or <code>cacheOptions.backgroundReload</code>.</p>\n<p>Implementing this service allows you to programatically define\nwhen a request should be considered expired.</p>\n</body></html>",
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "../packages/store/src/-private/cache-handler.ts",
          "line": 45,
          "description": "<html><head></head><body><p>Invoked to determine if the request may be fulfilled from cache\nif possible.</p>\n<p>Note, this is only invoked if the request has a cache-key.</p>\n<p>If no cache entry is found or the entry is hard expired,\nthe request will be fulfilled from the configured request handlers\nand the cache will be updated before returning the response.</p>\n</body></html>",
          "itemtype": "method",
          "name": "isHardExpired",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": "",
              "type": "StableDocumentIdentifier"
            },
            {
              "name": "store",
              "description": "",
              "type": "Store"
            }
          ],
          "return": {
            "description": "true if the request is considered hard expired",
            "type": "Boolean"
          },
          "class": "<Interface> CachePolicy",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/cache-handler.ts",
          "line": 62,
          "description": "<html><head></head><body><p>Invoked if <code>isHardExpired</code> is false to determine if the request\nshould be update behind the scenes if cache data is already available.</p>\n<p>Note, this is only invoked if the request has a cache-key.</p>\n<p>If true, the request will be fulfilled from cache while a backgrounded\nrequest is made to update the cache via the configured request handlers.</p>\n</body></html>",
          "itemtype": "method",
          "name": "isSoftExpired",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "identifier",
              "description": "",
              "type": "StableDocumentIdentifier"
            },
            {
              "name": "store",
              "description": "",
              "type": "Store"
            }
          ],
          "return": {
            "description": "true if the request is considered soft expired",
            "type": "Boolean"
          },
          "class": "<Interface> CachePolicy",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/cache-handler.ts",
          "line": 79,
          "description": "<html><head></head><body><p>Invoked when a request will be sent to the configured request handlers.\nThis is invoked for both foreground and background requests.</p>\n<p>Note, this is invoked regardless of whether the request has a cache-key.</p>\n</body></html>",
          "itemtype": "method",
          "name": "willRequest [Optional]",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "request",
              "description": "",
              "type": "ImmutableRequestInfo"
            },
            {
              "name": "identifier",
              "description": "",
              "type": "StableDocumentIdentifier | null"
            },
            {
              "name": "store",
              "description": "",
              "type": "Store"
            }
          ],
          "return": {
            "description": "",
            "type": "Void"
          },
          "class": "<Interface> CachePolicy",
          "module": "@ember-data/store"
        },
        {
          "file": "../packages/store/src/-private/cache-handler.ts",
          "line": 94,
          "description": "<html><head></head><body><p>Invoked when a request has been fulfilled from the configured request handlers.\nThis is invoked for both foreground and background requests once the cache has\nbeen updated.</p>\n<p>Note, this is invoked regardless of whether the request has a cache-key.</p>\n</body></html>",
          "itemtype": "method",
          "name": "didRequest [Optional]",
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "request",
              "description": "",
              "type": "ImmutableRequestInfo"
            },
            {
              "name": "response",
              "description": "",
              "type": "ImmutableResponse"
            },
            {
              "name": "identifier",
              "description": "",
              "type": "StableDocumentIdentifier | null"
            },
            {
              "name": "store",
              "description": "",
              "type": "Store"
            }
          ],
          "return": {
            "description": "",
            "type": "Void"
          },
          "class": "<Interface> CachePolicy",
          "module": "@ember-data/store"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-5.3.8-@ember-data/store",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.3.8",
          "type": "project-version"
        }
      }
    }
  }
}