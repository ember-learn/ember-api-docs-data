{
  "data": {
    "id": "ember-data-5.3.8-NotFoundError",
    "type": "class",
    "attributes": {
      "name": "NotFoundError",
      "shortname": "NotFoundError",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/adapter/error",
      "namespace": "",
      "file": "../adapter/src/error.js",
      "line": 286,
      "description": "A `NotFoundError` equates to a HTTP `404 Not Found` response status.\nIt is used by an adapter to signal that a request to the external API\nwas rejected because the resource could not be found on the API.\n\nAn example use case would be to detect if the user has entered a route\nfor a specific model that does not exist. For example:\n\n```js {data-filename=app/routes/post.js}\nimport { NotFoundError } from '@ember-data/adapter/error';\n\nexport default class PostRoute extends Route {\n  @service store;\n  model(params) {\n    return this.store.findRecord('post', params.post_id);\n  }\n  @action\n  error(error, transition) {\n    if (error instanceof NotFoundError) {\n      // redirect to a list of all posts instead\n      this.transitionTo('posts');\n    } else {\n      // otherwise let the error bubble\n      return true;\n    }\n  }\n}\n```",
      "access": "public",
      "tagname": "",
      "extends": "AdapterError",
      "methods": [],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": {
          "id": "ember-data-5.3.8-AdapterError",
          "type": "class"
        }
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-5.3.8-@ember-data/adapter/error",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.3.8",
          "type": "project-version"
        }
      }
    }
  }
}