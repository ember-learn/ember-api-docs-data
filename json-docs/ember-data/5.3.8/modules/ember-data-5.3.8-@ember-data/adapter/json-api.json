{
  "data": {
    "id": "ember-data-5.3.8-@ember-data/adapter/json-api",
    "type": "module",
    "attributes": {
      "name": "@ember-data/adapter/json-api",
      "submodules": {},
      "elements": {},
      "fors": {},
      "namespaces": {},
      "tag": "main",
      "file": "../adapter/src/json-api.ts",
      "line": 16,
      "description": "<html><head></head><body><h2 id=\"overview\">Overview</h2>\n<blockquote style=\"margin: 1em; padding: .1em 1em .1em 1em; border-left: solid 1em #E34C32; background: #e0e0e0;\">\n<p>\n  ⚠️ <strong>This is LEGACY documentation</strong> for a feature that is no longer encouraged to be used.\n  If starting a new app or thinking of implementing a new adapter, consider writing a\n  <a href=\"/ember-data/release/classes/%3CInterface%3E%20Handler\">Handler</a> instead to be used with the <a href=\"https://github.com/emberjs/data/tree/main/packages/request#readme\">RequestManager</a>\n</p>\n</blockquote>\n\n<p>The <code>JSONAPIAdapter</code> is an adapter whichtransforms the store's\nrequests into HTTP requests that follow the <a href=\"http://jsonapi.org/format/\">JSON API format</a>.</p>\n<h2 id=\"json-api-conventions\">JSON API Conventions</h2>\n<p>The JSONAPIAdapter uses JSON API conventions for building the URL\nfor a record and selecting the HTTP verb to use with a request. The\nactions you can take on a record map onto the following URLs in the\nJSON API adapter:</p>\n<table>\n<tbody><tr>\n  <th>\n    Action\n  </th>\n  <th>\n    HTTP Verb\n  </th>\n  <th>\n    URL\n  </th>\n</tr>\n<tr>\n  <th>\n    `store.findRecord('post', 123)`\n  </th>\n  <td>\n    GET\n  </td>\n  <td>\n    /posts/123\n  </td>\n</tr>\n<tr>\n  <th>\n    `store.findAll('post')`\n  </th>\n  <td>\n    GET\n  </td>\n  <td>\n    /posts\n  </td>\n</tr>\n<tr>\n  <th>\n    Update `postRecord.save()`\n  </th>\n  <td>\n    PATCH\n  </td>\n  <td>\n    /posts/123\n  </td>\n</tr>\n<tr>\n  <th>\n    Create `store.createRecord('post').save()`\n  </th>\n  <td>\n    POST\n  </td>\n  <td>\n    /posts\n  </td>\n</tr>\n<tr>\n  <th>\n    Delete `postRecord.destroyRecord()`\n  </th>\n  <td>\n    DELETE\n  </td>\n  <td>\n    /posts/123\n  </td>\n</tr>\n</tbody></table>\n\n<h2 id=\"success-and-failure\">Success and failure</h2>\n<p>The JSONAPIAdapter will consider a success any response with a\nstatus code of the 2xx family (\"Success\"), as well as 304 (\"Not\nModified\"). Any other status code will be considered a failure.</p>\n<p>On success, the request promise will be resolved with the full\nresponse payload.</p>\n<p>Failed responses with status code 422 (\"Unprocessable Entity\") will\nbe considered \"invalid\". The response will be discarded, except for\nthe <code>errors</code> key. The request promise will be rejected with a\n<code>InvalidError</code>. This error object will encapsulate the saved\n<code>errors</code> value.</p>\n<p>Any other status codes will be treated as an adapter error. The\nrequest promise will be rejected, similarly to the invalid case,\nbut with an instance of <code>AdapterError</code> instead.</p>\n<h3 id=\"endpoint-path-customization\">Endpoint path customization</h3>\n<p>Endpoint paths can be prefixed with a <code>namespace</code> by setting the\nnamespace property on the adapter:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">JSONAPIAdapter</span> from '<span class=\"meta\">@ember</span>-data/adapter/json-api';\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">JSONAPIAdapter</span> </span>{\n  namespace = 'api/<span class=\"number\">1</span>';\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Requests for the <code>person</code> model would now target <code>/api/1/people/1</code>.</p>\n<h3 id=\"host-customization\">Host customization</h3>\n<p>An adapter can target other hosts by setting the <code>host</code> property.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/adapters/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">JSONAPIAdapter</span> from '<span class=\"meta\">@ember</span>-data/adapter/json-api';\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">JSONAPIAdapter</span> </span>{\n  host = 'https:<span class=\"comment\">//api.example.com';</span>\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Requests for the <code>person</code> model would now target\n<code>https://api.example.com/people/1</code>.</p>\n</body></html>",
      "since": "1.13.0",
      "itemtype": "main",
      "parent": null,
      "publicclasses": [
        "JSONAPIAdapter"
      ],
      "privateclasses": [],
      "staticfunctions": {},
      "allstaticfunctions": {},
      "version": "5.3.8"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.3.8",
          "type": "project-version"
        }
      }
    }
  }
}