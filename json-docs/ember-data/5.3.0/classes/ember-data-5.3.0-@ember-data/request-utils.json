{
  "data": {
    "id": "ember-data-5.3.0-@ember-data/request-utils",
    "type": "class",
    "attributes": {
      "name": "@ember-data/request-utils",
      "shortname": "@ember-data/request-utils",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/request-utils",
      "namespace": "",
      "methods": [
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 60,
          "description": "<html><head></head><body><p>Sets the global configuration for <code>buildBaseURL</code>\nfor host and namespace values for the application.</p>\n<p>These values may still be overridden by passing\nthem to buildBaseURL directly.</p>\n<p>This method may be called as many times as needed</p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre>type BuildURLConfig = {\n  host: <span class=\"built_in\">string</span>;\n  <span class=\"keyword\">namespace</span>: <span class=\"symbol\">string</span>&apos;\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "setBuildURLConfig",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "config",
              "description": "",
              "type": "BuildURLConfig"
            }
          ],
          "return": {
            "description": "void"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 185,
          "description": "<html><head></head><body><p>Builds a URL for a request based on the provided options.\nDoes not include support for building query params (see <code>buildQueryParams</code>)\nso that it may be composed cleanly with other query-params strategies.</p>\n<p>Usage:</p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { buildBaseURL } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/request-utils&apos;</span>;\n\n<span class=\"keyword\">const</span> url = buildBaseURL({\n  host: <span class=\"string\">&apos;https://api.example.com&apos;</span>,\n  <span class=\"keyword\">namespace</span>: &apos;<span class=\"symbol\">api</span>/<span class=\"symbol\">v1</span>&apos;,\n  <span class=\"symbol\">resourcePath</span>: &apos;<span class=\"symbol\">emberDevelopers</span>&apos;,\n  <span class=\"symbol\">op</span>: &apos;<span class=\"symbol\">query</span>&apos;,\n  <span class=\"symbol\">identifier</span>: { type: <span class=\"string\">&apos;ember-developer&apos;</span> }\n});\n\n<span class=\"comment\">// =&gt; &apos;https://api.example.com/api/v1/emberDevelopers&apos;</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>On the surface this may seem like a lot of work to do something simple, but\nit is designed to be composable with other utilities and interfaces that the\naverage product engineer will never need to see or use.</p>\n<p>A few notes:</p>\n<ul>\n<li><code>resourcePath</code> is optional, but if it is not provided, <code>identifier.type</code> will be used.</li>\n<li><code>host</code> and <code>namespace</code> are optional, but if they are not provided, the values globally\n configured via <code>setBuildURLConfig</code> will be used.</li>\n<li><code>op</code> is required and must be one of the following:<ul>\n<li>&apos;findRecord&apos; &apos;query&apos; &apos;findMany&apos; &apos;findRelatedCollection&apos; &apos;findRelatedRecord&apos;` &apos;createRecord&apos; &apos;updateRecord&apos; &apos;deleteRecord&apos;</li>\n</ul>\n</li>\n<li>Depending on the value of <code>op</code>, <code>identifier</code> or <code>identifiers</code> will be required.</li>\n</ul>\n</body></html>",
          "itemtype": "method",
          "name": "buildBaseURL",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "urlOptions",
              "description": ""
            }
          ],
          "return": {
            "description": "string"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 338,
          "description": "<html><head></head><body><p>filter out keys of an object that have falsy values or point to empty arrays\nreturning a new object with only those keys that have truthy values / non-empty arrays</p>\n</body></html>",
          "itemtype": "method",
          "name": "filterEmpty",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "source",
              "description": "object to filter keys with empty values from",
              "type": "Record<string, Serializable>"
            }
          ],
          "return": {
            "description": "A new object with the keys that contained empty values removed",
            "type": "Record<string, Serializable>"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 363,
          "description": "<html><head></head><body><p>Sorts query params by both key and value returning a new URLSearchParams\nobject with the keys inserted in sorted order.</p>\n<p>Treats <code>included</code> specially, splicing it into an array if it is a string and sorting the array.</p>\n<p>Options:</p>\n<ul>\n<li>arrayFormat: &apos;bracket&apos; | &apos;indices&apos; | &apos;repeat&apos; | &apos;comma&apos;</li>\n</ul>\n<p>&apos;bracket&apos;: appends [] to the key for every value e.g. <code>&amp;ids[]=1&amp;ids[]=2</code>\n&apos;indices&apos;: appends [i] to the key for every value e.g. <code>&amp;ids[0]=1&amp;ids[1]=2</code>\n&apos;repeat&apos;: appends the key for every value e.g. <code>&amp;ids=1&amp;ids=2</code>\n&apos;comma&apos; (default): appends the key once with a comma separated list of values e.g. <code>&amp;ids=1,2</code></p>\n</body></html>",
          "itemtype": "method",
          "name": "sortQueryParams",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "params",
              "description": "",
              "type": "URLSearchParams | object"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "A URLSearchParams with keys inserted in sorted order",
            "type": "URLSearchParams"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 445,
          "description": "<html><head></head><body><p>Sorts query params by both key and value, returning a query params string</p>\n<p>Treats <code>included</code> specially, splicing it into an array if it is a string and sorting the array.</p>\n<p>Options:</p>\n<ul>\n<li>arrayFormat: &apos;bracket&apos; | &apos;indices&apos; | &apos;repeat&apos; | &apos;comma&apos;</li>\n</ul>\n<p>&apos;bracket&apos;: appends [] to the key for every value e.g. <code>ids[]=1&amp;ids[]=2</code>\n&apos;indices&apos;: appends [i] to the key for every value e.g. <code>ids[0]=1&amp;ids[1]=2</code>\n&apos;repeat&apos;: appends the key for every value e.g. <code>ids=1&amp;ids=2</code>\n&apos;comma&apos; (default): appends the key once with a comma separated list of values e.g. <code>ids=1,2</code></p>\n</body></html>",
          "itemtype": "method",
          "name": "sortQueryParams",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "params",
              "description": "",
              "type": "URLSearchParams | object"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object",
              "optional": true
            }
          ],
          "return": {
            "description": "A sorted query params string without the leading `?`",
            "type": "String"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        },
        {
          "file": "../packages/request-utils/src/index.ts",
          "line": 488,
          "description": "<html><head></head><body><p>Parses a string Cache-Control header value into an object with the following structure:</p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td>\n              <td class=\"code\"><pre> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">CacheControlValue</span> {</span>\n immutable?: <span class=\"keyword\">boolean</span>;\n <span class=\"string\">&apos;max-age&apos;</span>?: number;\n <span class=\"string\">&apos;must-revalidate&apos;</span>?: <span class=\"keyword\">boolean</span>;\n <span class=\"string\">&apos;must-understand&apos;</span>?: <span class=\"keyword\">boolean</span>;\n <span class=\"string\">&apos;no-cache&apos;</span>?: <span class=\"keyword\">boolean</span>;\n <span class=\"string\">&apos;no-store&apos;</span>?: <span class=\"keyword\">boolean</span>;\n <span class=\"string\">&apos;no-transform&apos;</span>?: <span class=\"keyword\">boolean</span>;\n <span class=\"string\">&apos;only-if-cached&apos;</span>?: <span class=\"keyword\">boolean</span>;\n <span class=\"keyword\">private</span>?: <span class=\"keyword\">boolean</span>;\n <span class=\"string\">&apos;proxy-revalidate&apos;</span>?: <span class=\"keyword\">boolean</span>;\n <span class=\"keyword\">public</span>?: <span class=\"keyword\">boolean</span>;\n <span class=\"string\">&apos;s-maxage&apos;</span>?: number;\n <span class=\"string\">&apos;stale-if-error&apos;</span>?: number;\n <span class=\"string\">&apos;stale-while-revalidate&apos;</span>?: number;\n }</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "parseCacheControl",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "header",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "CacheControlValue"
          },
          "class": "@ember-data/request-utils",
          "module": "@ember-data/request-utils"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-5.3.0-@ember-data/request-utils",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.3.0",
          "type": "project-version"
        }
      }
    }
  }
}