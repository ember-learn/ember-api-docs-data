{
  "data": {
    "id": "ember-data-5.3.0-@ember-data/json-api/request",
    "type": "class",
    "attributes": {
      "name": "@ember-data/json-api/request",
      "shortname": "@ember-data/json-api/request",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember-data/json-api/request",
      "namespace": "",
      "methods": [
        {
          "file": "../packages/json-api/src/-private/builders/find-record.ts",
          "line": 15,
          "description": "<html><head></head><body><p>Builds request options to fetch a single resource by a known id or identifier\nconfigured for the url and header expectations of most JSON:API APIs.</p>\n<p><strong>Basic Usage</strong></p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { findRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\n<span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> store.request(findRecord(<span class=\"string\">&apos;person&apos;</span>, <span class=\"string\">&apos;1&apos;</span>));</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><strong>With Options</strong></p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { findRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\nconst <span class=\"keyword\">options</span> = findRecord(<span class=\"string\">&apos;person&apos;</span>, <span class=\"string\">&apos;1&apos;</span>, { <span class=\"keyword\">include</span>: [<span class=\"string\">&apos;pets&apos;</span>, <span class=\"string\">&apos;friends&apos;</span>] });\nconst data = await store.request(<span class=\"keyword\">options</span>);</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><strong>With an Identifier</strong></p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { findRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\nconst <span class=\"keyword\">options</span> = findRecord({ <span class=\"keyword\">type</span>: <span class=\"string\">&apos;person&apos;</span>, id: <span class=\"string\">&apos;1&apos;</span> }, { <span class=\"keyword\">include</span>: [<span class=\"string\">&apos;pets&apos;</span>, <span class=\"string\">&apos;friends&apos;</span>] });\nconst data = await store.request(<span class=\"keyword\">options</span>);</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><strong>Supplying Options to Modify the Request Behavior</strong></p>\n<p>The following options are supported:</p>\n<ul>\n<li><code>host</code> - The host to use for the request, defaults to the <code>host</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>namespace</code> - The namespace to use for the request, defaults to the <code>namespace</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>resourcePath</code> - The resource path to use for the request, defaults to pluralizing the supplied type</li>\n<li><code>reload</code> - Whether to forcibly reload the request if it is already in the store, not supplying this\n   option will delegate to the store&apos;s lifetimes service, defaulting to <code>false</code> if none is configured.</li>\n<li><code>backgroundReload</code> - Whether to reload the request if it is already in the store, but to also resolve the\n   promise with the cached value, not supplying this option will delegate to the store&apos;s lifetimes service,\n   defaulting to <code>false</code> if none is configured.</li>\n<li><code>urlParamsSetting</code> - an object containing options for how to serialize the query params (see <code>buildQueryParams</code>)</li>\n</ul>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { findRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\n<span class=\"keyword\">const</span> options = findRecord(<span class=\"string\">&apos;person&apos;</span>, <span class=\"string\">&apos;1&apos;</span>, { include: [<span class=\"string\">&apos;pets&apos;</span>, <span class=\"string\">&apos;friends&apos;</span>] }, { <span class=\"keyword\">namespace</span>: <span class=\"string\">&apos;api/v2&apos;</span> });\n<span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> store.request(options);</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "findRecord",
          "access": "public",
          "tagname": "",
          "static": 1,
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "options",
              "description": ""
            }
          ],
          "class": "@ember-data/json-api/request",
          "module": "@ember-data/json-api/request"
        },
        {
          "file": "../packages/json-api/src/-private/builders/query.ts",
          "line": 11,
          "description": "<html><head></head><body><p>Builds request options to query for resources, usually by a primary\ntype, configured for the url and header expectations of most JSON:API APIs.</p>\n<p><strong>Basic Usage</strong></p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { query } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\n<span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> store.request(query(<span class=\"string\">&apos;person&apos;</span>));</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><strong>With Query Params</strong></p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { query } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\nconst <span class=\"keyword\">options</span> = query(<span class=\"string\">&apos;person&apos;</span>, { <span class=\"keyword\">include</span>: [<span class=\"string\">&apos;pets&apos;</span>, <span class=\"string\">&apos;friends&apos;</span>] });\nconst data = await store.request(<span class=\"keyword\">options</span>);</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><strong>Supplying Options to Modify the Request Behavior</strong></p>\n<p>The following options are supported:</p>\n<ul>\n<li><code>host</code> - The host to use for the request, defaults to the <code>host</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>namespace</code> - The namespace to use for the request, defaults to the <code>namespace</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>resourcePath</code> - The resource path to use for the request, defaults to pluralizing the supplied type</li>\n<li><code>reload</code> - Whether to forcibly reload the request if it is already in the store, not supplying this\n   option will delegate to the store&apos;s lifetimes service, defaulting to <code>false</code> if none is configured.</li>\n<li><code>backgroundReload</code> - Whether to reload the request if it is already in the store, but to also resolve the\n   promise with the cached value, not supplying this option will delegate to the store&apos;s lifetimes service,\n   defaulting to <code>false</code> if none is configured.</li>\n<li><code>urlParamsSetting</code> - an object containing options for how to serialize the query params (see <code>buildQueryParams</code>)</li>\n</ul>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { query } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\nconst <span class=\"keyword\">options</span> = query(<span class=\"string\">&apos;person&apos;</span>, { <span class=\"keyword\">include</span>: [<span class=\"string\">&apos;pets&apos;</span>, <span class=\"string\">&apos;friends&apos;</span>] }, { reload: <span class=\"keyword\">true</span> });\nconst data = await store.request(<span class=\"keyword\">options</span>);</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "query",
          "access": "public",
          "tagname": "",
          "static": 1,
          "params": [
            {
              "name": "identifier",
              "description": ""
            },
            {
              "name": "query",
              "description": ""
            },
            {
              "name": "options",
              "description": ""
            }
          ],
          "class": "@ember-data/json-api/request",
          "module": "@ember-data/json-api/request"
        },
        {
          "file": "../packages/json-api/src/-private/builders/save-record.ts",
          "line": 26,
          "description": "<html><head></head><body><p>Builds request options to delete record for resources,\nconfigured for the url, method and header expectations of most JSON:API APIs.</p>\n<p><strong>Basic Usage</strong></p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { deleteRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\n<span class=\"keyword\">const</span> person = <span class=\"keyword\">this</span>.store.peekRecord(<span class=\"string\">&apos;person&apos;</span>, <span class=\"string\">&apos;1&apos;</span>);\n\n<span class=\"comment\">// mark record as deleted</span>\nstore.deleteRecord(person);\n\n<span class=\"comment\">// persist deletion</span>\n<span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> store.request(deleteRecord(person));</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><strong>Supplying Options to Modify the Request Behavior</strong></p>\n<p>The following options are supported:</p>\n<ul>\n<li><code>host</code> - The host to use for the request, defaults to the <code>host</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>namespace</code> - The namespace to use for the request, defaults to the <code>namespace</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>resourcePath</code> - The resource path to use for the request, defaults to pluralizing the supplied type</li>\n<li><code>reload</code> - Whether to forcibly reload the request if it is already in the store, not supplying this\n   option will delegate to the store&apos;s lifetimes service, defaulting to <code>false</code> if none is configured.</li>\n<li><code>backgroundReload</code> - Whether to reload the request if it is already in the store, but to also resolve the\n   promise with the cached value, not supplying this option will delegate to the store&apos;s lifetimes service,\n   defaulting to <code>false</code> if none is configured.</li>\n<li><code>urlParamsSetting</code> - an object containing options for how to serialize the query params (see <code>buildQueryParams</code>)</li>\n</ul>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { deleteRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\n<span class=\"keyword\">const</span> person = <span class=\"keyword\">this</span>.store.peekRecord(<span class=\"string\">&apos;person&apos;</span>, <span class=\"string\">&apos;1&apos;</span>);\n\n<span class=\"comment\">// mark record as deleted</span>\nstore.deleteRecord(person);\n\n<span class=\"comment\">// persist deletion</span>\n<span class=\"keyword\">const</span> options = deleteRecord(person, { <span class=\"keyword\">namespace</span>: <span class=\"string\">&apos;api/v1&apos;</span> });\n<span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> store.request(options);</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "deleteRecord",
          "access": "public",
          "tagname": "",
          "static": 1,
          "params": [
            {
              "name": "record",
              "description": ""
            },
            {
              "name": "options",
              "description": ""
            }
          ],
          "class": "@ember-data/json-api/request",
          "module": "@ember-data/json-api/request"
        },
        {
          "file": "../packages/json-api/src/-private/builders/save-record.ts",
          "line": 106,
          "description": "<html><head></head><body><p>Builds request options to create new record for resources,\nconfigured for the url, method and header expectations of most JSON:API APIs.</p>\n<p><strong>Basic Usage</strong></p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { createRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\n<span class=\"keyword\">const</span> person = <span class=\"keyword\">this</span>.store.createRecord(<span class=\"string\">&apos;person&apos;</span>, { <span class=\"attr\">name</span>: <span class=\"string\">&apos;Ted&apos;</span> });\n<span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> store.request(createRecord(person));</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><strong>Supplying Options to Modify the Request Behavior</strong></p>\n<p>The following options are supported:</p>\n<ul>\n<li><code>host</code> - The host to use for the request, defaults to the <code>host</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>namespace</code> - The namespace to use for the request, defaults to the <code>namespace</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>resourcePath</code> - The resource path to use for the request, defaults to pluralizing the supplied type</li>\n<li><code>reload</code> - Whether to forcibly reload the request if it is already in the store, not supplying this\n   option will delegate to the store&apos;s lifetimes service, defaulting to <code>false</code> if none is configured.</li>\n<li><code>backgroundReload</code> - Whether to reload the request if it is already in the store, but to also resolve the\n   promise with the cached value, not supplying this option will delegate to the store&apos;s lifetimes service,\n   defaulting to <code>false</code> if none is configured.</li>\n<li><code>urlParamsSetting</code> - an object containing options for how to serialize the query params (see <code>buildQueryParams</code>)</li>\n</ul>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { createRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\n<span class=\"keyword\">const</span> person = <span class=\"keyword\">this</span>.store.createRecord(<span class=\"string\">&apos;person&apos;</span>, { name: <span class=\"string\">&apos;Ted&apos;</span> });\n<span class=\"keyword\">const</span> options = createRecord(person, { <span class=\"keyword\">namespace</span>: <span class=\"string\">&apos;api/v1&apos;</span> });\n<span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> store.request(options);</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "createRecord",
          "access": "public",
          "tagname": "",
          "static": 1,
          "params": [
            {
              "name": "record",
              "description": ""
            },
            {
              "name": "options",
              "description": ""
            }
          ],
          "class": "@ember-data/json-api/request",
          "module": "@ember-data/json-api/request"
        },
        {
          "file": "../packages/json-api/src/-private/builders/save-record.ts",
          "line": 175,
          "description": "<html><head></head><body><p>Builds request options to update existing record for resources,\nconfigured for the url, method and header expectations of most JSON:API APIs.</p>\n<p><strong>Basic Usage</strong></p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { updateRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\n<span class=\"keyword\">const</span> person = <span class=\"keyword\">this</span>.store.peekRecord(<span class=\"string\">&apos;person&apos;</span>, <span class=\"string\">&apos;1&apos;</span>);\nperson.name = <span class=\"string\">&apos;Chris&apos;</span>;\n<span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> store.request(updateRecord(person));</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><strong>Supplying Options to Modify the Request Behavior</strong></p>\n<p>The following options are supported:</p>\n<ul>\n<li><code>patch</code> - Allows caller to specify whether to use a PATCH request instead of a PUT request, defaults to <code>false</code>.</li>\n<li><code>host</code> - The host to use for the request, defaults to the <code>host</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>namespace</code> - The namespace to use for the request, defaults to the <code>namespace</code> configured with <code>setBuildURLConfig</code>.</li>\n<li><code>resourcePath</code> - The resource path to use for the request, defaults to pluralizing the supplied type</li>\n<li><code>reload</code> - Whether to forcibly reload the request if it is already in the store, not supplying this\n   option will delegate to the store&apos;s lifetimes service, defaulting to <code>false</code> if none is configured.</li>\n<li><code>backgroundReload</code> - Whether to reload the request if it is already in the store, but to also resolve the\n   promise with the cached value, not supplying this option will delegate to the store&apos;s lifetimes service,\n   defaulting to <code>false</code> if none is configured.</li>\n<li><code>urlParamsSetting</code> - an object containing options for how to serialize the query params (see <code>buildQueryParams</code>)</li>\n</ul>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { updateRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\n<span class=\"keyword\">const</span> person = <span class=\"keyword\">this</span>.store.peekRecord(<span class=\"string\">&apos;person&apos;</span>, <span class=\"string\">&apos;1&apos;</span>);\nperson.name = <span class=\"string\">&apos;Chris&apos;</span>;\n<span class=\"keyword\">const</span> options = updateRecord(person, { <span class=\"attr\">patch</span>: <span class=\"literal\">true</span> });\n<span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> store.request(options);</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "updateRecord",
          "access": "public",
          "tagname": "",
          "static": 1,
          "params": [
            {
              "name": "record",
              "description": ""
            },
            {
              "name": "options",
              "description": ""
            }
          ],
          "class": "@ember-data/json-api/request",
          "module": "@ember-data/json-api/request"
        },
        {
          "file": "../packages/json-api/src/-private/serialize.ts",
          "line": 10,
          "description": "<html><head></head><body><p>Serializes the current state of a resource or array of resources for use with POST or PUT requests.</p>\n</body></html>",
          "itemtype": "method",
          "name": "serializeResources",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "cache}",
              "description": "",
              "type": "Cache"
            },
            {
              "name": "identifier",
              "description": "",
              "type": "StableRecordIdentifier"
            }
          ],
          "return": {
            "description": "An object with a `data` property containing the serialized resource patch",
            "type": "Object"
          },
          "class": "@ember-data/json-api/request",
          "module": "@ember-data/json-api/request"
        },
        {
          "file": "../packages/json-api/src/-private/serialize.ts",
          "line": 47,
          "description": "<html><head></head><body><p>Serializes changes to a resource for use with PATCH requests.</p>\n<p>Only attributes which are changed are serialized.\nOnly relationships which are changed are serialized.</p>\n<p>Collection relationships serialize the collection as a whole.</p>\n<p>If you would like to serialize updates to a collection more granularly\n(for instance, as operations) request the diff from the store and\nserialize as desired:</p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre><span class=\"attribute\">const relationshipDiffMap</span> = cache.changedRelationships(identifier);</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "serializePatch",
          "static": 1,
          "access": "public",
          "tagname": "",
          "params": [
            {
              "name": "cache}",
              "description": "",
              "type": "Cache"
            },
            {
              "name": "identifier",
              "description": "",
              "type": "StableRecordIdentifier"
            }
          ],
          "return": {
            "description": "An object with a `data` property containing the serialized resource patch",
            "type": "Object"
          },
          "class": "@ember-data/json-api/request",
          "module": "@ember-data/json-api/request"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-data-5.3.0-@ember-data/json-api/request",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.3.0",
          "type": "project-version"
        }
      }
    }
  }
}