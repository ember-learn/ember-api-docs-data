{
  "data": {
    "id": "ember-data-5.3.0-@ember-data/json-api/request",
    "type": "module",
    "attributes": {
      "name": "@ember-data/json-api/request",
      "submodules": {},
      "elements": {},
      "fors": {
        "@ember-data/json-api/request": 1
      },
      "namespaces": {},
      "tag": "main",
      "file": "../json-api/src/request.ts",
      "line": 1,
      "description": "<html><head></head><body><p align=\"center\">\n <img class=\"project-logo\" src=\"https://raw.githubusercontent.com/emberjs/data/4612c9354e4c54d53327ec2cf21955075ce21294/ember-data-logo-light.svg#gh-light-mode-only\" alt=\"EmberData\" width=\"240px\" title=\"EmberData\">\n</p>\n\n<p>This package provides utilities for working with <a href=\"https://json-api.org\">JSON:API</a> APIs with <a href=\"https://github.com/emberjs/data/\"><em>Ember**</em>Data**</a>.</p>\n<h2 id=\"installation\">Installation</h2>\n<p>Install using your javascript package manager of choice. For instance with <a href=\"https://pnpm.io/\">pnpm</a></p>\n<div class=\"highlight highlight\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre><span class=\"selector-tag\">pnpm</span> <span class=\"selector-tag\">add</span> @<span class=\"keyword\">ember</span>-<span class=\"keyword\">data</span>/<span class=\"keyword\">json</span>-<span class=\"keyword\">api</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<h2 id=\"usage\">Usage</h2>\n<p>Request builders are functions that produce <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\">Fetch Options</a>.\nThey take a few contextual inputs about the request you want to make, abstracting away the gnarlier details.</p>\n<p>For instance, to fetch a resource from your API</p>\n<div class=\"highlight ts\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { findRecord } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember-data/json-api/request&apos;</span>;\n\nconst <span class=\"keyword\">options</span> = findRecord(<span class=\"string\">&apos;ember-developer&apos;</span>, <span class=\"string\">&apos;1&apos;</span>, { <span class=\"keyword\">include</span>: [<span class=\"string\">&apos;pets&apos;</span>, <span class=\"string\">&apos;friends&apos;</span>] });\n\n/\\*\n =&gt; {\n   url: <span class=\"string\">&apos;https://api.example.com/v1/ember-developers/1?include=friends,pets&apos;</span>,\n   <span class=\"keyword\">method</span>: <span class=\"string\">&apos;GET&apos;</span>,\n   headers: &lt;Headers&gt;,\n     // =&gt; <span class=\"string\">&apos;Accept&apos;</span>: <span class=\"string\">&apos;application/vnd.api+json&apos;</span>\n     // =&gt; <span class=\"string\">&apos;Content-Type&apos;</span>: <span class=\"string\">&apos;application/vnd.api+json&apos;</span>\n   op: <span class=\"string\">&apos;findRecord&apos;</span>;\n   records: [{ <span class=\"keyword\">type</span>: <span class=\"string\">&apos;ember-developer&apos;</span>, id: <span class=\"string\">&apos;1&apos;</span> }]\n }\n\\/</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Request builder output may be used with either <code>requestManager.request</code> or <code>store.request</code>.</p>\n<p>URLs are stable. The same query will produce the same URL every time, even if the order of keys in\nthe query or values in an array changes.</p>\n<p>URLs follow the most common JSON:API format (dasherized pluralized resource types).</p>\n<h3 id=\"available-builders\">Available Builders</h3>\n<ul>\n<li><a href=\"https://api.emberjs.com/ember-data/release/functions/@ember-data%2Fjson-api/createRecord\">createRecord</a></li>\n<li><a href=\"https://api.emberjs.com/ember-data/release/functions/@ember-data%2Fjson-api/deleteRecord\">deleteRecord</a></li>\n<li><a href=\"https://api.emberjs.com/ember-data/release/functions/@ember-data%2Fjson-api/findRecord\">findRecord</a></li>\n<li><a href=\"https://api.emberjs.com/ember-data/release/functions/@ember-data%2Fjson-api/query\">query</a></li>\n<li><a href=\"https://api.emberjs.com/ember-data/release/functions/@ember-data%2Fjson-api/updateRecord\">updateRecord</a></li>\n</ul>\n</body></html>",
      "itemtype": "main",
      "parent": null,
      "publicclasses": [],
      "privateclasses": [],
      "staticfunctions": {
        "@ember-data/json-api/request": [
          {
            "file": "../packages/json-api/src/-private/builders/save-record.ts",
            "line": 106,
            "description": "Builds request options to create new record for resources,\nconfigured for the url, method and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { createRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.createRecord('person', { name: 'Ted' });\nconst data = await store.request(createRecord(person));\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { createRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.createRecord('person', { name: 'Ted' });\nconst options = createRecord(person, { namespace: 'api/v1' });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "createRecord",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "record",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/builders/save-record.ts",
            "line": 26,
            "description": "Builds request options to delete record for resources,\nconfigured for the url, method and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { deleteRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.peekRecord('person', '1');\n\n// mark record as deleted\nstore.deleteRecord(person);\n\n// persist deletion\nconst data = await store.request(deleteRecord(person));\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { deleteRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.peekRecord('person', '1');\n\n// mark record as deleted\nstore.deleteRecord(person);\n\n// persist deletion\nconst options = deleteRecord(person, { namespace: 'api/v1' });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "deleteRecord",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "record",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/builders/find-record.ts",
            "line": 15,
            "description": "Builds request options to fetch a single resource by a known id or identifier\nconfigured for the url and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { findRecord } from '@ember-data/json-api/request';\n\nconst data = await store.request(findRecord('person', '1'));\n```\n\n**With Options**\n\n```ts\nimport { findRecord } from '@ember-data/json-api/request';\n\nconst options = findRecord('person', '1', { include: ['pets', 'friends'] });\nconst data = await store.request(options);\n```\n\n**With an Identifier**\n\n```ts\nimport { findRecord } from '@ember-data/json-api/request';\n\nconst options = findRecord({ type: 'person', id: '1' }, { include: ['pets', 'friends'] });\nconst data = await store.request(options);\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { findRecord } from '@ember-data/json-api/request';\n\nconst options = findRecord('person', '1', { include: ['pets', 'friends'] }, { namespace: 'api/v2' });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "findRecord",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "identifier",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/builders/query.ts",
            "line": 11,
            "description": "Builds request options to query for resources, usually by a primary\ntype, configured for the url and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { query } from '@ember-data/json-api/request';\n\nconst data = await store.request(query('person'));\n```\n\n**With Query Params**\n\n```ts\nimport { query } from '@ember-data/json-api/request';\n\nconst options = query('person', { include: ['pets', 'friends'] });\nconst data = await store.request(options);\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { query } from '@ember-data/json-api/request';\n\nconst options = query('person', { include: ['pets', 'friends'] }, { reload: true });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "query",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "identifier",
                "description": ""
              },
              {
                "name": "query",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/serialize.ts",
            "line": 47,
            "description": "Serializes changes to a resource for use with PATCH requests.\n\nOnly attributes which are changed are serialized.\nOnly relationships which are changed are serialized.\n\nCollection relationships serialize the collection as a whole.\n\nIf you would like to serialize updates to a collection more granularly\n(for instance, as operations) request the diff from the store and\nserialize as desired:\n\n```ts\nconst relationshipDiffMap = cache.changedRelationships(identifier);\n```",
            "itemtype": "method",
            "name": "serializePatch",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "cache}",
                "description": "",
                "type": "Cache"
              },
              {
                "name": "identifier",
                "description": "",
                "type": "StableRecordIdentifier"
              }
            ],
            "return": {
              "description": "An object with a `data` property containing the serialized resource patch",
              "type": "Object"
            },
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/serialize.ts",
            "line": 10,
            "description": "Serializes the current state of a resource or array of resources for use with POST or PUT requests.",
            "itemtype": "method",
            "name": "serializeResources",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "cache}",
                "description": "",
                "type": "Cache"
              },
              {
                "name": "identifier",
                "description": "",
                "type": "StableRecordIdentifier"
              }
            ],
            "return": {
              "description": "An object with a `data` property containing the serialized resource patch",
              "type": "Object"
            },
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/builders/save-record.ts",
            "line": 175,
            "description": "Builds request options to update existing record for resources,\nconfigured for the url, method and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { updateRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.peekRecord('person', '1');\nperson.name = 'Chris';\nconst data = await store.request(updateRecord(person));\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `patch` - Allows caller to specify whether to use a PATCH request instead of a PUT request, defaults to `false`.\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { updateRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.peekRecord('person', '1');\nperson.name = 'Chris';\nconst options = updateRecord(person, { patch: true });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "updateRecord",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "record",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          }
        ]
      },
      "allstaticfunctions": {
        "@ember-data/json-api/request": [
          {
            "file": "../packages/json-api/src/-private/builders/save-record.ts",
            "line": 106,
            "description": "Builds request options to create new record for resources,\nconfigured for the url, method and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { createRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.createRecord('person', { name: 'Ted' });\nconst data = await store.request(createRecord(person));\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { createRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.createRecord('person', { name: 'Ted' });\nconst options = createRecord(person, { namespace: 'api/v1' });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "createRecord",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "record",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/builders/save-record.ts",
            "line": 26,
            "description": "Builds request options to delete record for resources,\nconfigured for the url, method and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { deleteRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.peekRecord('person', '1');\n\n// mark record as deleted\nstore.deleteRecord(person);\n\n// persist deletion\nconst data = await store.request(deleteRecord(person));\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { deleteRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.peekRecord('person', '1');\n\n// mark record as deleted\nstore.deleteRecord(person);\n\n// persist deletion\nconst options = deleteRecord(person, { namespace: 'api/v1' });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "deleteRecord",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "record",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/builders/find-record.ts",
            "line": 15,
            "description": "Builds request options to fetch a single resource by a known id or identifier\nconfigured for the url and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { findRecord } from '@ember-data/json-api/request';\n\nconst data = await store.request(findRecord('person', '1'));\n```\n\n**With Options**\n\n```ts\nimport { findRecord } from '@ember-data/json-api/request';\n\nconst options = findRecord('person', '1', { include: ['pets', 'friends'] });\nconst data = await store.request(options);\n```\n\n**With an Identifier**\n\n```ts\nimport { findRecord } from '@ember-data/json-api/request';\n\nconst options = findRecord({ type: 'person', id: '1' }, { include: ['pets', 'friends'] });\nconst data = await store.request(options);\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { findRecord } from '@ember-data/json-api/request';\n\nconst options = findRecord('person', '1', { include: ['pets', 'friends'] }, { namespace: 'api/v2' });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "findRecord",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "identifier",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/builders/query.ts",
            "line": 11,
            "description": "Builds request options to query for resources, usually by a primary\ntype, configured for the url and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { query } from '@ember-data/json-api/request';\n\nconst data = await store.request(query('person'));\n```\n\n**With Query Params**\n\n```ts\nimport { query } from '@ember-data/json-api/request';\n\nconst options = query('person', { include: ['pets', 'friends'] });\nconst data = await store.request(options);\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { query } from '@ember-data/json-api/request';\n\nconst options = query('person', { include: ['pets', 'friends'] }, { reload: true });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "query",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "identifier",
                "description": ""
              },
              {
                "name": "query",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/serialize.ts",
            "line": 47,
            "description": "Serializes changes to a resource for use with PATCH requests.\n\nOnly attributes which are changed are serialized.\nOnly relationships which are changed are serialized.\n\nCollection relationships serialize the collection as a whole.\n\nIf you would like to serialize updates to a collection more granularly\n(for instance, as operations) request the diff from the store and\nserialize as desired:\n\n```ts\nconst relationshipDiffMap = cache.changedRelationships(identifier);\n```",
            "itemtype": "method",
            "name": "serializePatch",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "cache}",
                "description": "",
                "type": "Cache"
              },
              {
                "name": "identifier",
                "description": "",
                "type": "StableRecordIdentifier"
              }
            ],
            "return": {
              "description": "An object with a `data` property containing the serialized resource patch",
              "type": "Object"
            },
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/serialize.ts",
            "line": 10,
            "description": "Serializes the current state of a resource or array of resources for use with POST or PUT requests.",
            "itemtype": "method",
            "name": "serializeResources",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "cache}",
                "description": "",
                "type": "Cache"
              },
              {
                "name": "identifier",
                "description": "",
                "type": "StableRecordIdentifier"
              }
            ],
            "return": {
              "description": "An object with a `data` property containing the serialized resource patch",
              "type": "Object"
            },
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          },
          {
            "file": "../packages/json-api/src/-private/builders/save-record.ts",
            "line": 175,
            "description": "Builds request options to update existing record for resources,\nconfigured for the url, method and header expectations of most JSON:API APIs.\n\n**Basic Usage**\n\n```ts\nimport { updateRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.peekRecord('person', '1');\nperson.name = 'Chris';\nconst data = await store.request(updateRecord(person));\n```\n\n**Supplying Options to Modify the Request Behavior**\n\nThe following options are supported:\n\n- `patch` - Allows caller to specify whether to use a PATCH request instead of a PUT request, defaults to `false`.\n- `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n- `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n- `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n- `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n     option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n- `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n     promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n     defaulting to `false` if none is configured.\n- `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n\n```ts\nimport { updateRecord } from '@ember-data/json-api/request';\n\nconst person = this.store.peekRecord('person', '1');\nperson.name = 'Chris';\nconst options = updateRecord(person, { patch: true });\nconst data = await store.request(options);\n```",
            "itemtype": "method",
            "name": "updateRecord",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
              {
                "name": "record",
                "description": ""
              },
              {
                "name": "options",
                "description": ""
              }
            ],
            "class": "@ember-data/json-api/request",
            "module": "@ember-data/json-api/request"
          }
        ]
      },
      "version": "5.3.0"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.3.0",
          "type": "project-version"
        }
      }
    }
  }
}