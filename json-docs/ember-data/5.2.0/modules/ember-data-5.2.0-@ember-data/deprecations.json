{
  "data": {
    "id": "ember-data-5.2.0-@ember-data/deprecations",
    "type": "module",
    "attributes": {
      "name": "@ember-data/deprecations",
      "submodules": {},
      "elements": {},
      "fors": {},
      "namespaces": {},
      "tag": "main",
      "file": "../private-build-infra/virtual-packages/deprecations.js",
      "line": 61,
      "description": "## Deprecations\n\nEmberData allows users to opt-in and remove code that exists to support deprecated\nbehaviors.\n\nIf your app has resolved all deprecations present in a given version,\nyou may specify that version as your \"compatibility\" version to remove\nthe code that supported the deprecated behavior from your app.\n\nFor instance, if a deprecation was introduced in 3.13, and the app specifies\n3.13 as its minimum version compatibility, any deprecations introduced before\nor during 3.13 would be stripped away.\n\nAn app can use a different version than what it specifies as it's compatibility\nversion. For instance, an App could be using `3.16` while specifying compatibility\nwith `3.12`. This would remove any deprecations that were present in or before `3.12`\nbut keep support for anything deprecated in or above `3.13`.\n\n### Configuring Compatibility\n\nTo configure your compatibility version, set the `compatWith` to the version you\nare compatible with on the `emberData` config in your `ember-cli-build.js` file.\n\n```js\nlet app = new EmberApp(defaults, {\n  emberData: {\n    compatWith: '3.12',\n  },\n});\n```\n\nAlternatively, individual deprecations can be resolved (and thus have its support stripped)\nvia one of the flag names listed below. For instance, given a flag named `DEPRECATE_FOO_BEHAVIOR`.\n\nThis capability is interopable with `compatWith`. You may set `compatWith` and then selectively resolve\nadditional deprecations, or set compatWith and selectively un-resolve specific deprecations.\n\nNote: EmberData does not test against permutations of deprecations being stripped, our tests run against\n\"all deprecated code included\" and \"all deprecated code removed\". Unspecified behavior may sometimes occur\nwhen removing code for only some deprecations associated to a version number.\n\n```js\nlet app = new EmberApp(defaults, {\n  emberData: {\n    deprecations: {\n      DEPRECATE_FOO_BEHAVIOR: false // set to false to strip this code\n      DEPRECATE_BAR_BEHAVIOR: true // force to true to not strip this code\n    }\n  }\n})\n```\n\nThe complete list of which versions specific deprecations will be removed in\ncan be found [here](https://github.com/emberjs/data/blob/main/packages/private-build-infra/virtual-packages/deprecations.js \"List of EmberData Deprecations\")",
      "itemtype": "main",
      "parent": null,
      "publicclasses": [
        "CurrentDeprecations"
      ],
      "privateclasses": [],
      "staticfunctions": {},
      "allstaticfunctions": {},
      "version": "5.2.0"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-data-5.2.0",
          "type": "project-version"
        }
      }
    }
  }
}