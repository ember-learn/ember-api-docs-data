{
  "data": {
    "id": "ember-data-4.1.0-@ember-data/serializer/json-api",
    "type": "module",
    "attributes": {
      "name": "@ember-data/serializer/json-api",
      "submodules": {},
      "elements": {},
      "fors": {},
      "namespaces": {},
      "tag": "main",
      "file": "../serializer/addon/json-api.js",
      "line": 15,
      "description": "<html><head></head><body><p>Ember Data 2.0 Serializer:</p>\n<p>In Ember Data a Serializer is used to serialize and deserialize\nrecords when they are transferred in and out of an external source.\nThis process involves normalizing property names, transforming\nattribute values and serializing relationships.</p>\n<p><code>JSONAPISerializer</code> supports the <a href=\"http://jsonapi.org/\">http://jsonapi.org/</a> spec and is the\nserializer recommended by Ember Data.</p>\n<p>This serializer normalizes a JSON API payload that looks like:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/player.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">Model</span>, { attr, belongsTo } from &apos;<span class=\"meta\">@ember</span>-data/model&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Player</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span> </span>{\n  <span class=\"meta\">@attr</span>(&apos;string&apos;) name;\n  <span class=\"meta\">@attr</span>(&apos;string&apos;) skill;\n  <span class=\"meta\">@attr</span>(&apos;number&apos;) gamesPlayed;\n  <span class=\"meta\">@belongsTo</span>(&apos;club&apos;) club;\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/models/club.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">Model</span>, { attr, hasMany } from &apos;<span class=\"meta\">@ember</span>-data/model&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Club</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span> </span>{\n  <span class=\"meta\">@attr</span>(&apos;string&apos;) name;\n  <span class=\"meta\">@attr</span>(&apos;string&apos;) location;\n  <span class=\"meta\">@hasMany</span>(&apos;player&apos;) players;\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n</pre></td>\n              <td class=\"code\"><pre>  {\n    <span class=\"string\">&quot;data&quot;</span>: [\n      {\n        <span class=\"string\">&quot;attributes&quot;</span>: {\n          <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Benfica&quot;</span>,\n          <span class=\"string\">&quot;location&quot;</span>: <span class=\"string\">&quot;Portugal&quot;</span>\n        },\n        <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>,\n        <span class=\"string\">&quot;relationships&quot;</span>: {\n          <span class=\"string\">&quot;players&quot;</span>: {\n            <span class=\"string\">&quot;data&quot;</span>: [\n              {\n                <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;3&quot;</span>,\n                <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;players&quot;</span>\n              }\n            ]\n          }\n        },\n        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;clubs&quot;</span>\n      }\n    ],\n    <span class=\"string\">&quot;included&quot;</span>: [\n      {\n        <span class=\"string\">&quot;attributes&quot;</span>: {\n          <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Eusebio Silva Ferreira&quot;</span>,\n          <span class=\"string\">&quot;skill&quot;</span>: <span class=\"string\">&quot;Rocket shot&quot;</span>,\n          <span class=\"string\">&quot;games-played&quot;</span>: <span class=\"number\">431</span>\n        },\n        <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;3&quot;</span>,\n        <span class=\"string\">&quot;relationships&quot;</span>: {\n          <span class=\"string\">&quot;club&quot;</span>: {\n            <span class=\"string\">&quot;data&quot;</span>: {\n              <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;1&quot;</span>,\n              <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;clubs&quot;</span>\n            }\n          }\n        },\n        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;players&quot;</span>\n      }\n    ]\n  }</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>to the format that the Ember Data store expects.</p>\n<h3 id=\"customizing-meta\">Customizing meta</h3>\n<p>Since a JSON API Document can have meta defined in multiple locations you can\nuse the specific serializer hooks if you need to customize the meta.</p>\n<p>One scenario would be to camelCase the meta keys of your payload. The example\nbelow shows how this could be done using <code>normalizeArrayResponse</code> and\n<code>extractRelationship</code>.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/serializers/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n</pre></td>\n              <td class=\"code\"><pre>import JSONAPISerializer from &apos;@ember-data/serializer/json-api&apos;;\n\nexport default <span class=\"keyword\">class</span> ApplicationSerializer extends JSONAPISerializer {\n  normalize<span class=\"constructor\">ArrayResponse(<span class=\"params\">store</span>, <span class=\"params\">primaryModelClass</span>, <span class=\"params\">payload</span>, <span class=\"params\">id</span>, <span class=\"params\">requestType</span>)</span> {\n    <span class=\"keyword\">let</span> normalizedDocument = super.normalize<span class=\"constructor\">ArrayResponse(<span class=\"operator\">...</span><span class=\"params\">arguments</span>)</span>;\n\n    <span class=\"comment\">// Customize document meta</span>\n    normalizedDocument.meta = camel<span class=\"constructor\">CaseKeys(<span class=\"params\">normalizedDocument</span>.<span class=\"params\">meta</span>)</span>;\n\n    return normalizedDocument;\n  }\n\n  extract<span class=\"constructor\">Relationship(<span class=\"params\">relationshipHash</span>)</span> {\n    <span class=\"keyword\">let</span> normalizedRelationship = super.extract<span class=\"constructor\">Relationship(<span class=\"operator\">...</span><span class=\"params\">arguments</span>)</span>;\n\n    <span class=\"comment\">// Customize relationship meta</span>\n    normalizedRelationship.meta = camel<span class=\"constructor\">CaseKeys(<span class=\"params\">normalizedRelationship</span>.<span class=\"params\">meta</span>)</span>;\n\n    return normalizedRelationship;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "itemtype": "main",
      "parent": null,
      "publicclasses": [
        "JSONAPISerializer"
      ],
      "privateclasses": [],
      "staticfunctions": {},
      "allstaticfunctions": {},
      "version": "4.1.0"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-data-4.1.0",
          "type": "project-version"
        }
      }
    }
  }
}