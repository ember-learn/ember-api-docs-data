{
  "data": {
    "id": "ember-4.9.3-@ember/service",
    "type": "class",
    "attributes": {
      "name": "@ember/service",
      "shortname": "@ember/service",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember/service",
      "namespace": "",
      "methods": [
        {
          "file": "packages/@ember/service/index.ts",
          "line": 10,
          "itemtype": "method",
          "name": "inject",
          "static": 1,
          "since": "1.10.0",
          "params": [
            {
              "name": "name",
              "description": "(optional) name of the service to inject, defaults to\n       the property's name",
              "type": "String"
            }
          ],
          "return": {
            "description": "injection decorator instance",
            "type": "ComputedDecorator"
          },
          "access": "public",
          "tagname": "",
          "class": "@ember/service",
          "module": "@ember/service"
        },
        {
          "file": "packages/@ember/service/index.ts",
          "line": 30,
          "description": "<html><head></head><body><p>Creates a property that lazily looks up a service in the container. There are\nno restrictions as to what objects a service can be injected into.</p>\n<p>Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/routes/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">Route</span> from &apos;<span class=\"meta\">@ember</span>/routing/route&apos;;\n<span class=\"keyword\">import</span> { service } from &apos;<span class=\"meta\">@ember</span>/service&apos;;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationRoute</span> <span class=\"keyword\">extends</span> <span class=\"title\">Route</span> </span>{\n  <span class=\"meta\">@service</span>(&apos;auth&apos;) authManager;\n\n  model() {\n    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.authManager.findCurrentUser();\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Classic Class Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">app/routes/application.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"title class_\">Route</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/routing/route&apos;</span>;\n<span class=\"keyword\">import</span> { service } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/service&apos;</span>;\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Route</span>.<span class=\"title function_\">extend</span>({\n  <span class=\"attr\">authManager</span>: <span class=\"title function_\">service</span>(<span class=\"string\">&apos;auth&apos;</span>),\n\n  <span class=\"title function_\">model</span>(<span class=\"params\"></span>) {\n    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&apos;authManager&apos;</span>).<span class=\"title function_\">findCurrentUser</span>();\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>This example will create an <code>authManager</code> property on the application route\nthat looks up the <code>auth</code> service in the container, making it easily accessible\nin the <code>model</code> hook.</p>\n</body></html>",
          "itemtype": "method",
          "name": "service",
          "static": 1,
          "since": "4.1.0",
          "params": [
            {
              "name": "name",
              "description": "(optional) name of the service to inject, defaults to\n       the property's name",
              "type": "String"
            }
          ],
          "return": {
            "description": "injection decorator instance",
            "type": "ComputedDecorator"
          },
          "access": "public",
          "tagname": "",
          "class": "@ember/service",
          "module": "@ember/service"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-4.9.3-@ember/service",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-4.9.3",
          "type": "project-version"
        }
      }
    }
  }
}