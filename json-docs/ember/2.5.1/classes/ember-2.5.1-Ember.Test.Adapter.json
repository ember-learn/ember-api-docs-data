{
  "data": {
    "id": "ember-2.5.1-Ember.Test.Adapter",
    "type": "class",
    "attributes": {
      "name": "Ember.Test.Adapter",
      "shortname": "Ember.Test.Adapter",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember",
      "submodule": "ember-testing",
      "namespace": "Ember.Test",
      "file": "packages/ember-testing/lib/adapters/adapter.js",
      "line": 10,
      "description": "The primary purpose of this class is to create hooks that can be implemented\nby an adapter for various test frameworks.",
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "packages/ember-testing/lib/adapters/adapter.js",
          "line": 19,
          "description": "This callback will be called whenever an async operation is about to start.\n\nOverride this to call your framework's methods that handle async\noperations.",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "asyncStart",
          "class": "Ember.Test.Adapter",
          "module": "ember",
          "submodule": "ember-testing",
          "namespace": "Ember.Test"
        },
        {
          "file": "packages/ember-testing/lib/adapters/adapter.js",
          "line": 30,
          "description": "This callback will be called whenever an async operation has completed.",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "asyncEnd",
          "class": "Ember.Test.Adapter",
          "module": "ember",
          "submodule": "ember-testing",
          "namespace": "Ember.Test"
        },
        {
          "file": "packages/ember-testing/lib/adapters/adapter.js",
          "line": 38,
          "description": "Override this method with your testing framework's false assertion.\nThis function is called whenever an exception occurs causing the testing\npromise to fail.\n\nQUnit example:\n\n```javascript\n  exception: function(error) {\n    ok(false, error);\n  };\n```",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "exception",
          "params": [
            {
              "name": "error",
              "description": "The exception to be raised.",
              "type": "String"
            }
          ],
          "class": "Ember.Test.Adapter",
          "module": "ember",
          "submodule": "ember-testing",
          "namespace": "Ember.Test"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": [
          {
            "type": "class",
            "id": "ember-2.5.1-Ember.Test.QUnitAdapter"
          }
        ]
      },
      "module": {
        "data": {
          "id": "ember-2.5.1-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.5.1",
          "type": "project-version"
        }
      }
    }
  }
}