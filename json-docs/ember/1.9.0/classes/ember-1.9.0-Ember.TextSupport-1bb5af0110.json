{
  "data": {
    "id": "ember-1.9.0-Ember.TextSupport",
    "type": "class",
    "attributes": {
      "name": "Ember.TextSupport",
      "shortname": "Ember.TextSupport",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "Ember.TextArea",
        "Ember.TextField"
      ],
      "module": "ember",
      "submodule": "ember-handlebars",
      "namespace": "Ember",
      "file": "packages/ember-handlebars/lib/controls/text_support.js",
      "line": 11,
      "description": "<html><head></head><body><p>Shared mixin used by <code>Ember.TextField</code> and <code>Ember.TextArea</code>.</p>\n</body></html>",
      "uses": [
        "Ember.TargetActionSupport"
      ],
      "extends": "Ember.Mixin",
      "access": "private",
      "tagname": "",
      "methods": [
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 105,
          "description": "<html><head></head><body><p>Called when the user inserts a new line.</p>\n<p>Called by the <code>Ember.TextSupport</code> mixin on keyUp if keycode matches 13.\nUses sendAction to send the <code>enter</code> action.</p>\n</body></html>",
          "itemtype": "method",
          "name": "insertNewline",
          "params": [
            {
              "name": "event",
              "description": "",
              "type": "Event"
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 119,
          "description": "<html><head></head><body><p>Called when the user hits escape.</p>\n<p>Called by the <code>Ember.TextSupport</code> mixin on keyUp if keycode matches 27.\nUses sendAction to send the <code>escape-press</code> action.</p>\n</body></html>",
          "itemtype": "method",
          "name": "cancel",
          "params": [
            {
              "name": "event",
              "description": "",
              "type": "Event"
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 136,
          "description": "<html><head></head><body><p>Called when the text area is focused.</p>\n<p>Uses sendAction to send the <code>focus-in</code> action.</p>\n</body></html>",
          "itemtype": "method",
          "name": "focusIn",
          "params": [
            {
              "name": "event",
              "description": "",
              "type": "Event"
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 148,
          "description": "<html><head></head><body><p>Called when the text area is blurred.</p>\n<p>Uses sendAction to send the <code>focus-out</code> action.</p>\n</body></html>",
          "itemtype": "method",
          "name": "focusOut",
          "params": [
            {
              "name": "event",
              "description": "",
              "type": "Event"
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 161,
          "description": "<html><head></head><body><p>Called when the user presses a key. Enabled by setting\nthe <code>onEvent</code> property to <code>keyPress</code>.</p>\n<p>Uses sendAction to send the <code>key-press</code> action.</p>\n</body></html>",
          "itemtype": "method",
          "name": "keyPress",
          "params": [
            {
              "name": "event",
              "description": "",
              "type": "Event"
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 174,
          "description": "<html><head></head><body><p>Called when the browser triggers a <code>keyup</code> event on the element.</p>\n<p>Uses sendAction to send the <code>key-up</code> action passing the current value\nand event as parameters.</p>\n</body></html>",
          "itemtype": "method",
          "name": "keyUp",
          "params": [
            {
              "name": "event",
              "description": "",
              "type": "Event"
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 189,
          "description": "<html><head></head><body><p>Called when the browser triggers a <code>keydown</code> event on the element.</p>\n<p>Uses sendAction to send the <code>key-down</code> action passing the current value\nand event as parameters. Note that generally in key-down the value is unchanged\n(as the key pressing has not completed yet).</p>\n</body></html>",
          "itemtype": "method",
          "name": "keyDown",
          "params": [
            {
              "name": "event",
              "description": "",
              "type": "Event"
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 560,
          "itemtype": "method",
          "name": "create",
          "static": 1,
          "params": [
            {
              "name": "arguments",
              "description": "",
              "multiple": true
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "inherited": true,
          "inheritedFrom": "Ember.Mixin"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 579,
          "itemtype": "method",
          "name": "reopen",
          "params": [
            {
              "name": "arguments",
              "description": "",
              "multiple": true
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "inherited": true,
          "inheritedFrom": "Ember.Mixin"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 614,
          "itemtype": "method",
          "name": "apply",
          "params": [
            {
              "name": "obj",
              "description": ""
            }
          ],
          "return": {
            "description": "applied object"
          },
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "inherited": true,
          "inheritedFrom": "Ember.Mixin"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 642,
          "itemtype": "method",
          "name": "detect",
          "params": [
            {
              "name": "obj",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "inherited": true,
          "inheritedFrom": "Ember.Mixin"
        },
        {
          "file": "packages/ember-runtime/lib/mixins/target_action_support.js",
          "line": 55,
          "description": "<html><head></head><body><p>Send an <code>action</code> with an <code>actionContext</code> to a <code>target</code>. The action, actionContext\nand target will be retrieved from properties of the object. For example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td>\n              <td class=\"code\"><pre>App.SaveButtonView = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Ember</span>.</span><span class=\"module\"><span class=\"identifier\">View</span>.</span></span>extend(Ember.TargetActionSupport, {\n  target: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Ember</span>.</span></span>computed.alias(&apos;controller&apos;),\n  action: &apos;save&apos;,\n  actionContext: <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Ember</span>.</span></span>computed.alias(&apos;context&apos;),\n  click: <span class=\"keyword\">function</span><span class=\"literal\">()</span> {\n    this.trigger<span class=\"constructor\">Action()</span>; <span class=\"comment\">// Sends the `save` action, along with the current context</span>\n                          <span class=\"comment\">// to the current controller</span>\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The <code>target</code>, <code>action</code>, and <code>actionContext</code> can be provided as properties of\nan optional object argument to <code>triggerAction</code> as well.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre>App.SaveButtonView = Ember.View.extend(Ember.TargetActionSupport, {\n  click: function() {\n    <span class=\"keyword\">this</span>.triggerAction({\n      action: <span class=\"string\">&apos;save&apos;</span>,\n      target: <span class=\"keyword\">this</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;controller&apos;</span>),\n      actionContext: <span class=\"keyword\">this</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;context&apos;</span>)\n    }); <span class=\"comment\">// Sends the `save` action, along with the current context</span>\n        <span class=\"comment\">// to the current controller</span>\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The <code>actionContext</code> defaults to the object you are mixing <code>TargetActionSupport</code> into.\nBut <code>target</code> and <code>action</code> must be specified either as properties or with the argument\nto <code>triggerAction</code>, or a combination:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td>\n              <td class=\"code\"><pre>App.SaveButtonView = Ember.View.extend(Ember.TargetActionSupport, {\n  target: Ember.computed.alias(<span class=\"string\">&apos;controller&apos;</span>),\n  click: <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>{\n    <span class=\"keyword\">this</span>.triggerAction({\n      action: <span class=\"string\">&apos;save&apos;</span>\n    }); <span class=\"comment\">// Sends the `save` action, along with a reference to `this`,</span>\n        <span class=\"comment\">// to the current controller</span>\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "triggerAction",
          "params": [
            {
              "name": "opts",
              "description": "(optional, with the optional keys action, target and/or actionContext)",
              "type": "Hash"
            }
          ],
          "return": {
            "description": "true if the action was sent successfully and did not return false",
            "type": "Boolean"
          },
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-runtime",
          "namespace": "Ember",
          "inherited": true,
          "inheritedFrom": "Ember.TargetActionSupport"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 560,
          "itemtype": "method",
          "name": "create",
          "static": 1,
          "params": [
            {
              "name": "arguments",
              "description": "",
              "multiple": true
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "inherited": true,
          "inheritedFrom": "Ember.Mixin"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 579,
          "itemtype": "method",
          "name": "reopen",
          "params": [
            {
              "name": "arguments",
              "description": "",
              "multiple": true
            }
          ],
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "inherited": true,
          "inheritedFrom": "Ember.Mixin"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 614,
          "itemtype": "method",
          "name": "apply",
          "params": [
            {
              "name": "obj",
              "description": ""
            }
          ],
          "return": {
            "description": "applied object"
          },
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "inherited": true,
          "inheritedFrom": "Ember.Mixin"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 642,
          "itemtype": "method",
          "name": "detect",
          "params": [
            {
              "name": "obj",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "inherited": true,
          "inheritedFrom": "Ember.Mixin"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 49,
          "description": "<html><head></head><body><p>The action to be sent when the user presses the return key.</p>\n<p>This is similar to the <code>{{action}}</code> helper, but is fired when\nthe user presses the return key when editing a text field, and sends\nthe value of the field as the context.</p>\n</body></html>",
          "itemtype": "property",
          "name": "action",
          "type": "String",
          "default": "null",
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 62,
          "description": "<html><head></head><body><p>The event that should send the action.</p>\n<p>Options are:</p>\n<ul>\n<li><code>enter</code>: the user pressed enter</li>\n<li><code>keyPress</code>: the user pressed a key</li>\n</ul>\n</body></html>",
          "itemtype": "property",
          "name": "onEvent",
          "type": "String",
          "default": "enter",
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-handlebars/lib/controls/text_support.js",
          "line": 76,
          "description": "<html><head></head><body><p>Whether the <code>keyUp</code> event that triggers an <code>action</code> to be sent continues\npropagating to other views.</p>\n<p>By default, when the user presses the return key on their keyboard and\nthe text field has an <code>action</code> set, the action will be sent to the view&apos;s\ncontroller and the key event will stop propagating.</p>\n<p>If you would like parent views to receive the <code>keyUp</code> event even after an\naction has been dispatched, set <code>bubbles</code> to true.</p>\n</body></html>",
          "itemtype": "property",
          "name": "bubbles",
          "type": "Boolean",
          "default": "false",
          "class": "Ember.TextSupport",
          "module": "ember",
          "submodule": "ember-handlebars",
          "namespace": "Ember"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": {
          "id": "ember-1.9.0-Ember.Mixin",
          "type": "class"
        }
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-1.9.0-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-1.9.0",
          "type": "project-version"
        }
      }
    }
  }
}