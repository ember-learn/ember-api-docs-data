{
  "data": {
    "id": "ember-2.15.3-Ember.Location",
    "type": "namespace",
    "attributes": {
      "name": "Ember.Location",
      "shortname": "Ember.Location",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember",
      "submodule": "ember-routing",
      "namespace": "Ember",
      "file": "packages/ember-routing/lib/location/api.js",
      "line": 10,
      "description": "Ember.Location returns an instance of the correct implementation of\nthe `location` API.\n\n## Implementations\n\nYou can pass an implementation name (`hash`, `history`, `none`, `auto`) to force a\nparticular implementation to be used in your application.\n\nSee [Ember.Location.HashLocation](/api/classes/Ember.Location.HashLocation).\nSee [Ember.Location.HistoryLocation](/api/classes/Ember.Location.HistoryLocation).\nSee [Ember.Location.NoneLocation](/api/classes/Ember.Location.NoneLocation).\nSee [Ember.Location.AutoLocation](/api/classes/Ember.Location.AutoLocation).\n\n\n## Location API\n\nEach location implementation must provide the following methods:\n\n* implementation: returns the string name used to reference the implementation.\n* getURL: returns the current URL.\n* setURL(path): sets the current URL.\n* replaceURL(path): replace the current URL (optional).\n* onUpdateURL(callback): triggers the callback when the URL changes.\n* formatURL(url): formats `url` to be placed into `href` attribute.\n* detect() (optional): instructs the location to do any feature detection\n    necessary. If the location needs to redirect to a different URL, it\n    can cancel routing by setting the `cancelRouterSetup` property on itself\n    to `false`.\n\nCalling setURL or replaceURL will not trigger onUpdateURL callbacks.\n\n## Custom implementation\n\nEmber scans `app/locations/*` for extending the Location API.\n\nExample:\n\n```javascript\nimport Ember from 'ember';\n\nconst { HistoryLocation } = Ember;\n\nexport default class MyHistory {\n  implementation: 'my-custom-history',\n  constructor() {\n    this._history = HistoryLocation.create(...arguments);\n  }\n  create() {\n    return new this(...arguments);\n  }\n  pushState(path) {\n     this._history.pushState(path);\n  }\n}\n```",
      "static": 1,
      "access": "private",
      "tagname": "",
      "methods": [
        {
          "file": "packages/ember-routing/lib/location/api.js",
          "line": 73,
          "description": "This is deprecated in favor of using the container to lookup the location\nimplementation as desired.\n\nFor example:\n\n```javascript\n// Given a location registered as follows:\ncontainer.register('location:history-test', HistoryTestLocation);\n\n// You could create a new instance via:\ncontainer.lookup('location:history-test');\n```",
          "itemtype": "method",
          "name": "create",
          "params": [
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "an instance of an implementation of the `location` API",
            "type": "Object"
          },
          "deprecated": true,
          "deprecationMessage": "Use the container to lookup the location implementation that you\n need.",
          "access": "private",
          "tagname": "",
          "class": "Ember.Location",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-routing/lib/location/api.js",
          "line": 107,
          "description": "Returns the current `location.hash` by parsing location.href since browsers\ninconsistently URL-decode `location.hash`.\n\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=483304",
          "access": "private",
          "tagname": "",
          "itemtype": "method",
          "name": "getHash",
          "since": "1.4.0",
          "class": "Ember.Location",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-2.15.3-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.15.3",
          "type": "project-version"
        }
      }
    }
  }
}