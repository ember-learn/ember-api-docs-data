{
  "data": {
    "id": "ember-2.15.3-Ember.AutoLocation",
    "type": "namespace",
    "attributes": {
      "name": "Ember.AutoLocation",
      "shortname": "Ember.AutoLocation",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember",
      "submodule": "ember-routing",
      "namespace": "Ember",
      "file": "packages/ember-routing/lib/location/auto_location.js",
      "line": 23,
      "description": "Ember.AutoLocation will select the best location option based off browser\nsupport with the priority order: history, hash, none.\n\nClean pushState paths accessed by hashchange-only browsers will be redirected\nto the hash-equivalent and vice versa so future transitions are consistent.\n\nKeep in mind that since some of your users will use `HistoryLocation`, your\nserver must serve the Ember app at all the routes you define.\n\nBrowsers that support the `history` API will use `HistoryLocation`, those that\ndo not, but still support the `hashchange` event will use `HashLocation`, and\nin the rare case neither is supported will use `NoneLocation`.\n\nExample:\n\n```javascript\nApp.Router.map(function() {\n  this.route('posts', function() {\n    this.route('new');\n  });\n});\n\nApp.Router.reopen({\n  location: 'auto'\n});\n```\n\nThis will result in a posts.new url of `/posts/new` for modern browsers that\nsupport the `history` api or `/#/posts/new` for older ones, like Internet\nExplorer 9 and below.\n\nWhen a user visits a link to your application, they will be automatically\nupgraded or downgraded to the appropriate `Location` class, with the URL\ntransformed accordingly, if needed.\n\nKeep in mind that since some of your users will use `HistoryLocation`, your\nserver must serve the Ember app at all the routes you define.",
      "static": 1,
      "access": "protected",
      "tagname": "",
      "methods": [
        {
          "file": "packages/ember-routing/lib/location/auto_location.js",
          "line": 305,
          "access": "private",
          "tagname": "Returns the current path as it should appear for HashLocation supported\nbrowsers. This may very well differ from the real current path.",
          "itemtype": "method",
          "name": "_getHashPath",
          "class": "Ember.AutoLocation",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "packages/ember-routing/lib/location/auto_location.js",
          "line": 68,
          "access": "private",
          "tagname": "The browser's `location` object. This is typically equivalent to\n`window.location`, but may be overridden for testing.",
          "itemtype": "property",
          "name": "location",
          "default": "environment.location",
          "class": "Ember.AutoLocation",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-routing/lib/location/auto_location.js",
          "line": 79,
          "access": "private",
          "tagname": "The browser's `history` object. This is typically equivalent to\n`window.history`, but may be overridden for testing.",
          "since": "1.5.1",
          "itemtype": "property",
          "name": "history",
          "default": "environment.history",
          "class": "Ember.AutoLocation",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-routing/lib/location/auto_location.js",
          "line": 91,
          "access": "private",
          "tagname": "The user agent's global variable. In browsers, this will be `window`.",
          "since": "1.11",
          "itemtype": "property",
          "name": "global",
          "default": "window",
          "class": "Ember.AutoLocation",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-routing/lib/location/auto_location.js",
          "line": 102,
          "access": "private",
          "tagname": "The browser's `userAgent`. This is typically equivalent to\n`navigator.userAgent`, but may be overridden for testing.",
          "since": "1.5.1",
          "itemtype": "property",
          "name": "userAgent",
          "default": "environment.history",
          "class": "Ember.AutoLocation",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-routing/lib/location/auto_location.js",
          "line": 114,
          "access": "private",
          "tagname": "This property is used by the router to know whether to cancel the routing\nsetup process, which is needed while we redirect the browser.",
          "since": "1.5.1",
          "itemtype": "property",
          "name": "cancelRouterSetup",
          "default": "false",
          "class": "Ember.AutoLocation",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-routing/lib/location/auto_location.js",
          "line": 126,
          "access": "private",
          "tagname": "Will be pre-pended to path upon state change.",
          "since": "1.5.1",
          "itemtype": "property",
          "name": "rootURL",
          "default": "'/'",
          "class": "Ember.AutoLocation",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-2.15.3-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.15.3",
          "type": "project-version"
        }
      }
    }
  }
}