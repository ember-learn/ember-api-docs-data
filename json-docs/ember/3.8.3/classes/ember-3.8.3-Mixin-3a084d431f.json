{
  "data": {
    "id": "ember-3.8.3-Mixin",
    "type": "class",
    "attributes": {
      "name": "Mixin",
      "shortname": "Mixin",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember/object",
      "namespace": "",
      "file": "packages/@ember/-internals/metal/lib/mixin.ts",
      "line": 424,
      "description": "<html><head></head><body><p>The <code>Mixin</code> class allows you to create mixins, whose properties can be\nadded to other classes. For instance,</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"title class_\">Mixin</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/object/mixin&apos;</span>;\n\n<span class=\"keyword\">const</span> <span class=\"title class_\">EditableMixin</span> = <span class=\"title class_\">Mixin</span>.<span class=\"title function_\">create</span>({\n  <span class=\"title function_\">edit</span>(<span class=\"params\"></span>) {\n    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&apos;starting to edit&apos;</span>);\n    <span class=\"variable language_\">this</span>.<span class=\"title function_\">set</span>(<span class=\"string\">&apos;isEditing&apos;</span>, <span class=\"literal\">true</span>);\n  },\n  <span class=\"attr\">isEditing</span>: <span class=\"literal\">false</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> EmberObject <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/object&apos;</span>;\n<span class=\"keyword\">import</span> EditableMixin <span class=\"keyword\">from</span> <span class=\"string\">&apos;../mixins/editable&apos;</span>;\n\n// Mix mixins <span class=\"keyword\">into</span> classes <span class=\"keyword\">by</span> <span class=\"keyword\">passing</span> them <span class=\"keyword\">as</span> the first arguments <span class=\"keyword\">to</span>\n// `.extend.`\nconst <span class=\"keyword\">Comment</span> = EmberObject.extend(EditableMixin, {\n  post: <span class=\"keyword\">null</span>\n});\n\nlet <span class=\"keyword\">comment</span> = <span class=\"keyword\">Comment</span>.<span class=\"keyword\">create</span>({\n  post: somePost\n});\n\n<span class=\"keyword\">comment</span>.edit(); // outputs <span class=\"string\">&apos;starting to edit&apos;</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Note that Mixins are created with <code>Mixin.create</code>, not\n<code>Mixin.extend</code>.</p>\n<p>Note that mixins extend a constructor&apos;s prototype so arrays and object literals\ndefined as properties will be shared amongst objects that implement the mixin.\nIf you want to define a property in a mixin that is not shared, you can define\nit either as a computed property or have it be created on initialization of the object.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre>// filters <span class=\"type\">array</span> will be <span class=\"keyword\">shared</span> amongst <span class=\"type\">any</span> <span class=\"keyword\">object</span> implementing <span class=\"keyword\">mixin</span>\n<span class=\"keyword\">import</span> <span class=\"type\">Mixin</span> <span class=\"keyword\">from</span> &apos;@ember/<span class=\"keyword\">object</span>/<span class=\"keyword\">mixin</span>&apos;;\n<span class=\"keyword\">import</span> { A } <span class=\"keyword\">from</span> &apos;@ember/<span class=\"type\">array</span>&apos;;\n\n<span class=\"keyword\">const</span> <span class=\"type\">FilterableMixin</span> = <span class=\"type\">Mixin</span>.create({\n  filters: A()\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"title class_\">Mixin</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/object/mixin&apos;</span>;\n<span class=\"keyword\">import</span> { A } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/array&apos;</span>;\n<span class=\"keyword\">import</span> { computed } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/object&apos;</span>;\n\n<span class=\"comment\">// filters will be a separate array for every object implementing the mixin</span>\n<span class=\"keyword\">const</span> <span class=\"title class_\">FilterableMixin</span> = <span class=\"title class_\">Mixin</span>.<span class=\"title function_\">create</span>({\n  <span class=\"attr\">filters</span>: <span class=\"title function_\">computed</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) {\n    <span class=\"keyword\">return</span> <span class=\"title function_\">A</span>();\n  })\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"title class_\">Mixin</span> <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/object/mixin&apos;</span>;\n<span class=\"keyword\">import</span> { A } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/array&apos;</span>;\n\n<span class=\"comment\">// filters will be created as a separate array during the object&apos;s initialization</span>\n<span class=\"keyword\">const</span> <span class=\"title class_\">Filterable</span> = <span class=\"title class_\">Mixin</span>.<span class=\"title function_\">create</span>({\n  <span class=\"attr\">filters</span>: <span class=\"literal\">null</span>,\n\n  <span class=\"title function_\">init</span>(<span class=\"params\"></span>) {\n    <span class=\"variable language_\">this</span>.<span class=\"title function_\">_super</span>(...<span class=\"variable language_\">arguments</span>);\n    <span class=\"variable language_\">this</span>.<span class=\"title function_\">set</span>(<span class=\"string\">&quot;filters&quot;</span>, <span class=\"title function_\">A</span>());\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "packages/@ember/-internals/metal/lib/mixin.ts",
          "line": 412,
          "itemtype": "method",
          "name": "mixin",
          "params": [
            {
              "name": "obj",
              "description": ""
            },
            {
              "name": "mixins",
              "description": "",
              "multiple": true
            }
          ],
          "return": {
            "description": "obj"
          },
          "access": "private",
          "tagname": "",
          "class": "Mixin",
          "module": "@ember/object"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": [
          {
            "type": "class",
            "id": "ember-3.8.3-Ember.TargetActionSupport"
          },
          {
            "type": "class",
            "id": "ember-3.8.3-Ember.TextSupport"
          }
        ]
      },
      "module": {
        "data": {
          "id": "ember-3.8.3-@ember/object",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-3.8.3",
          "type": "project-version"
        }
      }
    }
  }
}