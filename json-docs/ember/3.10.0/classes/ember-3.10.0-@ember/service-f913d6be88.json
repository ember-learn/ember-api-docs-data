{
  "data": {
    "id": "ember-3.10.0-@ember/service",
    "type": "class",
    "attributes": {
      "name": "@ember/service",
      "shortname": "@ember/service",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember/service",
      "namespace": "",
      "methods": [
        {
          "file": "packages/@ember/service/index.js",
          "line": 9,
          "description": "<html><head></head><body><p>Creates a property that lazily looks up a service in the container. There are\nno restrictions as to what objects a service can be injected into.</p>\n<p>Example:</p>\n<p>```app/routes/application.js\nimport Route from &apos;@ember/routing/route&apos;;\nimport { inject as service } from &apos;@ember/service&apos;;</p>\n<p>export default class ApplicationRoute extends Route {</p>\n</body></html>",
          "service": "('auth') authManager;\n\n  model() {\n    return this.authManager.findCurrentUser();\n  }\n}\n```\n\nClassic Class Example:\n\n```app/routes/application.js\nimport Route from '@ember/routing/route';\nimport { inject as service } from '@ember/service';\n\nexport default Route.extend({\n  authManager: service('auth'),\n\n  model() {\n    return this.get('authManager').findCurrentUser();\n  }\n});\n```\n\nThis example will create an `authManager` property on the application route\nthat looks up the `auth` service in the container, making it easily accessible\nin the `model` hook.",
          "itemtype": "method",
          "name": "inject",
          "static": 1,
          "since": "1.10.0",
          "params": [
            {
              "name": "name",
              "description": "(optional) name of the service to inject, defaults to\n       the property's name",
              "type": "String"
            }
          ],
          "return": {
            "description": "injection decorator instance",
            "type": "ComputedDecorator"
          },
          "access": "public",
          "tagname": "",
          "class": "@ember/service",
          "module": "@ember/service"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-3.10.0-@ember/service",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-3.10.0",
          "type": "project-version"
        }
      }
    }
  }
}