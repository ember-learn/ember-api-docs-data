{
  "data": {
    "id": "ember-1.3.2-Ember.EnumerableUtils",
    "type": "namespace",
    "attributes": {
      "name": "Ember.EnumerableUtils",
      "shortname": "Ember.EnumerableUtils",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember",
      "namespace": "Ember",
      "file": "../packages/ember-metal/lib/enumerable_utils.js",
      "line": 10,
      "description": "<html><head></head><body><p>Defines some convenience methods for working with Enumerables.\n<code>Ember.EnumerableUtils</code> uses <code>Ember.ArrayPolyfills</code> when necessary.</p>\n</body></html>",
      "static": 1,
      "version": "1.3.2",
      "since": "1.3.2",
      "methods": [
        {
          "file": "../packages/ember-metal/lib/enumerable_utils.js",
          "line": 19,
          "description": "<html><head></head><body><p>Calls the map function on the passed object with a specified callback. This\nuses <code>Ember.ArrayPolyfill</code>&apos;s-map method when necessary.</p>\n</body></html>",
          "itemtype": "method",
          "name": "map",
          "params": [
            {
              "name": "obj",
              "description": "The object that should be mapped",
              "type": "Object"
            },
            {
              "name": "callback",
              "description": "The callback to execute",
              "type": "Function"
            },
            {
              "name": "thisArg",
              "description": "Value to use as this when executing *callback*",
              "type": "Object"
            }
          ],
          "return": {
            "description": "An array of mapped values.",
            "type": "Array"
          },
          "class": "Ember.EnumerableUtils",
          "module": "ember",
          "namespace": "Ember",
          "version": "1.3.2",
          "since": "1.3.2"
        },
        {
          "file": "../packages/ember-metal/lib/enumerable_utils.js",
          "line": 34,
          "description": "<html><head></head><body><p>Calls the forEach function on the passed object with a specified callback. This\nuses <code>Ember.ArrayPolyfill</code>&apos;s-forEach method when necessary.</p>\n</body></html>",
          "itemtype": "method",
          "name": "forEach",
          "params": [
            {
              "name": "obj",
              "description": "The object to call forEach on",
              "type": "Object"
            },
            {
              "name": "callback",
              "description": "The callback to execute",
              "type": "Function"
            },
            {
              "name": "thisArg",
              "description": "Value to use as this when executing *callback*",
              "type": "Object"
            }
          ],
          "class": "Ember.EnumerableUtils",
          "module": "ember",
          "namespace": "Ember",
          "version": "1.3.2",
          "since": "1.3.2"
        },
        {
          "file": "../packages/ember-metal/lib/enumerable_utils.js",
          "line": 48,
          "description": "<html><head></head><body><p>Calls the filter function on the passed object with a specified callback. This\nuses <code>Ember.ArrayPolyfill</code>&apos;s-filter method when necessary.</p>\n</body></html>",
          "itemtype": "method",
          "name": "filter",
          "params": [
            {
              "name": "obj",
              "description": "The object to call filter on",
              "type": "Object"
            },
            {
              "name": "callback",
              "description": "The callback to execute",
              "type": "Function"
            },
            {
              "name": "thisArg",
              "description": "Value to use as this when executing *callback*",
              "type": "Object"
            }
          ],
          "return": {
            "description": "An array containing the filtered values",
            "type": "Array"
          },
          "class": "Ember.EnumerableUtils",
          "module": "ember",
          "namespace": "Ember",
          "version": "1.3.2",
          "since": "1.3.2"
        },
        {
          "file": "../packages/ember-metal/lib/enumerable_utils.js",
          "line": 63,
          "description": "<html><head></head><body><p>Calls the indexOf function on the passed object with a specified callback. This\nuses <code>Ember.ArrayPolyfill</code>&apos;s-indexOf method when necessary.</p>\n</body></html>",
          "itemtype": "method",
          "name": "indexOf",
          "params": [
            {
              "name": "obj",
              "description": "The object to call indexOn on",
              "type": "Object"
            },
            {
              "name": "callback",
              "description": "The callback to execute",
              "type": "Function"
            },
            {
              "name": "index",
              "description": "The index to start searching from",
              "type": "Object"
            }
          ],
          "class": "Ember.EnumerableUtils",
          "module": "ember",
          "namespace": "Ember",
          "version": "1.3.2",
          "since": "1.3.2"
        },
        {
          "file": "../packages/ember-metal/lib/enumerable_utils.js",
          "line": 77,
          "description": "<html><head></head><body><p>Returns an array of indexes of the first occurrences of the passed elements\non the passed object.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n</pre></td>\n              <td class=\"code\"><pre> var array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];\n Ember.EnumerableUtils.indexesOf(array, [<span class=\"number\">2</span>, <span class=\"number\">5</span>]); <span class=\"comment\">// [1, 4]</span>\n\n var fubar = <span class=\"string\">&quot;Fubarr&quot;</span>;\n Ember.EnumerableUtils.indexesOf(fubar, [&apos;b&apos;, &apos;r&apos;]); <span class=\"comment\">// [2, 4]</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "indexesOf",
          "params": [
            {
              "name": "obj",
              "description": "The object to check for element indexes",
              "type": "Object"
            },
            {
              "name": "elements",
              "description": "The elements to search for on *obj*",
              "type": "Array"
            }
          ],
          "return": {
            "description": "An array of indexes.",
            "type": "Array"
          },
          "class": "Ember.EnumerableUtils",
          "module": "ember",
          "namespace": "Ember",
          "version": "1.3.2",
          "since": "1.3.2"
        },
        {
          "file": "../packages/ember-metal/lib/enumerable_utils.js",
          "line": 102,
          "description": "<html><head></head><body><p>Adds an object to an array. If the array already includes the object this\nmethod has no effect.</p>\n</body></html>",
          "itemtype": "method",
          "name": "addObject",
          "params": [
            {
              "name": "array",
              "description": "The array the passed item should be added to",
              "type": "Array"
            },
            {
              "name": "item",
              "description": "The item to add to the passed array",
              "type": "Object"
            }
          ],
          "return": {
            "description": "'undefined'"
          },
          "class": "Ember.EnumerableUtils",
          "module": "ember",
          "namespace": "Ember",
          "version": "1.3.2",
          "since": "1.3.2"
        },
        {
          "file": "../packages/ember-metal/lib/enumerable_utils.js",
          "line": 117,
          "description": "<html><head></head><body><p>Removes an object from an array. If the array does not contain the passed\nobject this method has no effect.</p>\n</body></html>",
          "itemtype": "method",
          "name": "removeObject",
          "params": [
            {
              "name": "array",
              "description": "The array to remove the item from.",
              "type": "Array"
            },
            {
              "name": "item",
              "description": "The item to remove from the passed array.",
              "type": "Object"
            }
          ],
          "return": {
            "description": "'undefined'"
          },
          "class": "Ember.EnumerableUtils",
          "module": "ember",
          "namespace": "Ember",
          "version": "1.3.2",
          "since": "1.3.2"
        },
        {
          "file": "../packages/ember-metal/lib/enumerable_utils.js",
          "line": 152,
          "description": "<html><head></head><body><p>Replaces objects in an array with the passed objects.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>  var<span class=\"built_in\"> array </span>= [1,2,3];\n  Ember.EnumerableUtils.replace(array, 1, 2, [4, 5]); // [1, 4, 5]\n\n  var<span class=\"built_in\"> array </span>= [1,2,3];\n  Ember.EnumerableUtils.replace(array, 1, 1, [4, 5]); // [1, 4, 5, 3]\n\n  var<span class=\"built_in\"> array </span>= [1,2,3];\n  Ember.EnumerableUtils.replace(array, 10, 1, [4, 5]); // [1, 2, 3, 4, 5]</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "replace",
          "params": [
            {
              "name": "array",
              "description": "The array the objects should be inserted into.",
              "type": "Array"
            },
            {
              "name": "idx",
              "description": "Starting index in the array to replace. If *idx* >=\nlength, then append to the end of the array.",
              "type": "Number"
            },
            {
              "name": "amt",
              "description": "Number of elements that should be remove from the array,\nstarting at *idx*",
              "type": "Number"
            },
            {
              "name": "objects",
              "description": "An array of zero or more objects that should be\ninserted into the array at *idx*",
              "type": "Array"
            }
          ],
          "return": {
            "description": "The changed array.",
            "type": "Array"
          },
          "class": "Ember.EnumerableUtils",
          "module": "ember",
          "namespace": "Ember",
          "version": "1.3.2",
          "since": "1.3.2"
        },
        {
          "file": "../packages/ember-metal/lib/enumerable_utils.js",
          "line": 185,
          "description": "<html><head></head><body><p>Calculates the intersection of two arrays. This method returns a new array\nfilled with the records that the two passed arrays share with each other. \nIf there is no intersection, an empty array will be returned.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td>\n              <td class=\"code\"><pre>var array1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];\nvar array2 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>];\n\nEmber.EnumerableUtils.intersection(array1, array2); <span class=\"comment\">// [1, 3, 5]</span>\n\nvar array1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\nvar array2 = [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n\nEmber.EnumerableUtils.intersection(array1, array2); <span class=\"comment\">// []</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "intersection",
          "params": [
            {
              "name": "array1",
              "description": "The first array",
              "type": "Array"
            },
            {
              "name": "array2",
              "description": "The second array",
              "type": "Array"
            }
          ],
          "return": {
            "description": "The intersection of the two passed arrays.",
            "type": "Array"
          },
          "class": "Ember.EnumerableUtils",
          "module": "ember",
          "namespace": "Ember",
          "version": "1.3.2",
          "since": "1.3.2"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-1.3.2-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-1.3.2",
          "type": "project-version"
        }
      }
    }
  }
}