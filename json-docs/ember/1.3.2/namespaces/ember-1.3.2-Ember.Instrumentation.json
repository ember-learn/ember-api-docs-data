{
  "data": {
    "id": "ember-1.3.2-Ember.Instrumentation",
    "type": "namespace",
    "attributes": {
      "name": "Ember.Instrumentation",
      "shortname": "Ember.Instrumentation",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember-metal",
      "namespace": "Ember.Instrumentation",
      "file": "../packages/ember-metal/lib/instrumentation.js",
      "line": 3,
      "description": "The purpose of the Ember Instrumentation module is\nto provide efficient, general-purpose instrumentation\nfor Ember.\n\nSubscribe to a listener by using `Ember.subscribe`:\n\n```javascript\nEmber.subscribe(\"render\", {\n  before: function(name, timestamp, payload) {\n\n  },\n\n  after: function(name, timestamp, payload) {\n\n  }\n});\n```\n\nIf you return a value from the `before` callback, that same\nvalue will be passed as a fourth parameter to the `after`\ncallback.\n\nInstrument a block of code by using `Ember.instrument`:\n\n```javascript\nEmber.instrument(\"render.handlebars\", payload, function() {\n  // rendering logic\n}, binding);\n```\n\nEvent names passed to `Ember.instrument` are namespaced\nby periods, from more general to more specific. Subscribers\ncan listen for events by whatever level of granularity they\nare interested in.\n\nIn the above example, the event is `render.handlebars`,\nand the subscriber listened for all events beginning with\n`render`. It would receive callbacks for events named\n`render`, `render.handlebars`, `render.container`, or\neven `render.handlebars.layout`.",
      "static": 1,
      "methods": [
        {
          "file": "../packages/ember-metal/lib/expand_properties.js",
          "line": 13,
          "description": "Expands `pattern`, invoking `callback` for each expansion.\n\nThe only pattern supported is brace-expansion, anything else will be passed\nonce to `callback` directly. Brace expansion can only appear at the end of a\npattern, for example as the last item in a chain.\n\nExample\n```js\nfunction echo(arg){ console.log(arg); }\n\nEmber.expandProperties('foo.bar', echo);        //=> 'foo.bar'\nEmber.expandProperties('{foo,bar}', echo);      //=> 'foo', 'bar'\nEmber.expandProperties('foo.{bar,baz}', echo);  //=> 'foo.bar', 'foo.baz'\nEmber.expandProperties('{foo,bar}.baz', echo);  //=> '{foo,bar}.baz'\n```",
          "itemtype": "method",
          "name": "expandProperties",
          "access": "private",
          "tagname": "",
          "params": [
            {
              "name": "pattern",
              "description": "The property pattern to expand.",
              "type": "String"
            },
            {
              "name": "callback",
              "description": "The callback to invoke.  It is invoked once per\nexpansion, and is passed the expansion.",
              "type": "Function"
            }
          ],
          "class": "Ember.Instrumentation",
          "module": "ember-metal"
        },
        {
          "file": "../packages/ember-metal/lib/get_properties.js",
          "line": 6,
          "description": "To get multiple properties at once, call `Ember.getProperties`\nwith an object followed by a list of strings or an array:\n\n```javascript\nEmber.getProperties(record, 'firstName', 'lastName', 'zipCode');  // { firstName: 'John', lastName: 'Doe', zipCode: '10011' }\n```\n\nis equivalent to:\n\n```javascript\nEmber.getProperties(record, ['firstName', 'lastName', 'zipCode']);  // { firstName: 'John', lastName: 'Doe', zipCode: '10011' }\n```",
          "itemtype": "method",
          "name": "getProperties",
          "params": [
            {
              "name": "obj",
              "description": ""
            },
            {
              "name": "list",
              "description": "of keys to get",
              "type": "String...|Array"
            }
          ],
          "return": {
            "description": "",
            "type": "Hash"
          },
          "class": "Ember.Instrumentation",
          "module": "ember-metal"
        },
        {
          "file": "../packages/ember-metal/lib/instrumentation.js",
          "line": 74,
          "description": "Notifies event's subscribers, calls `before` and `after` hooks.",
          "itemtype": "method",
          "name": "instrument",
          "params": [
            {
              "name": "name",
              "description": "Namespaced event name.",
              "type": "String",
              "optional": true
            },
            {
              "name": "payload",
              "description": "",
              "type": "Object"
            },
            {
              "name": "callback",
              "description": "Function that you're instrumenting.",
              "type": "Function"
            },
            {
              "name": "binding",
              "description": "Context that instrument function is called with.",
              "type": "Object"
            }
          ],
          "class": "Ember.Instrumentation",
          "module": "ember-metal",
          "namespace": "Ember.Instrumentation"
        },
        {
          "file": "../packages/ember-metal/lib/instrumentation.js",
          "line": 133,
          "description": "Subscribes to a particular event or instrumented block of code.",
          "itemtype": "method",
          "name": "subscribe",
          "params": [
            {
              "name": "pattern",
              "description": "Namespaced event name.",
              "type": "String",
              "optional": true
            },
            {
              "name": "object",
              "description": "Before and After hooks.",
              "type": "Object",
              "optional": true
            }
          ],
          "return": {
            "description": "",
            "type": "Subscriber"
          },
          "class": "Ember.Instrumentation",
          "module": "ember-metal",
          "namespace": "Ember.Instrumentation"
        },
        {
          "file": "../packages/ember-metal/lib/instrumentation.js",
          "line": 171,
          "description": "Unsubscribes from a particular event or instrumented block of code.",
          "itemtype": "method",
          "name": "unsubscribe",
          "params": [
            {
              "name": "subscriber",
              "description": "",
              "type": "Object",
              "optional": true
            }
          ],
          "class": "Ember.Instrumentation",
          "module": "ember-metal",
          "namespace": "Ember.Instrumentation"
        },
        {
          "file": "../packages/ember-metal/lib/instrumentation.js",
          "line": 192,
          "description": "Resets `Ember.Instrumentation` by flushing list of subscribers.",
          "itemtype": "method",
          "name": "reset",
          "class": "Ember.Instrumentation",
          "module": "ember-metal",
          "namespace": "Ember.Instrumentation"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-1.3.2-ember-metal",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-1.3.2",
          "type": "project-version"
        }
      }
    }
  }
}