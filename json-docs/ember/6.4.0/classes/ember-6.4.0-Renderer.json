{
  "data": {
    "id": "ember-6.4.0-Renderer",
    "type": "class",
    "attributes": {
      "name": "Renderer",
      "shortname": "Renderer",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember/renderer",
      "namespace": "",
      "file": "packages/@ember/renderer/index.ts",
      "line": 6,
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "packages/@ember/renderer/index.ts",
          "line": 11,
          "description": "Returns a promise which will resolve when rendering has completed. In\nthis context, rendering is completed when all auto-tracked state that is\nconsumed in the template (including any tracked state in models, services,\netc. that are then used in a template) has been updated in the DOM.\n\nFor example, in a test you might want to update some tracked state and\nthen run some assertions after rendering has completed. You _could_ use\n`await settled()` in that location, but in some contexts you don't want to\nwait for full settledness (which includes test waiters, pending AJAX/fetch,\nrun loops, etc) but instead only want to know when that updated value has\nbeen rendered in the DOM. **THAT** is what `await renderSettled()` is\n_perfect_ for.\n\n```js\nimport { renderSettled } from '@ember/renderer';\nimport { render } from '@ember/test-helpers';\nimport { tracked } from '@glimmer/tracking';\nimport { hbs } from 'ember-cli-htmlbars';\nimport { setupRenderingTest } from 'my-app/tests/helpers';\nimport { module, test } from 'qunit';\n\nmodule('Integration | Component | profile-card', function (hooks) {\n  setupRenderingTest(hooks);\n\n  test(\"it renders the person's name\", async function (assert) {\n    class Person {\n      @tracked name = '';\n    }\n\n    this.person = new Person();\n    this.person.name = 'John';\n\n    await render(hbs`\n      <ProfileCard @name={{this.person.name}} />\n    `);\n\n    assert.dom().hasText('John');\n\n    this.person.name = 'Jane';\n\n    await renderSettled(); // Wait until rendering has completed.\n\n    assert.dom().hasText('Jane');\n  });\n});\n```",
          "itemtype": "method",
          "name": "renderSettled",
          "return": {
            "description": "a promise which fulfills when rendering has completed",
            "type": "Promise<void>"
          },
          "access": "public",
          "tagname": "",
          "class": "Renderer",
          "module": "@ember/renderer"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-6.4.0-@ember/renderer",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-6.4.0",
          "type": "project-version"
        }
      }
    }
  }
}