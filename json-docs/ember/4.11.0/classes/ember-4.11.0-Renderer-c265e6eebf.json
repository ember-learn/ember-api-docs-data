{
  "data": {
    "id": "ember-4.11.0-Renderer",
    "type": "class",
    "attributes": {
      "name": "Renderer",
      "shortname": "Renderer",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember/renderer",
      "namespace": "",
      "file": "packages/@ember/renderer/index.ts",
      "line": 6,
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "packages/@ember/renderer/index.ts",
          "line": 11,
          "description": "<html><head></head><body><p>Returns a promise which will resolve when rendering has completed. In\nthis context, rendering is completed when all auto-tracked state that is\nconsumed in the template (including any tracked state in models, services,\n  etc.  that are then used in a template) has been updated in the DOM.</p>\n<p>  For example, in a test you might want to update some tracked state and\n  then run some assertions after rendering has completed. You <em>could</em> use\n  <code>await settled()</code> in that location, but in some contexts you don&apos;t want to\n  wait for full settledness (which includes test waiters, pending AJAX/fetch,\n  run loops, etc) but instead only want to know when that updated value has\n  been rendered in the DOM. <strong>THAT</strong> is what <code>await renderSettled()</code> is <em>perfect</em>\n  for.</p>\n</body></html>",
          "itemtype": "method",
          "name": "renderSettled",
          "return": {
            "description": "a promise which fulfills when rendering has completed",
            "type": "Promise<void>"
          },
          "access": "public",
          "tagname": "",
          "class": "Renderer",
          "module": "@ember/renderer"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-4.11.0-@ember/renderer",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-4.11.0",
          "type": "project-version"
        }
      }
    }
  }
}