{
  "data": {
    "id": "ember-5.5.0-@ember/owner",
    "type": "class",
    "attributes": {
      "name": "@ember/owner",
      "shortname": "@ember/owner",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember/owner",
      "namespace": "",
      "methods": [
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 544,
          "description": "<html><head></head><body><p><code>setOwner</code> forces a new owner on a given object instance. This is primarily\nuseful in some testing cases.</p>\n</body></html>",
          "itemtype": "method",
          "name": "setOwner",
          "static": 1,
          "params": [
            {
              "name": "object",
              "description": "An object instance.",
              "type": "Object"
            },
            {
              "name": "object",
              "description": "The new owner object of the object instance.",
              "type": "Owner"
            }
          ],
          "since": "2.3.0",
          "access": "public",
          "tagname": "",
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 574,
          "description": "<html><head></head><body><p>Returns an object that can be used to provide an owner to a\nmanually created instance.</p>\n<p>Example:</p>\n<div class=\"highlight \">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { getOwner } <span class=\"keyword\">from</span> <span class=\"string\">'@ember/application'</span>;\n\nlet owner = getOwner(this);\n\n<span class=\"keyword\">User</span>.<span class=\"keyword\">create</span>(\n  <span class=\"keyword\">owner</span>.ownerInjection(),\n  { username: <span class=\"string\">'rwjblue'</span> }\n)</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "ownerInjection",
          "since": "2.3.0",
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 606,
          "description": "<html><head></head><body><p>Given a fullName return the corresponding factory.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "resolveRegistration",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "fullName's factory",
            "type": "Function"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 616,
          "description": "<html><head></head><body><p>Unregister a factory.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> Application <span class=\"keyword\">from</span> <span class=\"string\">'@ember/application'</span>;\n<span class=\"keyword\">import</span> EmberObject <span class=\"keyword\">from</span> <span class=\"string\">'@ember/object'</span>;\n\nlet App = Application.<span class=\"keyword\">create</span>();\nlet <span class=\"keyword\">User</span> = EmberObject.extend();\nApp.register(<span class=\"string\">'model:user'</span>, <span class=\"keyword\">User</span>);\n\nApp.resolveRegistration(<span class=\"string\">'model:user'</span>).<span class=\"keyword\">create</span>() instanceof <span class=\"keyword\">User</span> //=&gt; <span class=\"keyword\">true</span>\n\nApp.unregister(<span class=\"string\">'model:user'</span>)\nApp.resolveRegistration(<span class=\"string\">'model:user'</span>) === undefined //=&gt; <span class=\"keyword\">true</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "unregister",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            }
          ],
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 639,
          "description": "<html><head></head><body><p>Check if a factory is registered.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "hasRegistration",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 649,
          "description": "<html><head></head><body><p>Return a specific registered option for a particular factory.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registeredOption",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            },
            {
              "name": "optionName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "options",
            "type": "Object"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 663,
          "description": "<html><head></head><body><p>Register options for a particular factory.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registerOptions",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 673,
          "description": "<html><head></head><body><p>Return registered options for a particular factory.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registeredOptions",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "options",
            "type": "Object"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 683,
          "description": "<html><head></head><body><p>Allow registering options for all factories of a type.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"title class_\">Application</span> <span class=\"keyword\">from</span> <span class=\"string\">'@ember/application'</span>;\n\n<span class=\"keyword\">let</span> <span class=\"title class_\">App</span> = <span class=\"title class_\">Application</span>.<span class=\"title function_\">create</span>();\n<span class=\"keyword\">let</span> appInstance = <span class=\"title class_\">App</span>.<span class=\"title function_\">buildInstance</span>();\n\n<span class=\"comment\">// if all of type `connection` must not be singletons</span>\nappInstance.<span class=\"title function_\">registerOptionsForType</span>(<span class=\"string\">'connection'</span>, { <span class=\"attr\">singleton</span>: <span class=\"literal\">false</span> });\n\nappInstance.<span class=\"title function_\">register</span>(<span class=\"string\">'connection:twitter'</span>, <span class=\"title class_\">TwitterConnection</span>);\nappInstance.<span class=\"title function_\">register</span>(<span class=\"string\">'connection:facebook'</span>, <span class=\"title class_\">FacebookConnection</span>);\n\n<span class=\"keyword\">let</span> twitter = appInstance.<span class=\"title function_\">lookup</span>(<span class=\"string\">'connection:twitter'</span>);\n<span class=\"keyword\">let</span> twitter2 = appInstance.<span class=\"title function_\">lookup</span>(<span class=\"string\">'connection:twitter'</span>);\n\ntwitter === twitter2; <span class=\"comment\">// =&gt; false</span>\n\n<span class=\"keyword\">let</span> facebook = appInstance.<span class=\"title function_\">lookup</span>(<span class=\"string\">'connection:facebook'</span>);\n<span class=\"keyword\">let</span> facebook2 = appInstance.<span class=\"title function_\">lookup</span>(<span class=\"string\">'connection:facebook'</span>);\n\nfacebook === facebook2; <span class=\"comment\">// =&gt; false</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registerOptionsForType",
          "params": [
            {
              "name": "type",
              "description": "",
              "type": "String"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 716,
          "description": "<html><head></head><body><p>Return the registered options for all factories of a type.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registeredOptionsForType",
          "params": [
            {
              "name": "type",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "options",
            "type": "Object"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/owner/index.ts",
          "line": 41,
          "description": "<html><head></head><body><p>Framework objects in an Ember application (components, services, routes, etc.)\nare created via a factory and dependency injection system. Each of these\nobjects is the responsibility of an \"owner\", which handled its\ninstantiation and manages its lifetime.</p>\n<p><code>getOwner</code> fetches the owner object responsible for an instance. This can\nbe used to lookup or resolve other class instances, or register new factories\ninto the owner.</p>\n<p>For example, this component dynamically looks up a service based on the\n<code>audioType</code> passed as an argument:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">audio.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">Component</span> from '<span class=\"meta\">@glimmer</span>/component';\n<span class=\"keyword\">import</span> { action } from '<span class=\"meta\">@ember</span>/<span class=\"class\"><span class=\"keyword\">object</span>'</span>;\n<span class=\"keyword\">import</span> { getOwner } from '<span class=\"meta\">@ember</span>/application';\n\n<span class=\"comment\">// Usage:</span>\n<span class=\"comment\">//</span>\n<span class=\"comment\">//   &lt;PlayAudio @audioType={{@model.audioType}} @audioFile={{@model.file}}/&gt;</span>\n<span class=\"comment\">//</span>\n<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>{\n  get audioService() {\n    <span class=\"keyword\">return</span> getOwner(<span class=\"keyword\">this</span>)?.lookup(`service:${<span class=\"keyword\">this</span>.args.audioType}`);\n  }\n\n  <span class=\"meta\">@action</span>\n  onPlay() {\n    <span class=\"keyword\">this</span>.audioService?.play(<span class=\"keyword\">this</span>.args.audioFile);\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "getOwner",
          "static": 1,
          "params": [
            {
              "name": "object",
              "description": "An object with an owner.",
              "type": "Object"
            }
          ],
          "return": {
            "description": "An owner object.",
            "type": "Object"
          },
          "since": "2.3.0",
          "access": "public",
          "tagname": "",
          "class": "@ember/owner",
          "module": "@ember/owner"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-5.5.0-@ember/owner",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-5.5.0",
          "type": "project-version"
        }
      }
    }
  }
}