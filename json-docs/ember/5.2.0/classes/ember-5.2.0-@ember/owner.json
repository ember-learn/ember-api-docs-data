{
  "data": {
    "id": "ember-5.2.0-@ember/owner",
    "type": "class",
    "attributes": {
      "name": "@ember/owner",
      "shortname": "@ember/owner",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember/owner",
      "namespace": "",
      "methods": [
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 544,
          "description": "<html><head></head><body><p><code>setOwner</code> forces a new owner on a given object instance. This is primarily\nuseful in some testing cases.</p>\n</body></html>",
          "itemtype": "method",
          "name": "setOwner",
          "static": 1,
          "params": [
            {
              "name": "object",
              "description": "An object instance.",
              "type": "Object"
            },
            {
              "name": "object",
              "description": "The new owner object of the object instance.",
              "type": "Owner"
            }
          ],
          "since": "2.3.0",
          "access": "public",
          "tagname": "",
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 574,
          "description": "<html><head></head><body><p>Returns an object that can be used to provide an owner to a\nmanually created instance.</p>\n<p>Example:</p>\n<div class=\"highlight \">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { getOwner } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/application&apos;</span>;\n\nlet owner = getOwner(this);\n\n<span class=\"keyword\">User</span>.<span class=\"keyword\">create</span>(\n  <span class=\"keyword\">owner</span>.ownerInjection(),\n  { username: <span class=\"string\">&apos;rwjblue&apos;</span> }\n)</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    </body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "ownerInjection",
          "since": "2.3.0",
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 606,
          "description": "<html><head></head><body><p>Given a fullName return the corresponding factory.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "resolveRegistration",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "fullName's factory",
            "type": "Function"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 616,
          "description": "<html><head></head><body><p>Unregister a factory.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td>\n              <td class=\"code\"><pre>import Application from &apos;@ember/application&apos;;\nimport EmberObject from &apos;@ember/object&apos;;\n\n<span class=\"keyword\">let</span> App = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Application</span>.</span></span>create<span class=\"literal\">()</span>;\n<span class=\"keyword\">let</span> User = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">EmberObject</span>.</span></span>extend<span class=\"literal\">()</span>;\n<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">App</span>.</span></span>register(&apos;model:user&apos;, User);\n\n<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">App</span>.</span></span>resolve<span class=\"constructor\">Registration(&apos;<span class=\"params\">model</span>:<span class=\"params\">user</span>&apos;)</span>.create<span class=\"literal\">()</span> instanceof User <span class=\"comment\">//=&gt; true</span>\n\n<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">App</span>.</span></span>unregister(&apos;model:user&apos;)\n<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">App</span>.</span></span>resolve<span class=\"constructor\">Registration(&apos;<span class=\"params\">model</span>:<span class=\"params\">user</span>&apos;)</span><span class=\"operator\"> === </span>undefined <span class=\"comment\">//=&gt; true</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "unregister",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            }
          ],
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 639,
          "description": "<html><head></head><body><p>Check if a factory is registered.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "hasRegistration",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 649,
          "description": "<html><head></head><body><p>Return a specific registered option for a particular factory.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registeredOption",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            },
            {
              "name": "optionName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "options",
            "type": "Object"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 663,
          "description": "<html><head></head><body><p>Register options for a particular factory.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registerOptions",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 673,
          "description": "<html><head></head><body><p>Return registered options for a particular factory.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registeredOptions",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "options",
            "type": "Object"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 683,
          "description": "<html><head></head><body><p>Allow registering options for all factories of a type.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> Application from <span class=\"string\">&apos;@ember/application&apos;</span>;\n\n<span class=\"keyword\">let</span> App = Application.create();\n<span class=\"keyword\">let</span> appInstance = App.buildInstance();\n\n// <span class=\"keyword\">if</span> all <span class=\"keyword\">of</span> type `connection` must<span class=\"built_in\"> not</span> be singletons\nappInstance.registerOptionsForType(<span class=\"string\">&apos;connection&apos;</span>, { singleton:<span class=\"built_in\"> false</span> });\n\nappInstance.register(<span class=\"string\">&apos;connection:twitter&apos;</span>, TwitterConnection);\nappInstance.register(<span class=\"string\">&apos;connection:facebook&apos;</span>, FacebookConnection);\n\n<span class=\"keyword\">let</span> twitter = appInstance.lookup(<span class=\"string\">&apos;connection:twitter&apos;</span>);\n<span class=\"keyword\">let</span> twitter2 = appInstance.lookup(<span class=\"string\">&apos;connection:twitter&apos;</span>);\n\ntwitter === twitter2; // =&gt;<span class=\"built_in\"> false</span>\n\n<span class=\"keyword\">let</span> facebook = appInstance.lookup(<span class=\"string\">&apos;connection:facebook&apos;</span>);\n<span class=\"keyword\">let</span> facebook2 = appInstance.lookup(<span class=\"string\">&apos;connection:facebook&apos;</span>);\n\nfacebook === facebook2; // =&gt;<span class=\"built_in\"> false</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registerOptionsForType",
          "params": [
            {
              "name": "type",
              "description": "",
              "type": "String"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/-internals/owner/index.ts",
          "line": 716,
          "description": "<html><head></head><body><p>Return the registered options for all factories of a type.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "registeredOptionsForType",
          "params": [
            {
              "name": "type",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "options",
            "type": "Object"
          },
          "class": "@ember/owner",
          "module": "@ember/owner"
        },
        {
          "file": "packages/@ember/owner/index.ts",
          "line": 41,
          "description": "<html><head></head><body><p>Framework objects in an Ember application (components, services, routes, etc.)\nare created via a factory and dependency injection system. Each of these\nobjects is the responsibility of an &quot;owner&quot;, which handled its\ninstantiation and manages its lifetime.</p>\n<p><code>getOwner</code> fetches the owner object responsible for an instance. This can\nbe used to lookup or resolve other class instances, or register new factories\ninto the owner.</p>\n<p>For example, this component dynamically looks up a service based on the\n<code>audioType</code> passed as an argument:</p>\n<div class=\"highlight audio.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">audio.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> <span class=\"type\">Component</span> from &apos;<span class=\"meta\">@glimmer</span>/component&apos;;\n<span class=\"keyword\">import</span> { action } from &apos;<span class=\"meta\">@ember</span>/<span class=\"class\"><span class=\"keyword\">object</span>&apos;</span>;\n<span class=\"keyword\">import</span> { getOwner } from &apos;<span class=\"meta\">@ember</span>/application&apos;;\n\n<span class=\"comment\">// Usage:</span>\n<span class=\"comment\">//</span>\n<span class=\"comment\">//   &lt;PlayAudio @audioType={{@model.audioType}} @audioFile={{@model.file}}/&gt;</span>\n<span class=\"comment\">//</span>\nexport <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>{\n  get audioService() {\n    <span class=\"keyword\">return</span> getOwner(<span class=\"keyword\">this</span>)?.lookup(`service:${<span class=\"keyword\">this</span>.args.audioType}`);\n  }\n\n  <span class=\"meta\">@action</span>\n  onPlay() {\n    <span class=\"keyword\">this</span>.audioService?.play(<span class=\"keyword\">this</span>.args.audioFile);\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "getOwner",
          "static": 1,
          "params": [
            {
              "name": "object",
              "description": "An object with an owner.",
              "type": "Object"
            }
          ],
          "return": {
            "description": "An owner object.",
            "type": "Object"
          },
          "since": "2.3.0",
          "access": "public",
          "tagname": "",
          "class": "@ember/owner",
          "module": "@ember/owner"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-5.2.0-@ember/owner",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-5.2.0",
          "type": "project-version"
        }
      }
    }
  }
}