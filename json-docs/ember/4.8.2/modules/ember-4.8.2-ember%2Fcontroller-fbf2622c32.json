{
  "data": {
    "id": "ember-4.8.2-ember/controller",
    "type": "module",
    "attributes": {
      "name": "ember/controller",
      "submodules": {},
      "elements": {},
      "fors": {
        "Ember.ControllerMixin": 1,
        "@ember/controller": 1
      },
      "namespaces": {
        "Ember": 1
      },
      "tag": "module",
      "file": "packages/@ember/controller/index.ts",
      "line": 334,
      "parent": null,
      "publicclasses": [
        "Ember.Controller"
      ],
      "privateclasses": [
        "Ember.ControllerMixin"
      ],
      "staticfunctions": {
        "Ember.@ember/controller": [
          {
            "file": "packages/@ember/controller/index.ts",
            "line": 343,
            "description": "Creates a property that lazily looks up another controller in the container.\nCan only be used when defining another controller.\n\nExample:\n\n```app/controllers/post.js\nimport Controller, {\n  inject as controller\n} from '@ember/controller';\n\nexport default class PostController extends Controller {\n  @controller posts;\n}\n```\n\nClassic Class Example:\n\n```app/controllers/post.js\nimport Controller, {\n  inject as controller\n} from '@ember/controller';\n\nexport default Controller.extend({\n  posts: controller()\n});\n```\n\nThis example will create a `posts` property on the `post` controller that\nlooks up the `posts` controller in the container, making it easy to reference\nother controllers.",
            "itemtype": "method",
            "name": "inject",
            "static": 1,
            "since": "1.10.0",
            "params": [
              {
                "name": "name",
                "description": "(optional) name of the controller to inject, defaults to\n       the property's name",
                "type": "String"
              }
            ],
            "return": {
              "description": "injection decorator instance",
              "type": "ComputedDecorator"
            },
            "access": "public",
            "tagname": "",
            "class": "Ember.@ember/controller",
            "module": "ember/controller"
          }
        ]
      },
      "allstaticfunctions": {
        "Ember.@ember/controller": [
          {
            "file": "packages/@ember/controller/index.ts",
            "line": 343,
            "description": "Creates a property that lazily looks up another controller in the container.\nCan only be used when defining another controller.\n\nExample:\n\n```app/controllers/post.js\nimport Controller, {\n  inject as controller\n} from '@ember/controller';\n\nexport default class PostController extends Controller {\n  @controller posts;\n}\n```\n\nClassic Class Example:\n\n```app/controllers/post.js\nimport Controller, {\n  inject as controller\n} from '@ember/controller';\n\nexport default Controller.extend({\n  posts: controller()\n});\n```\n\nThis example will create a `posts` property on the `post` controller that\nlooks up the `posts` controller in the container, making it easy to reference\nother controllers.",
            "itemtype": "method",
            "name": "inject",
            "static": 1,
            "since": "1.10.0",
            "params": [
              {
                "name": "name",
                "description": "(optional) name of the controller to inject, defaults to\n       the property's name",
                "type": "String"
              }
            ],
            "return": {
              "description": "injection decorator instance",
              "type": "ComputedDecorator"
            },
            "access": "public",
            "tagname": "",
            "class": "Ember.@ember/controller",
            "module": "ember/controller"
          }
        ]
      },
      "version": "4.8.2"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-4.8.2",
          "type": "project-version"
        }
      }
    }
  }
}