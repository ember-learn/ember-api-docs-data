{
  "data": {
    "id": "ember-2.4.5-Ember.ObjectProxy",
    "type": "class",
    "attributes": {
      "name": "Ember.ObjectProxy",
      "shortname": "Ember.ObjectProxy",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember",
      "namespace": "Ember",
      "file": "packages/ember-runtime/lib/system/object_proxy.js",
      "line": 4,
      "description": "<html><head></head><body><p><code>Ember.ObjectProxy</code> forwards all properties not defined by the proxy itself\nto a proxied <code>content</code> object.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">object</span> = Ember.<span class=\"keyword\">Object</span>.<span class=\"keyword\">create</span>({\n  <span class=\"type\">name</span>: <span class=\"string\">&apos;Foo&apos;</span>\n});\n\nproxy = Ember.ObjectProxy.<span class=\"keyword\">create</span>({\n  content: <span class=\"keyword\">object</span>\n});\n\n// <span class=\"keyword\">Access</span> <span class=\"keyword\">and</span> change existing properties\nproxy.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;name&apos;</span>)          // <span class=\"string\">&apos;Foo&apos;</span>\nproxy.<span class=\"keyword\">set</span>(<span class=\"string\">&apos;name&apos;</span>, <span class=\"string\">&apos;Bar&apos;</span>);\n<span class=\"keyword\">object</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;name&apos;</span>)         // <span class=\"string\">&apos;Bar&apos;</span>\n\n// <span class=\"keyword\">Create</span> <span class=\"built_in\">new</span> <span class=\"string\">&apos;description&apos;</span> property <span class=\"keyword\">on</span> `<span class=\"keyword\">object</span>`\nproxy.<span class=\"keyword\">set</span>(<span class=\"string\">&apos;description&apos;</span>, <span class=\"string\">&apos;Foo is a whizboo baz&apos;</span>);\n<span class=\"keyword\">object</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;description&apos;</span>)  // <span class=\"string\">&apos;Foo is a whizboo baz&apos;</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>While <code>content</code> is unset, setting a property to be delegated will throw an\nError.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre>proxy = Ember.ObjectProxy.create({\n  content: <span class=\"literal\">null</span>,\n  flag: <span class=\"literal\">null</span>\n});\nproxy.<span class=\"keyword\">set</span>(<span class=\"string\">&apos;flag&apos;</span>, <span class=\"literal\">true</span>);\nproxy.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;flag&apos;</span>);         <span class=\"comment\">// true</span>\nproxy.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;foo&apos;</span>);          <span class=\"comment\">// undefined</span>\nproxy.<span class=\"keyword\">set</span>(<span class=\"string\">&apos;foo&apos;</span>, <span class=\"string\">&apos;data&apos;</span>);  <span class=\"comment\">// throws Error</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Delegated properties can be bound to and will change when content is updated.</p>\n<p>Computed properties on the proxy itself can depend on delegated properties.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td>\n              <td class=\"code\"><pre>ProxyWithComputedProperty = Ember.ObjectProxy.extend({\n  fullName: function() {\n    <span class=\"keyword\">var</span> firstName = <span class=\"keyword\">this</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;firstName&apos;</span>),\n        lastName = <span class=\"keyword\">this</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;lastName&apos;</span>);\n    <span class=\"keyword\">if</span> (firstName &amp;&amp; lastName) {\n      <span class=\"keyword\">return</span> firstName + <span class=\"string\">&apos; &apos;</span> + lastName;\n    }\n    <span class=\"keyword\">return</span> firstName || lastName;\n  }.property(<span class=\"string\">&apos;firstName&apos;</span>, <span class=\"string\">&apos;lastName&apos;</span>)\n});\n\nproxy = ProxyWithComputedProperty.create();\n\nproxy.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;fullName&apos;</span>);  <span class=\"comment\">// undefined</span>\nproxy.<span class=\"keyword\">set</span>(<span class=\"string\">&apos;content&apos;</span>, {\n  firstName: <span class=\"string\">&apos;Tom&apos;</span>, lastName: <span class=\"string\">&apos;Dale&apos;</span>\n}); <span class=\"comment\">// triggers property change for fullName on proxy</span>\n\nproxy.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;fullName&apos;</span>);  <span class=\"comment\">// &apos;Tom Dale&apos;</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "extends": "Ember._ProxyMixin",
      "access": "public",
      "tagname": "",
      "methods": [],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": {
          "id": "Ember._ProxyMixin",
          "type": "missing"
        }
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-2.4.5-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.4.5",
          "type": "project-version"
        }
      }
    }
  }
}