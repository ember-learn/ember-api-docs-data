{
  "data": {
    "id": "ember-3.17.0-@ember/object/compat",
    "type": "class",
    "attributes": {
      "name": "@ember/object/compat",
      "shortname": "@ember/object/compat",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember/object",
      "namespace": "",
      "methods": [
        {
          "file": "packages/@ember/object/compat.ts",
          "line": 34,
          "description": "<html><head></head><body><p><code>@dependentKeyCompat</code> is decorator that can be used on <em>native getters</em> that\nuse tracked properties. It exposes the getter to Ember&apos;s classic computed\nproperty and observer systems, so they can watch it for changes. It can be\nused in both native and classic classes.</p>\n<p>Native Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { tracked } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@glimmer/tracking&apos;</span>;\n<span class=\"keyword\">import</span> { dependentKeyCompat } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/object/compat&apos;</span>;\n<span class=\"keyword\">import</span> { computed, <span class=\"keyword\">set</span> } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/object&apos;</span>;\n\n<span class=\"keyword\">class</span> Person {\n  <span class=\"meta\">@tracked</span> firstName;\n  <span class=\"meta\">@tracked</span> lastName;\n\n  <span class=\"meta\">@dependentKeyCompat</span>\n  <span class=\"keyword\">get</span> fullName() {\n    <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">this</span>.firstName}</span> <span class=\"subst\">${<span class=\"keyword\">this</span>.lastName}</span>`</span>;\n  }\n}\n\n<span class=\"keyword\">class</span> Profile {\n  <span class=\"keyword\">constructor</span>(<span class=\"params\">person</span>) {\n    <span class=\"keyword\">set</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&apos;person&apos;</span>, person);\n  }\n\n  <span class=\"meta\">@computed</span>(<span class=\"string\">&apos;person.fullName&apos;</span>)\n  <span class=\"keyword\">get</span> helloMessage() {\n    <span class=\"keyword\">return</span> <span class=\"string\">`Hello, <span class=\"subst\">${<span class=\"keyword\">this</span>.person.fullName}</span>!`</span>;\n  }\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Classic Example:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> { tracked } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@glimmer/tracking&apos;</span>;\n<span class=\"keyword\">import</span> { dependentKeyCompat } <span class=\"keyword\">from</span> <span class=\"string\">&apos;@ember/object/compat&apos;</span>;\n<span class=\"keyword\">import</span> EmberObject, { computed, observer, <span class=\"keyword\">set</span> } from &apos;@ember/object&apos;;\n\nconst Person = EmberObject.extend({\n  firstName: tracked(),\n  <span class=\"attr\">lastName</span>: tracked(),\n\n  <span class=\"attr\">fullName</span>: dependentKeyCompat(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{\n    <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">this</span>.firstName}</span> <span class=\"subst\">${<span class=\"keyword\">this</span>.lastName}</span>`</span>;\n  }),\n});\n\n<span class=\"keyword\">const</span> Profile = EmberObject.extend({\n  <span class=\"attr\">person</span>: <span class=\"literal\">null</span>,\n\n  <span class=\"attr\">helloMessage</span>: computed(<span class=\"string\">&apos;person.fullName&apos;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{\n    <span class=\"keyword\">return</span> <span class=\"string\">`Hello, <span class=\"subst\">${<span class=\"keyword\">this</span>.person.fullName}</span>!`</span>;\n  }),\n\n  <span class=\"attr\">onNameUpdated</span>: observer(<span class=\"string\">&apos;person.fullName&apos;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{\n    <span class=\"built_in\">console</span>.log(<span class=\"string\">&apos;person name updated!&apos;</span>);\n  }),\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p><code>dependentKeyCompat()</code> can receive a getter function or an object containing\n<code>get</code>/<code>set</code> methods when used in classic classes, like computed properties.</p>\n<p>In general, only properties which you <em>expect</em> to be watched by older,\nuntracked clases should be marked as dependency compatible. The decorator is\nmeant as an interop layer for parts of Ember&apos;s older classic APIs, and should\nnot be applied to every possible getter/setter in classes. The number of\ndependency compatible getters should be <em>minimized</em> wherever possible. New\napplication code should not need to use <code>@dependentKeyCompat</code>, since it is\nonly for interoperation with older code.</p>\n</body></html>",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "dependentKeyCompat",
          "static": 1,
          "params": [
            {
              "name": "desc",
              "description": "A property descriptor containing\n                                           the getter and setter (when used in\n                                           classic classes)",
              "type": "PropertyDescriptor|undefined"
            }
          ],
          "return": {
            "description": "property decorator instance",
            "type": "PropertyDecorator"
          },
          "class": "@ember/object/compat",
          "module": "@ember/object"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-3.17.0-@ember/object",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-3.17.0",
          "type": "project-version"
        }
      }
    }
  }
}