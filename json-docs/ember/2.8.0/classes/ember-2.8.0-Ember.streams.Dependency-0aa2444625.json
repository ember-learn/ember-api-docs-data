{
  "data": {
    "id": "ember-2.8.0-Ember.streams.Dependency",
    "type": "class",
    "attributes": {
      "name": "Ember.streams.Dependency",
      "shortname": "Ember.streams.Dependency",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember-metal",
      "namespace": "Ember.streams",
      "file": "packages/ember-htmlbars/lib/streams/dependency.js",
      "line": 14,
      "access": "private",
      "tagname": "",
      "is_constructor": 1,
      "methods": [
        {
          "file": "packages/ember-htmlbars/lib/streams/class_name_binding.js",
          "line": 7,
          "description": "<html><head></head><body><p>Parse a path and return an object which holds the parsed properties.</p>\n<p>For example a path like &quot;content.isEnabled:enabled:disabled&quot; will return the\nfollowing object:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n</pre></td>\n              <td class=\"code\"><pre>{\n  <span class=\"attribute\">path</span>: <span class=\"string\">&quot;content.isEnabled&quot;</span>,\n  className: <span class=\"string\">&quot;enabled&quot;</span>,\n  falsyClassName: <span class=\"string\">&quot;disabled&quot;</span>,\n  classNames: <span class=\"string\">&quot;:enabled:disabled&quot;</span>\n}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "parsePropertyPath",
          "static": 1,
          "access": "private",
          "tagname": "",
          "class": "Ember.streams.Dependency",
          "module": "ember"
        },
        {
          "file": "packages/ember-htmlbars/lib/streams/class_name_binding.js",
          "line": 53,
          "description": "<html><head></head><body><p>Get the class name for a given value, based on the path, optional\n<code>className</code> and optional <code>falsyClassName</code>.</p>\n<ul>\n<li>if a <code>className</code> or <code>falsyClassName</code> has been specified:<ul>\n<li>if the value is truthy and <code>className</code> has been specified,\n<code>className</code> is returned</li>\n<li>if the value is falsy and <code>falsyClassName</code> has been specified,\n<code>falsyClassName</code> is returned</li>\n<li>otherwise <code>null</code> is returned</li>\n</ul>\n</li>\n<li>if the value is <code>true</code>, the dasherized last part of the supplied path\nis returned</li>\n<li>if the value is not <code>false</code>, <code>undefined</code> or <code>null</code>, the <code>value</code>\nis returned</li>\n<li>if none of the above rules apply, <code>null</code> is returned</li>\n</ul>\n</body></html>",
          "itemtype": "method",
          "name": "classStringForValue",
          "params": [
            {
              "name": "path",
              "description": ""
            },
            {
              "name": "val",
              "description": ""
            },
            {
              "name": "className",
              "description": ""
            },
            {
              "name": "falsyClassName",
              "description": ""
            }
          ],
          "static": 1,
          "access": "private",
          "tagname": "",
          "class": "Ember.streams.Dependency",
          "module": "ember"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-2.8.0-ember-metal",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.8.0",
          "type": "project-version"
        }
      }
    }
  }
}