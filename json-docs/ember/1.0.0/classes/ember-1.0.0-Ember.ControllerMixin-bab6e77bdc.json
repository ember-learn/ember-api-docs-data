{
  "data": {
    "id": "ember-1.0.0-Ember.ControllerMixin",
    "type": "class",
    "attributes": {
      "name": "Ember.ControllerMixin",
      "shortname": "Ember.ControllerMixin",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "Ember.ArrayController",
        "Ember.Controller",
        "Ember.ObjectController"
      ],
      "module": "ember",
      "submodule": "ember-views",
      "namespace": "Ember",
      "file": "packages/ember-views/lib/system/controller.js",
      "line": 11,
      "description": "<html><head></head><body><p>Additional methods for the ControllerMixin</p>\n</body></html>",
      "methods": [
        {
          "file": "packages/ember-routing/lib/ext/controller.js",
          "line": 9,
          "description": "<html><head></head><body><p>Transition the application into another route. The route may\nbe either a single route or route path:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n</pre></td>\n              <td class=\"code\"><pre>  aController.transition<span class=\"constructor\">ToRoute(&apos;<span class=\"params\">blogPosts</span>&apos;)</span>;\n  aController.transition<span class=\"constructor\">ToRoute(&apos;<span class=\"params\">blogPosts</span>.<span class=\"params\">recentEntries</span>&apos;)</span>;</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Optionally supply a model for the route in question. The model\nwill be serialized into the URL using the <code>serialize</code> hook of\nthe route:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre>  aController.transition<span class=\"constructor\">ToRoute(&apos;<span class=\"params\">blogPost</span>&apos;, <span class=\"params\">aPost</span>)</span>;</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "params": [
            {
              "name": "name",
              "description": "the name of the route",
              "type": "String"
            },
            {
              "name": "models",
              "description": "the",
              "type": "...Object"
            }
          ],
          "itemtype": "method",
          "name": "transitionToRoute",
          "class": "Ember.ControllerMixin",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-routing/lib/ext/controller.js",
          "line": 38,
          "deprecated": true,
          "itemtype": "method",
          "name": "transitionTo",
          "class": "Ember.ControllerMixin",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-routing/lib/ext/controller.js",
          "line": 48,
          "description": "<html><head></head><body><p>Alernative to <code>transitionToRoute</code>.  Transition the application into another route. The route may\nbe either a single route or route path:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n</pre></td>\n              <td class=\"code\"><pre>  aController.replace<span class=\"constructor\">Route(&apos;<span class=\"params\">blogPosts</span>&apos;)</span>;\n  aController.replace<span class=\"constructor\">Route(&apos;<span class=\"params\">blogPosts</span>.<span class=\"params\">recentEntries</span>&apos;)</span>;</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Optionally supply a model for the route in question. The model\nwill be serialized into the URL using the <code>serialize</code> hook of\nthe route:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre>  aController.replace<span class=\"constructor\">Route(&apos;<span class=\"params\">blogPost</span>&apos;, <span class=\"params\">aPost</span>)</span>;</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "params": [
            {
              "name": "name",
              "description": "the name of the route",
              "type": "String"
            },
            {
              "name": "models",
              "description": "the",
              "type": "...Object"
            }
          ],
          "itemtype": "method",
          "name": "replaceRoute",
          "class": "Ember.ControllerMixin",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-routing/lib/ext/controller.js",
          "line": 77,
          "deprecated": true,
          "itemtype": "method",
          "name": "replaceWith",
          "class": "Ember.ControllerMixin",
          "module": "ember",
          "submodule": "ember-routing",
          "namespace": "Ember"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "packages/ember-application/lib/ext/controller.js",
          "line": 31,
          "description": "<html><head></head><body><p>An array of other controller objects available inside\ninstances of this controller via the <code>controllers</code>\nproperty:</p>\n<p>For example, when you define a controller:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n</pre></td>\n              <td class=\"code\"><pre>App.CommentsController = <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Ember</span>.</span><span class=\"module\"><span class=\"identifier\">ArrayController</span>.</span></span>extend({\n  needs: <span class=\"literal\">[&apos;<span class=\"identifier\">post</span>&apos;]</span>\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The application&apos;s single instance of these other\ncontrollers are accessible by name through the\n<code>controllers</code> property:</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n</pre></td>\n              <td class=\"code\"><pre>this.get(&apos;controllers.post&apos;); //<span class=\"built_in\"> instance </span>of App.PostController</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>This is only available for singleton controllers.</p>\n</body></html>",
          "itemtype": "property",
          "name": "needs",
          "type": "Array",
          "default": "[]",
          "class": "Ember.ControllerMixin",
          "module": "ember",
          "submodule": "ember-application",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-application/lib/ext/controller.js",
          "line": 78,
          "description": "<html><head></head><body><p>Stores the instances of other controllers available from within\nthis controller. Any controller listed by name in the <code>needs</code>\nproperty will be accessible by name through this property.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td>\n              <td class=\"code\"><pre>App.CommentsController = Ember.ArrayController.extend({\n  needs: [<span class=\"string\">&apos;post&apos;</span>],\n  postTitle: function(){\n    <span class=\"keyword\">var</span> currentPost = <span class=\"keyword\">this</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;controllers.post&apos;</span>); <span class=\"comment\">// instance of App.PostController</span>\n    <span class=\"keyword\">return</span> currentPost.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;title&apos;</span>);\n  }.property(<span class=\"string\">&apos;controllers.post.title&apos;</span>)\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "see": [
            "{Ember.ControllerMixin#needs}"
          ],
          "itemtype": "property",
          "name": "controllers",
          "type": "Object",
          "default": "null",
          "class": "Ember.ControllerMixin",
          "module": "ember",
          "submodule": "ember-application",
          "namespace": "Ember"
        },
        {
          "file": "packages/ember-runtime/lib/controllers/controller.js",
          "line": 23,
          "description": "<html><head></head><body><p>The object to which actions from the view should be sent.</p>\n<p>For example, when a Handlebars template uses the <code>{{action}}</code> helper,\nit will attempt to send the action to the view&apos;s controller&apos;s <code>target</code>.</p>\n<p>By default, a controller&apos;s <code>target</code> is set to the router after it is\ninstantiated by <code>Ember.Application#initialize</code>.</p>\n</body></html>",
          "itemtype": "property",
          "name": "target",
          "default": "null",
          "class": "Ember.ControllerMixin",
          "module": "ember",
          "submodule": "ember-runtime",
          "namespace": "Ember"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-1.0.0-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-1.0.0",
          "type": "project-version"
        }
      }
    }
  }
}