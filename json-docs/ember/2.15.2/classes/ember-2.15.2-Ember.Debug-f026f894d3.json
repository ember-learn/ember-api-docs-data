{
  "data": {
    "id": "ember-2.15.2-Ember.Debug",
    "type": "class",
    "attributes": {
      "name": "Ember.Debug",
      "shortname": "Ember.Debug",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember",
      "submodule": "ember-debug",
      "namespace": "",
      "file": "packages/ember/lib/index.js",
      "line": 52,
      "access": "public",
      "tagname": "",
      "methods": [
        {
          "file": "packages/ember-debug/lib/deprecate.js",
          "line": 16,
          "description": "<html><head></head><body><p>Allows for runtime registration of handler functions that override the default deprecation behavior.\nDeprecations are invoked by calls to <a href=\"https://emberjs.com/api/classes/Ember.html#method_deprecate\">Ember.deprecate</a>.\nThe following example demonstrates its usage by registering a handler that throws an error if the\nmessage contains the word &quot;should&quot;, otherwise defers to the default handler.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n</pre></td>\n              <td class=\"code\"><pre><span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Ember</span>.</span><span class=\"module\"><span class=\"identifier\">Debug</span>.</span></span>register<span class=\"constructor\">DeprecationHandler((<span class=\"params\">message</span>, <span class=\"params\">options</span>, <span class=\"params\">next</span>)</span> =&gt; {\n  <span class=\"keyword\">if</span> (message.index<span class=\"constructor\">Of(&apos;<span class=\"params\">should</span>&apos;)</span> !== -<span class=\"number\">1</span>) {\n    throw <span class=\"keyword\">new</span> <span class=\"constructor\">Error(`Deprecation <span class=\"params\">message</span> <span class=\"params\">with</span> <span class=\"params\">should</span>: ${<span class=\"params\">message</span>}`)</span>;\n  } <span class=\"keyword\">else</span> {\n    <span class=\"comment\">// defer to whatever handler was registered before this one</span>\n    next(message, options);\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The handler function takes the following arguments:</p>\n<ul>\n  <li> <code>message</code> - The message received from the deprecation call.</li>\n  <li> <code>options</code> - An object passed in with the deprecation call containing additional information including:</li>\n    <ul>\n      <li> <code>id</code> - An id of the deprecation in the form of <code>package-name.specific-deprecation</code>.</li>\n      <li> <code>until</code> - The Ember version number the feature and deprecation will be removed in.</li>\n    </ul>\n  <li> <code>next</code> - A function that calls into the previously registered handler.</li>\n</ul></body></html>",
          "access": "public",
          "tagname": "",
          "static": 1,
          "itemtype": "method",
          "name": "registerDeprecationHandler",
          "params": [
            {
              "name": "handler",
              "description": "A function to handle deprecation calls.",
              "type": "Function"
            }
          ],
          "since": "2.1.0",
          "class": "Ember.Debug",
          "module": "ember",
          "submodule": "ember-debug"
        },
        {
          "file": "packages/ember-debug/lib/warn.js",
          "line": 17,
          "description": "<html><head></head><body><p>Allows for runtime registration of handler functions that override the default warning behavior.\nWarnings are invoked by calls made to <a href=\"https://emberjs.com/api/classes/Ember.html#method_warn\">Ember.warn</a>.\nThe following example demonstrates its usage by registering a handler that does nothing overriding Ember&apos;s\ndefault warning behavior.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n</pre></td>\n              <td class=\"code\"><pre><span class=\"regexp\">//</span> next <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> called, so <span class=\"literal\">no</span> warnings get the <span class=\"keyword\">default</span> behavior\nEmber.Debug.registerWarnHandler(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> {});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>The handler function takes the following arguments:</p>\n<ul>\n  <li> <code>message</code> - The message received from the warn call. </li>\n  <li> <code>options</code> - An object passed in with the warn call containing additional information including:</li>\n    <ul>\n      <li> <code>id</code> - An id of the warning in the form of <code>package-name.specific-warning</code>.</li>\n    </ul>\n  <li> <code>next</code> - A function that calls into the previously registered handler.</li>\n</ul></body></html>",
          "access": "public",
          "tagname": "",
          "static": 1,
          "itemtype": "method",
          "name": "registerWarnHandler",
          "params": [
            {
              "name": "handler",
              "description": "A function to handle warnings.",
              "type": "Function"
            }
          ],
          "since": "2.1.0",
          "class": "Ember.Debug",
          "module": "ember",
          "submodule": "ember-debug"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-2.15.2-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.15.2",
          "type": "project-version"
        }
      }
    }
  }
}