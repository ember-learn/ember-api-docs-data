{
  "data": {
    "id": "ember-3.1.1-@ember/object/computed",
    "type": "module",
    "attributes": {
      "name": "@ember/object/computed",
      "submodules": {},
      "elements": {},
      "fors": {
        "@ember/object": 1
      },
      "namespaces": {},
      "tag": "module",
      "file": "packages/ember-metal/lib/expand_properties.js",
      "line": 3,
      "parent": null,
      "publicclasses": [],
      "privateclasses": [],
      "staticfunctions": {
        "@ember/object": [
          {
            "file": "packages/ember-metal/lib/expand_properties.js",
            "line": 9,
            "description": "Expands `pattern`, invoking `callback` for each expansion.\n\nThe only pattern supported is brace-expansion, anything else will be passed\nonce to `callback` directly.\n\nExample\n\n```js\nimport { expandProperties } from '@ember/object/computed';\n\nfunction echo(arg){ console.log(arg); }\n\nexpandProperties('foo.bar', echo);              //=> 'foo.bar'\nexpandProperties('{foo,bar}', echo);            //=> 'foo', 'bar'\nexpandProperties('foo.{bar,baz}', echo);        //=> 'foo.bar', 'foo.baz'\nexpandProperties('{foo,bar}.baz', echo);        //=> 'foo.baz', 'bar.baz'\nexpandProperties('foo.{bar,baz}.[]', echo)      //=> 'foo.bar.[]', 'foo.baz.[]'\nexpandProperties('{foo,bar}.{spam,eggs}', echo) //=> 'foo.spam', 'foo.eggs', 'bar.spam', 'bar.eggs'\nexpandProperties('{foo}.bar.{baz}')             //=> 'foo.bar.baz'\n```",
            "itemtype": "method",
            "name": "expandProperties",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "pattern",
                "description": "The property pattern to expand.",
                "type": "String"
              },
              {
                "name": "callback",
                "description": "The callback to invoke.  It is invoked once per\nexpansion, and is passed the expansion.",
                "type": "Function"
              }
            ],
            "class": "@ember/object",
            "module": "@ember/object/computed",
            "version": "3.1.1",
            "since": "3.1.1"
          }
        ]
      },
      "allstaticfunctions": {
        "@ember/object": [
          {
            "file": "packages/ember-metal/lib/expand_properties.js",
            "line": 9,
            "description": "Expands `pattern`, invoking `callback` for each expansion.\n\nThe only pattern supported is brace-expansion, anything else will be passed\nonce to `callback` directly.\n\nExample\n\n```js\nimport { expandProperties } from '@ember/object/computed';\n\nfunction echo(arg){ console.log(arg); }\n\nexpandProperties('foo.bar', echo);              //=> 'foo.bar'\nexpandProperties('{foo,bar}', echo);            //=> 'foo', 'bar'\nexpandProperties('foo.{bar,baz}', echo);        //=> 'foo.bar', 'foo.baz'\nexpandProperties('{foo,bar}.baz', echo);        //=> 'foo.baz', 'bar.baz'\nexpandProperties('foo.{bar,baz}.[]', echo)      //=> 'foo.bar.[]', 'foo.baz.[]'\nexpandProperties('{foo,bar}.{spam,eggs}', echo) //=> 'foo.spam', 'foo.eggs', 'bar.spam', 'bar.eggs'\nexpandProperties('{foo}.bar.{baz}')             //=> 'foo.bar.baz'\n```",
            "itemtype": "method",
            "name": "expandProperties",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
              {
                "name": "pattern",
                "description": "The property pattern to expand.",
                "type": "String"
              },
              {
                "name": "callback",
                "description": "The callback to invoke.  It is invoked once per\nexpansion, and is passed the expansion.",
                "type": "Function"
              }
            ],
            "class": "@ember/object",
            "module": "@ember/object/computed",
            "version": "3.1.1",
            "since": "3.1.1"
          }
        ]
      },
      "version": "3.1.1"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-3.1.1",
          "type": "project-version"
        }
      }
    }
  }
}