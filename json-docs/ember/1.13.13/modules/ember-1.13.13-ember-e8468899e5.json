{
  "data": {
    "id": "ember-1.13.13-ember",
    "type": "module",
    "attributes": {
      "name": "ember",
      "submodules": {
        "ember-application": 1,
        "ember-debug": 1,
        "ember-extension-support": 1,
        "ember-htmlbars": 1,
        "ember-templates": 1,
        "ember-routing-htmlbars": 1,
        "ember-routing-views": 1,
        "ember-routing": 1,
        "ember-views": 1,
        "ember-runtime": 1,
        "ember-testing": 1
      },
      "fors": {
        "Ember.Handlebars": 1,
        "Ember.Templates.helpers": 1,
        "Ember.Handlebars.helpers": 1,
        "Ember.HTMLBars": 1,
        "Ember.String": 1,
        "Ember": 1,
        "Ember.computed": 1,
        "Ember.FEATURES": 1,
        "Ember.Logger": 1,
        "Ember.ControllerMixin": 1,
        "Ember.Route": 1,
        "Ember.inject": 1,
        "Function": 1,
        "String": 1,
        "Ember.NativeArray": 1
      },
      "namespaces": {
        "Ember": 1,
        "Ember.Instrumentation": 1,
        "Ember.Test": 1
      },
      "tag": "module",
      "file": "packages/ember-views/lib/views/view.js",
      "line": 60,
      "parent": null,
      "publicclasses": [
        "Ember.ControllerMixin",
        "Ember.Application",
        "Ember.DefaultResolver",
        "Ember.ContainerDebugAdapter",
        "Ember.DataAdapter",
        "Ember.Helper",
        "Ember.Binding",
        "Ember.ComputedProperty",
        "Ember.Error",
        "Ember.Logger",
        "Ember.Mixin",
        "Ember.Route",
        "Ember.Router",
        "Ember.Controller",
        "Ember.Array",
        "Ember.Evented",
        "Ember.MutableArray",
        "Ember.MutableEnumerable",
        "Ember.Observable",
        "Ember.PromiseProxyMixin",
        "Ember.ArrayProxy",
        "Ember.CoreObject",
        "Ember.Namespace",
        "Ember.NativeArray",
        "Ember.Object",
        "Ember.Service",
        "Ember.Test.Adapter",
        "Ember.Test.QUnitAdapter",
        "Ember.Test",
        "Ember.InstrumentationSupport",
        "Ember.VisibilitySupport",
        "Ember.Checkbox",
        "Ember.Component",
        "Ember.TextArea",
        "Ember.TextField"
      ],
      "privateclasses": [
        "RSVP.EventTarget",
        "RSVP.Promise",
        "HandlebarsCompatibleHelper",
        "Ember.InjectedProperty",
        "Libraries",
        "Backburner",
        "Ember.OrderedSet",
        "Ember.Map",
        "Ember.MapWithDefault",
        "Ember.LinkComponent",
        "Ember.HashLocation",
        "Ember.HistoryLocation",
        "Ember.NoneLocation",
        "RoutingService",
        "Ember.ReduceComputedProperty",
        "Ember.ArrayController",
        "Ember.ObjectController",
        "Ember.ProxyMixin",
        "Ember.ActionHandler",
        "Ember.Comparable",
        "Ember.Copyable",
        "Ember.Deferred",
        "Ember.Enumerable",
        "Ember.Freezable",
        "Ember.SortableMixin",
        "Ember.TargetActionSupport",
        "EachProxy",
        "Ember.ObjectProxy",
        "Ember.Set",
        "Ember.SubArray",
        "Ember.TrackedArray",
        "Ember._Metamorph",
        "Ember._MetamorphView",
        "Ember.RenderBuffer",
        "Ember.AriaRoleSupport",
        "Ember.ClassNamesSupport",
        "Ember.EmptyViewSupport",
        "Ember.LegacyViewSupport",
        "Ember.TemplateRenderingSupport",
        "Ember.TextSupport",
        "Ember.ViewTargetActionSupport",
        "Ember.EventDispatcher",
        "Ember.CollectionView",
        "Ember.ContainerView",
        "Ember.CoreView",
        "Ember.Select",
        "Ember.View"
      ],
      "staticfunctions": {
        "Ember.Application": [
          {
            "file": "packages/ember-application/lib/system/application.js",
            "line": 1058,
            "description": "This creates a registry with the default Ember naming conventions.\n\nIt also configures the registry:\n\n* registered views are created every time they are looked up (they are\n  not singletons)\n* registered templates are not factories; the registered value is\n  returned directly.\n* the router receives the application as its `namespace` property\n* all controllers receive the router as their `target` and `controllers`\n  properties\n* all controllers receive the application as their `namespace` property\n* the application view receives the application controller as its\n  `controller` property\n* the application view receives the application template as its\n  `defaultTemplate` property",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "buildRegistry",
            "static": 1,
            "params": [
              {
                "name": "namespace",
                "description": "the application for which to\n  build the registry",
                "type": "Ember.Application"
              }
            ],
            "return": {
              "description": "the built registry",
              "type": "Ember.Registry"
            },
            "class": "Ember.Application",
            "module": "ember",
            "submodule": "ember-application",
            "namespace": "Ember",
            "version": "1.13.13",
            "since": "1.13.13"
          }
        ],
        "Ember.Mixin": [
          {
            "file": "packages/ember-metal/lib/mixin.js",
            "line": 588,
            "itemtype": "method",
            "name": "create",
            "static": 1,
            "params": [
              {
                "name": "arguments",
                "description": "",
                "multiple": true
              }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ember.Mixin",
            "module": "ember",
            "submodule": "ember-metal",
            "namespace": "Ember",
            "version": "1.13.13",
            "since": "1.13.13"
          }
        ],
        "Ember.CoreObject": [
          {
            "file": "packages/ember-runtime/lib/system/core_object.js",
            "line": 603,
            "description": "Creates an instance of a class. Accepts either no arguments, or an object\ncontaining values to initialize the newly instantiated object with.\n\n```javascript\nApp.Person = Ember.Object.extend({\n  helloWorld: function() {\n    alert(\"Hi, my name is \" + this.get('name'));\n  }\n});\n\nvar tom = App.Person.create({\n  name: 'Tom Dale'\n});\n\ntom.helloWorld(); // alerts \"Hi, my name is Tom Dale\".\n```\n\n`create` will call the `init` function if defined during\n`Ember.AnyObject.extend`\n\nIf no arguments are passed to `create`, it will not set values to the new\ninstance during initialization:\n\n```javascript\nvar noName = App.Person.create();\nnoName.helloWorld(); // alerts undefined\n```\n\nNOTE: For performance reasons, you cannot declare methods or computed\nproperties during `create`. You should instead declare methods and computed\nproperties when using `extend`.",
            "itemtype": "method",
            "name": "create",
            "static": 1,
            "params": [
              {
                "name": "arguments",
                "description": "",
                "optional": true,
                "multiple": true
              }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ember.CoreObject",
            "module": "ember",
            "submodule": "ember-runtime",
            "namespace": "Ember",
            "version": "1.13.13",
            "since": "1.13.13"
          },
          {
            "file": "packages/ember-runtime/lib/system/core_object.js",
            "line": 481,
            "description": "Creates a new subclass.\n\n```javascript\nApp.Person = Ember.Object.extend({\n  say: function(thing) {\n    alert(thing);\n   }\n});\n```\n\nThis defines a new subclass of Ember.Object: `App.Person`. It contains one method: `say()`.\n\nYou can also create a subclass from any existing class by calling its `extend()`  method. For example, you might want to create a subclass of Ember's built-in `Ember.View` class:\n\n```javascript\nApp.PersonView = Ember.View.extend({\n  tagName: 'li',\n  classNameBindings: ['isAdministrator']\n});\n```\n\nWhen defining a subclass, you can override methods but still access the implementation of your parent class by calling the special `_super()` method:\n\n```javascript\nApp.Person = Ember.Object.extend({\n  say: function(thing) {\n    var name = this.get('name');\n    alert(name + ' says: ' + thing);\n  }\n});\n\nApp.Soldier = App.Person.extend({\n  say: function(thing) {\n    this._super(thing + \", sir!\");\n  },\n  march: function(numberOfHours) {\n    alert(this.get('name') + ' marches for ' + numberOfHours + ' hours.')\n  }\n});\n\nvar yehuda = App.Soldier.create({\n  name: \"Yehuda Katz\"\n});\n\nyehuda.say(\"Yes\");  // alerts \"Yehuda Katz says: Yes, sir!\"\n```\n\nThe `create()` on line #17 creates an *instance* of the `App.Soldier` class. The `extend()` on line #8 creates a *subclass* of `App.Person`. Any instance of the `App.Person` class will *not* have the `march()` method.\n\nYou can also pass `Mixin` classes to add additional properties to the subclass.\n\n```javascript\nApp.Person = Ember.Object.extend({\n  say: function(thing) {\n    alert(this.get('name') + ' says: ' + thing);\n  }\n});\n\nApp.SingingMixin = Mixin.create({\n  sing: function(thing){\n    alert(this.get('name') + ' sings: la la la ' + thing);\n  }\n});\n\nApp.BroadwayStar = App.Person.extend(App.SingingMixin, {\n  dance: function() {\n    alert(this.get('name') + ' dances: tap tap tap tap ');\n  }\n});\n```\n\nThe `App.BroadwayStar` class contains three methods: `say()`, `sing()`, and `dance()`.",
            "itemtype": "method",
            "name": "extend",
            "static": 1,
            "params": [
              {
                "name": "mixins",
                "description": "One or more Mixin classes",
                "type": "Mixin",
                "optional": true,
                "multiple": true
              },
              {
                "name": "arguments",
                "description": "Object containing values to use within the new class",
                "type": "Object",
                "optional": true,
                "multiple": true
              }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ember.CoreObject",
            "module": "ember",
            "submodule": "ember-runtime",
            "namespace": "Ember",
            "version": "1.13.13",
            "since": "1.13.13"
          }
        ],
        "Ember.Helper": [
          {
            "file": "packages/ember-htmlbars/lib/helper.js",
            "line": 91,
            "description": "In many cases, the ceremony of a full `Ember.Helper` class is not required.\nThe `helper` method create pure-function helpers without instances. For\nexample:\n\n```js\n// app/helpers/format-currency.js\nexport default Ember.Helper.helper(function(params, hash) {\n  let cents = params[0];\n  let currency = hash.currency;\n  return `${currency}${cents * 0.01}`;\n});\n```",
            "static": 1,
            "params": [
              {
                "name": "helper",
                "description": "The helper function",
                "type": "Function"
              }
            ],
            "itemtype": "method",
            "name": "helper",
            "access": "public",
            "tagname": "",
            "class": "Ember.Helper",
            "module": "ember",
            "submodule": "ember-templates",
            "version": "1.13.13",
            "since": "1.13.13"
          }
        ],
        "Ember.String": [
          {
            "file": "packages/ember-htmlbars/lib/utils/string.js",
            "line": 13,
            "description": "Mark a string as safe for unescaped output with Ember templates. If you\nreturn HTML from a helper, use this function to\nensure Ember's rendering layer does not escape the HTML.\n\n```javascript\nEmber.String.htmlSafe('<div>someString</div>')\n```",
            "itemtype": "method",
            "name": "htmlSafe",
            "static": 1,
            "return": {
              "description": "a string that will not be html escaped by Handlebars",
              "type": "Handlebars.SafeString"
            },
            "access": "public",
            "tagname": "",
            "class": "Ember.String",
            "module": "ember",
            "submodule": "ember-htmlbars",
            "version": "1.13.13",
            "since": "1.13.13"
          }
        ]
      },
      "version": "1.13.13"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-1.13.13",
          "type": "project-version"
        }
      }
    }
  }
}