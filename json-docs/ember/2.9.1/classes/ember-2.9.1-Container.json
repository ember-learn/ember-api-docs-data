{
  "data": {
    "id": "ember-2.9.1-Container",
    "type": "class",
    "attributes": {
      "name": "Container",
      "shortname": "Container",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember",
      "file": "packages/container/lib/container.js",
      "line": 10,
      "description": "A container used to instantiate and cache objects.\n\nEvery `Container` must be associated with a `Registry`, which is referenced\nto determine the factory and options that should be used to instantiate\nobjects.\n\nThe public API for `Container` is still in flux and should not be considered\nstable.",
      "access": "private",
      "tagname": "",
      "methods": [
        {
          "file": "packages/container/lib/container.js",
          "line": 71,
          "description": "Given a fullName return a corresponding instance.\n\nThe default behaviour is for lookup to return a singleton instance.\nThe singleton is scoped to the container, allowing multiple containers\nto all have their own locally scoped singletons.\n\n```javascript\nlet registry = new Registry();\nlet container = registry.container();\n\nregistry.register('api:twitter', Twitter);\n\nlet twitter = container.lookup('api:twitter');\n\ntwitter instanceof Twitter; // => true\n\n// by default the container will return singletons\nlet twitter2 = container.lookup('api:twitter');\ntwitter2 instanceof Twitter; // => true\n\ntwitter === twitter2; //=> true\n```\n\nIf singletons are not wanted, an optional flag can be provided at lookup.\n\n```javascript\nlet registry = new Registry();\nlet container = registry.container();\n\nregistry.register('api:twitter', Twitter);\n\nlet twitter = container.lookup('api:twitter', { singleton: false });\nlet twitter2 = container.lookup('api:twitter', { singleton: false });\n\ntwitter === twitter2; //=> false\n```",
          "access": "private",
          "tagname": "",
          "itemtype": "method",
          "name": "lookup",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object",
              "optional": true,
              "props": [
                {
                  "name": "source",
                  "description": "The fullname of the request source (used for local lookup)",
                  "type": "String",
                  "optional": true
                }
              ]
            }
          ],
          "return": {
            "description": "",
            "type": "Any"
          },
          "class": "Container"
        },
        {
          "file": "packages/container/lib/container.js",
          "line": 121,
          "description": "Given a fullName, return the corresponding factory.",
          "access": "private",
          "tagname": "",
          "itemtype": "method",
          "name": "lookupFactory",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object",
              "optional": true,
              "props": [
                {
                  "name": "source",
                  "description": "The fullname of the request source (used for local lookup)",
                  "type": "String",
                  "optional": true
                }
              ]
            }
          ],
          "return": {
            "description": "",
            "type": "Any"
          },
          "class": "Container"
        },
        {
          "file": "packages/container/lib/container.js",
          "line": 136,
          "description": "A depth first traversal, destroying the container, its descendant containers and all\ntheir managed objects.",
          "access": "private",
          "tagname": "",
          "itemtype": "method",
          "name": "destroy",
          "class": "Container"
        },
        {
          "file": "packages/container/lib/container.js",
          "line": 153,
          "description": "Clear either the entire cache or just the cache for a particular key.",
          "access": "private",
          "tagname": "",
          "itemtype": "method",
          "name": "reset",
          "params": [
            {
              "name": "fullName",
              "description": "optional key to reset; if missing, resets everything",
              "type": "String"
            }
          ],
          "class": "Container"
        },
        {
          "file": "packages/container/lib/container.js",
          "line": 168,
          "description": "Returns an object that can be used to provide an owner to a\nmanually created instance.",
          "access": "private",
          "tagname": "",
          "itemtype": "method",
          "name": "ownerInjection",
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "Container"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "packages/container/lib/container.js",
          "line": 35,
          "access": "private",
          "tagname": "",
          "itemtype": "property",
          "name": "owner",
          "type": "Object",
          "class": "Container"
        },
        {
          "file": "packages/container/lib/container.js",
          "line": 42,
          "access": "private",
          "tagname": "",
          "itemtype": "property",
          "name": "registry",
          "type": "Registry",
          "since": "1.11.0",
          "class": "Container"
        },
        {
          "file": "packages/container/lib/container.js",
          "line": 50,
          "access": "private",
          "tagname": "",
          "itemtype": "property",
          "name": "cache",
          "type": "InheritingDict",
          "class": "Container"
        },
        {
          "file": "packages/container/lib/container.js",
          "line": 57,
          "access": "private",
          "tagname": "",
          "itemtype": "property",
          "name": "factoryCache",
          "type": "InheritingDict",
          "class": "Container"
        },
        {
          "file": "packages/container/lib/container.js",
          "line": 64,
          "access": "private",
          "tagname": "",
          "itemtype": "property",
          "name": "validationCache",
          "type": "InheritingDict",
          "class": "Container"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-2.9.1-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.9.1",
          "type": "project-version"
        }
      }
    }
  }
}