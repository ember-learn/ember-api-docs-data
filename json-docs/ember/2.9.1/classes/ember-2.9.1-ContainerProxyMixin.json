{
  "data": {
    "id": "ember-2.9.1-ContainerProxyMixin",
    "type": "class",
    "attributes": {
      "name": "ContainerProxyMixin",
      "shortname": "ContainerProxyMixin",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "Ember.EngineInstance"
      ],
      "module": "ember",
      "submodule": "ember-runtime",
      "namespace": "",
      "file": "packages/ember-runtime/lib/mixins/container_proxy.js",
      "line": 10,
      "description": "ContainerProxyMixin is used to provide public access to specific\ncontainer functionality.",
      "access": "private",
      "tagname": "",
      "methods": [
        {
          "file": "packages/ember-runtime/lib/mixins/container_proxy.js",
          "line": 26,
          "description": "Returns an object that can be used to provide an owner to a\nmanually created instance.\n\nExample:\n\n```\nlet owner = Ember.getOwner(this);\n\nUser.create(\n  owner.ownerInjection(),\n  { username: 'rwjblue' }\n)\n```",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "ownerInjection",
          "return": {
            "description": "",
            "type": "Object"
          },
          "class": "ContainerProxyMixin",
          "module": "ember",
          "submodule": "ember-runtime"
        },
        {
          "file": "packages/ember-runtime/lib/mixins/container_proxy.js",
          "line": 49,
          "description": "Given a fullName return a corresponding instance.\n\nThe default behaviour is for lookup to return a singleton instance.\nThe singleton is scoped to the container, allowing multiple containers\nto all have their own locally scoped singletons.\n\n```javascript\nlet registry = new Registry();\nlet container = registry.container();\n\nregistry.register('api:twitter', Twitter);\n\nlet twitter = container.lookup('api:twitter');\n\ntwitter instanceof Twitter; // => true\n\n// by default the container will return singletons\nlet twitter2 = container.lookup('api:twitter');\ntwitter2 instanceof Twitter; // => true\n\ntwitter === twitter2; //=> true\n```\n\nIf singletons are not wanted an optional flag can be provided at lookup.\n\n```javascript\nlet registry = new Registry();\nlet container = registry.container();\n\nregistry.register('api:twitter', Twitter);\n\nlet twitter = container.lookup('api:twitter', { singleton: false });\nlet twitter2 = container.lookup('api:twitter', { singleton: false });\n\ntwitter === twitter2; //=> false\n```",
          "access": "public",
          "tagname": "",
          "itemtype": "method",
          "name": "lookup",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            },
            {
              "name": "options",
              "description": "",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Any"
          },
          "class": "ContainerProxyMixin",
          "module": "ember",
          "submodule": "ember-runtime"
        },
        {
          "file": "packages/ember-runtime/lib/mixins/container_proxy.js",
          "line": 97,
          "description": "Given a fullName return the corresponding factory.",
          "access": "private",
          "tagname": "",
          "itemtype": "method",
          "name": "_lookupFactory",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Any"
          },
          "class": "ContainerProxyMixin",
          "module": "ember",
          "submodule": "ember-runtime"
        },
        {
          "file": "packages/ember-runtime/lib/mixins/container_proxy.js",
          "line": 109,
          "description": "Given a name and a source path, resolve the fullName",
          "access": "private",
          "tagname": "",
          "itemtype": "method",
          "name": "_resolveLocalLookupName",
          "params": [
            {
              "name": "fullName",
              "description": "",
              "type": "String"
            },
            {
              "name": "source",
              "description": "",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "String"
          },
          "class": "ContainerProxyMixin",
          "module": "ember",
          "submodule": "ember-runtime"
        }
      ],
      "events": [],
      "properties": [
        {
          "file": "packages/ember-runtime/lib/mixins/container_proxy.js",
          "line": 18,
          "description": "The container stores state.",
          "access": "private",
          "tagname": "",
          "itemtype": "property",
          "name": "__container__",
          "type": "Ember.Container",
          "class": "ContainerProxyMixin",
          "module": "ember",
          "submodule": "ember-runtime"
        }
      ]
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-2.9.1-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.9.1",
          "type": "project-version"
        }
      }
    }
  }
}