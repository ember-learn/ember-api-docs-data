{
  "data": {
    "id": "ember-1.6.1-Ember.Handlebars.Compiler",
    "type": "class",
    "attributes": {
      "name": "Ember.Handlebars.Compiler",
      "shortname": "Ember.Handlebars.Compiler",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember",
      "submodule": "ember-handlebars-compiler",
      "namespace": "Ember.Handlebars",
      "file": "../packages_es6/ember-handlebars-compiler/lib/main.js",
      "line": 144,
      "description": "<html><head></head><body><p>Override the the opcode compiler and JavaScript compiler for Handlebars.</p>\n</body></html>",
      "access": "private",
      "tagname": "",
      "is_constructor": 1,
      "methods": [
        {
          "file": "../packages_es6/ember-handlebars-compiler/lib/main.js",
          "line": 233,
          "description": "<html><head></head><body><p>Rewrite simple mustaches from <code>{{foo}}</code> to <code>{{bind &quot;foo&quot;}}</code>. This means that\nall simple mustaches in Ember&apos;s Handlebars will also set up an observer to\nkeep the DOM up to date when the underlying property changes.</p>\n</body></html>",
          "access": "private",
          "tagname": "",
          "itemtype": "method",
          "name": "mustache",
          "params": [
            {
              "name": "mustache",
              "description": ""
            }
          ],
          "class": "Ember.Handlebars.Compiler",
          "module": "ember",
          "submodule": "ember-handlebars-compiler",
          "namespace": "Ember.Handlebars"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-1.6.1-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-1.6.1",
          "type": "project-version"
        }
      }
    }
  }
}